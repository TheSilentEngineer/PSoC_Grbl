ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"UART.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.UART_Init,"ax",%progbits
  19              		.align	2
  20              		.global	UART_Init
  21              		.thumb
  22              		.thumb_func
  23              		.type	UART_Init, %function
  24              	UART_Init:
  25              	.LFB1:
  26              		.file 1 "Generated_Source\\PSoC5\\UART.c"
   1:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/UART.c **** * File Name: UART.c
   3:Generated_Source\PSoC5/UART.c **** * Version 2.50
   4:Generated_Source\PSoC5/UART.c **** *
   5:Generated_Source\PSoC5/UART.c **** * Description:
   6:Generated_Source\PSoC5/UART.c **** *  This file provides all API functionality of the UART component
   7:Generated_Source\PSoC5/UART.c **** *
   8:Generated_Source\PSoC5/UART.c **** * Note:
   9:Generated_Source\PSoC5/UART.c **** *
  10:Generated_Source\PSoC5/UART.c **** ********************************************************************************
  11:Generated_Source\PSoC5/UART.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:Generated_Source\PSoC5/UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:Generated_Source\PSoC5/UART.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/UART.c **** 
  17:Generated_Source\PSoC5/UART.c **** #include "UART.h"
  18:Generated_Source\PSoC5/UART.c **** #if (UART_INTERNAL_CLOCK_USED)
  19:Generated_Source\PSoC5/UART.c ****     #include "UART_IntClock.h"
  20:Generated_Source\PSoC5/UART.c **** #endif /* End UART_INTERNAL_CLOCK_USED */
  21:Generated_Source\PSoC5/UART.c **** 
  22:Generated_Source\PSoC5/UART.c **** 
  23:Generated_Source\PSoC5/UART.c **** /***************************************
  24:Generated_Source\PSoC5/UART.c **** * Global data allocation
  25:Generated_Source\PSoC5/UART.c **** ***************************************/
  26:Generated_Source\PSoC5/UART.c **** 
  27:Generated_Source\PSoC5/UART.c **** uint8 UART_initVar = 0u;
  28:Generated_Source\PSoC5/UART.c **** 
  29:Generated_Source\PSoC5/UART.c **** #if (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED)
  30:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_txBuffer[UART_TX_BUFFER_SIZE];
  31:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_txBufferRead = 0u;
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 2


  32:Generated_Source\PSoC5/UART.c ****     uint8 UART_txBufferWrite = 0u;
  33:Generated_Source\PSoC5/UART.c **** #endif /* (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED) */
  34:Generated_Source\PSoC5/UART.c **** 
  35:Generated_Source\PSoC5/UART.c **** #if (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED))
  36:Generated_Source\PSoC5/UART.c ****     uint8 UART_errorStatus = 0u;
  37:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBuffer[UART_RX_BUFFER_SIZE];
  38:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferRead  = 0u;
  39:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferWrite = 0u;
  40:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferLoopDetect = 0u;
  41:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferOverflow   = 0u;
  42:Generated_Source\PSoC5/UART.c ****     #if (UART_RXHW_ADDRESS_ENABLED)
  43:Generated_Source\PSoC5/UART.c ****         volatile uint8 UART_rxAddressMode = UART_RX_ADDRESS_MODE;
  44:Generated_Source\PSoC5/UART.c ****         volatile uint8 UART_rxAddressDetected = 0u;
  45:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RXHW_ADDRESS_ENABLED) */
  46:Generated_Source\PSoC5/UART.c **** #endif /* (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED)) */
  47:Generated_Source\PSoC5/UART.c **** 
  48:Generated_Source\PSoC5/UART.c **** 
  49:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
  50:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Start
  51:Generated_Source\PSoC5/UART.c **** ********************************************************************************
  52:Generated_Source\PSoC5/UART.c **** *
  53:Generated_Source\PSoC5/UART.c **** * Summary:
  54:Generated_Source\PSoC5/UART.c **** *  This is the preferred method to begin component operation.
  55:Generated_Source\PSoC5/UART.c **** *  UART_Start() sets the initVar variable, calls the
  56:Generated_Source\PSoC5/UART.c **** *  UART_Init() function, and then calls the
  57:Generated_Source\PSoC5/UART.c **** *  UART_Enable() function.
  58:Generated_Source\PSoC5/UART.c **** *
  59:Generated_Source\PSoC5/UART.c **** * Parameters:
  60:Generated_Source\PSoC5/UART.c **** *  None.
  61:Generated_Source\PSoC5/UART.c **** *
  62:Generated_Source\PSoC5/UART.c **** * Return:
  63:Generated_Source\PSoC5/UART.c **** *  None.
  64:Generated_Source\PSoC5/UART.c **** *
  65:Generated_Source\PSoC5/UART.c **** * Global variables:
  66:Generated_Source\PSoC5/UART.c **** *  The UART_intiVar variable is used to indicate initial
  67:Generated_Source\PSoC5/UART.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:Generated_Source\PSoC5/UART.c **** *  and set to one (1u) the first time UART_Start() is called. This
  69:Generated_Source\PSoC5/UART.c **** *  allows for component initialization without re-initialization in all
  70:Generated_Source\PSoC5/UART.c **** *  subsequent calls to the UART_Start() routine.
  71:Generated_Source\PSoC5/UART.c **** *
  72:Generated_Source\PSoC5/UART.c **** * Reentrant:
  73:Generated_Source\PSoC5/UART.c **** *  No.
  74:Generated_Source\PSoC5/UART.c **** *
  75:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
  76:Generated_Source\PSoC5/UART.c **** void UART_Start(void) 
  77:Generated_Source\PSoC5/UART.c **** {
  78:Generated_Source\PSoC5/UART.c ****     /* If not initialized then initialize all required hardware and software */
  79:Generated_Source\PSoC5/UART.c ****     if(UART_initVar == 0u)
  80:Generated_Source\PSoC5/UART.c ****     {
  81:Generated_Source\PSoC5/UART.c ****         UART_Init();
  82:Generated_Source\PSoC5/UART.c ****         UART_initVar = 1u;
  83:Generated_Source\PSoC5/UART.c ****     }
  84:Generated_Source\PSoC5/UART.c **** 
  85:Generated_Source\PSoC5/UART.c ****     UART_Enable();
  86:Generated_Source\PSoC5/UART.c **** }
  87:Generated_Source\PSoC5/UART.c **** 
  88:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 3


  89:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
  90:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Init
  91:Generated_Source\PSoC5/UART.c **** ********************************************************************************
  92:Generated_Source\PSoC5/UART.c **** *
  93:Generated_Source\PSoC5/UART.c **** * Summary:
  94:Generated_Source\PSoC5/UART.c **** *  Initializes or restores the component according to the customizer Configure
  95:Generated_Source\PSoC5/UART.c **** *  dialog settings. It is not necessary to call UART_Init() because
  96:Generated_Source\PSoC5/UART.c **** *  the UART_Start() API calls this function and is the preferred
  97:Generated_Source\PSoC5/UART.c **** *  method to begin component operation.
  98:Generated_Source\PSoC5/UART.c **** *
  99:Generated_Source\PSoC5/UART.c **** * Parameters:
 100:Generated_Source\PSoC5/UART.c **** *  None.
 101:Generated_Source\PSoC5/UART.c **** *
 102:Generated_Source\PSoC5/UART.c **** * Return:
 103:Generated_Source\PSoC5/UART.c **** *  None.
 104:Generated_Source\PSoC5/UART.c **** *
 105:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/UART.c **** void UART_Init(void) 
 107:Generated_Source\PSoC5/UART.c **** {
  27              		.loc 1 107 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 08B5     		push	{r3, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
  34              		.cfi_offset 14, -4
 108:Generated_Source\PSoC5/UART.c ****     #if(UART_RX_ENABLED || UART_HD_ENABLED)
 109:Generated_Source\PSoC5/UART.c **** 
 110:Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 111:Generated_Source\PSoC5/UART.c ****             /* Set RX interrupt vector and priority */
 112:Generated_Source\PSoC5/UART.c ****             (void) CyIntSetVector(UART_RX_VECT_NUM, &UART_RXISR);
 113:Generated_Source\PSoC5/UART.c ****             CyIntSetPriority(UART_RX_VECT_NUM, UART_RX_PRIOR_NUM);
 114:Generated_Source\PSoC5/UART.c ****             UART_errorStatus = 0u;
 115:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 116:Generated_Source\PSoC5/UART.c **** 
 117:Generated_Source\PSoC5/UART.c ****         #if (UART_RXHW_ADDRESS_ENABLED)
 118:Generated_Source\PSoC5/UART.c ****             UART_SetRxAddressMode(UART_RX_ADDRESS_MODE);
 119:Generated_Source\PSoC5/UART.c ****             UART_SetRxAddress1(UART_RX_HW_ADDRESS1);
 120:Generated_Source\PSoC5/UART.c ****             UART_SetRxAddress2(UART_RX_HW_ADDRESS2);
 121:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 122:Generated_Source\PSoC5/UART.c **** 
 123:Generated_Source\PSoC5/UART.c ****         /* Init Count7 period */
 124:Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_PERIOD_REG = UART_RXBITCTR_INIT;
  35              		.loc 1 124 0
  36 0002 7222     		movs	r2, #114
  37 0004 0B4B     		ldr	r3, .L3
  38 0006 1A70     		strb	r2, [r3]
 125:Generated_Source\PSoC5/UART.c ****         /* Configure the Initial RX interrupt mask */
 126:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_MASK_REG  = UART_INIT_RX_INTERRUPTS_MASK;
  39              		.loc 1 126 0
  40 0008 2022     		movs	r2, #32
  41 000a 013B     		subs	r3, r3, #1
  42 000c 1A70     		strb	r2, [r3]
 127:Generated_Source\PSoC5/UART.c ****     #endif /* End UART_RX_ENABLED || UART_HD_ENABLED*/
 128:Generated_Source\PSoC5/UART.c **** 
 129:Generated_Source\PSoC5/UART.c ****     #if(UART_TX_ENABLED)
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 4


 130:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 131:Generated_Source\PSoC5/UART.c ****             /* Set TX interrupt vector and priority */
 132:Generated_Source\PSoC5/UART.c ****             (void) CyIntSetVector(UART_TX_VECT_NUM, &UART_TXISR);
  43              		.loc 1 132 0
  44 000e 0020     		movs	r0, #0
  45 0010 0949     		ldr	r1, .L3+4
  46 0012 FFF7FEFF 		bl	CyIntSetVector
  47              	.LVL0:
 133:Generated_Source\PSoC5/UART.c ****             CyIntSetPriority(UART_TX_VECT_NUM, UART_TX_PRIOR_NUM);
  48              		.loc 1 133 0
  49 0016 0020     		movs	r0, #0
  50 0018 0721     		movs	r1, #7
  51 001a FFF7FEFF 		bl	CyIntSetPriority
  52              	.LVL1:
 134:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 135:Generated_Source\PSoC5/UART.c **** 
 136:Generated_Source\PSoC5/UART.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:Generated_Source\PSoC5/UART.c ****         #if (UART_TXCLKGEN_DP)
 138:Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKGEN_CTR_REG = UART_BIT_CENTER;
  53              		.loc 1 138 0
  54 001e 0622     		movs	r2, #6
  55 0020 064B     		ldr	r3, .L3+8
  56 0022 1A70     		strb	r2, [r3]
 139:Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKTX_COMPLETE_REG = ((UART_NUMBER_OF_DATA_BITS +
  57              		.loc 1 139 0
  58 0024 4722     		movs	r2, #71
  59 0026 1033     		adds	r3, r3, #16
  60 0028 1A70     		strb	r2, [r3]
 140:Generated_Source\PSoC5/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_COUNT) - 1u;
 141:Generated_Source\PSoC5/UART.c ****         #else
 142:Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_PERIOD_REG = ((UART_NUMBER_OF_DATA_BITS +
 143:Generated_Source\PSoC5/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_8) - 1u;
 144:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 145:Generated_Source\PSoC5/UART.c **** 
 146:Generated_Source\PSoC5/UART.c ****         /* Configure the Initial TX interrupt mask */
 147:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 148:Generated_Source\PSoC5/UART.c ****             UART_TXSTATUS_MASK_REG = UART_TX_STS_FIFO_EMPTY;
  61              		.loc 1 148 0
  62 002a 0222     		movs	r2, #2
  63 002c 5133     		adds	r3, r3, #81
  64 002e 1A70     		strb	r2, [r3]
  65 0030 08BD     		pop	{r3, pc}
  66              	.L4:
  67 0032 00BF     		.align	2
  68              	.L3:
  69 0034 86650040 		.word	1073767814
  70 0038 00000000 		.word	UART_TXISR
  71 003c 23640040 		.word	1073767459
  72              		.cfi_endproc
  73              	.LFE1:
  74              		.size	UART_Init, .-UART_Init
  75              		.section	.text.UART_Enable,"ax",%progbits
  76              		.align	2
  77              		.global	UART_Enable
  78              		.thumb
  79              		.thumb_func
  80              		.type	UART_Enable, %function
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 5


  81              	UART_Enable:
  82              	.LFB2:
 149:Generated_Source\PSoC5/UART.c ****         #else
 150:Generated_Source\PSoC5/UART.c ****             UART_TXSTATUS_MASK_REG = UART_INIT_TX_INTERRUPTS_MASK;
 151:Generated_Source\PSoC5/UART.c ****         #endif /*End UART_TX_INTERRUPT_ENABLED*/
 152:Generated_Source\PSoC5/UART.c **** 
 153:Generated_Source\PSoC5/UART.c ****     #endif /* End UART_TX_ENABLED */
 154:Generated_Source\PSoC5/UART.c **** 
 155:Generated_Source\PSoC5/UART.c ****     #if(UART_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:Generated_Source\PSoC5/UART.c ****         UART_WriteControlRegister( \
 157:Generated_Source\PSoC5/UART.c ****             (UART_ReadControlRegister() & (uint8)~UART_CTRL_PARITY_TYPE_MASK) | \
 158:Generated_Source\PSoC5/UART.c ****             (uint8)(UART_PARITY_TYPE << UART_CTRL_PARITY_TYPE0_SHIFT) );
 159:Generated_Source\PSoC5/UART.c ****     #endif /* End UART_PARITY_TYPE_SW */
 160:Generated_Source\PSoC5/UART.c **** }
 161:Generated_Source\PSoC5/UART.c **** 
 162:Generated_Source\PSoC5/UART.c **** 
 163:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 164:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Enable
 165:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 166:Generated_Source\PSoC5/UART.c **** *
 167:Generated_Source\PSoC5/UART.c **** * Summary:
 168:Generated_Source\PSoC5/UART.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:Generated_Source\PSoC5/UART.c **** *  to call UART_Enable() because the UART_Start() API
 170:Generated_Source\PSoC5/UART.c **** *  calls this function, which is the preferred method to begin component
 171:Generated_Source\PSoC5/UART.c **** *  operation.
 172:Generated_Source\PSoC5/UART.c **** 
 173:Generated_Source\PSoC5/UART.c **** * Parameters:
 174:Generated_Source\PSoC5/UART.c **** *  None.
 175:Generated_Source\PSoC5/UART.c **** *
 176:Generated_Source\PSoC5/UART.c **** * Return:
 177:Generated_Source\PSoC5/UART.c **** *  None.
 178:Generated_Source\PSoC5/UART.c **** *
 179:Generated_Source\PSoC5/UART.c **** * Global Variables:
 180:Generated_Source\PSoC5/UART.c **** *  UART_rxAddressDetected - set to initial state (0).
 181:Generated_Source\PSoC5/UART.c **** *
 182:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 183:Generated_Source\PSoC5/UART.c **** void UART_Enable(void) 
 184:Generated_Source\PSoC5/UART.c **** {
  83              		.loc 1 184 0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 0, uses_anonymous_args = 0
  87 0000 10B5     		push	{r4, lr}
  88              		.cfi_def_cfa_offset 8
  89              		.cfi_offset 4, -8
  90              		.cfi_offset 14, -4
 185:Generated_Source\PSoC5/UART.c ****     uint8 enableInterrupts;
 186:Generated_Source\PSoC5/UART.c ****     enableInterrupts = CyEnterCriticalSection();
  91              		.loc 1 186 0
  92 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  93              	.LVL2:
  94 0006 0446     		mov	r4, r0
  95              	.LVL3:
 187:Generated_Source\PSoC5/UART.c **** 
 188:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 189:Generated_Source\PSoC5/UART.c ****         /* RX Counter (Count7) Enable */
 190:Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 6


  96              		.loc 1 190 0
  97 0008 0D4A     		ldr	r2, .L7
  98 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  99 000c 43F02003 		orr	r3, r3, #32
 100 0010 1370     		strb	r3, [r2]
 191:Generated_Source\PSoC5/UART.c **** 
 192:Generated_Source\PSoC5/UART.c ****         /* Enable the RX Interrupt */
 193:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_ACTL_REG  |= UART_INT_ENABLE;
 101              		.loc 1 193 0
 102 0012 013A     		subs	r2, r2, #1
 103 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 104 0016 43F01003 		orr	r3, r3, #16
 105 001a 1370     		strb	r3, [r2]
 194:Generated_Source\PSoC5/UART.c **** 
 195:Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 196:Generated_Source\PSoC5/UART.c ****             UART_EnableRxInt();
 197:Generated_Source\PSoC5/UART.c **** 
 198:Generated_Source\PSoC5/UART.c ****             #if (UART_RXHW_ADDRESS_ENABLED)
 199:Generated_Source\PSoC5/UART.c ****                 UART_rxAddressDetected = 0u;
 200:Generated_Source\PSoC5/UART.c ****             #endif /* (UART_RXHW_ADDRESS_ENABLED) */
 201:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 202:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 203:Generated_Source\PSoC5/UART.c **** 
 204:Generated_Source\PSoC5/UART.c ****     #if(UART_TX_ENABLED)
 205:Generated_Source\PSoC5/UART.c ****         /* TX Counter (DP/Count7) Enable */
 206:Generated_Source\PSoC5/UART.c ****         #if(!UART_TXCLKGEN_DP)
 207:Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
 208:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 209:Generated_Source\PSoC5/UART.c **** 
 210:Generated_Source\PSoC5/UART.c ****         /* Enable the TX Interrupt */
 211:Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_ACTL_REG |= UART_INT_ENABLE;
 106              		.loc 1 211 0
 107 001c A2F20112 		subw	r2, r2, #257
 108 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 109 0022 43F01003 		orr	r3, r3, #16
 110 0026 1370     		strb	r3, [r2]
 212:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 213:Generated_Source\PSoC5/UART.c ****             UART_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 111              		.loc 1 213 0
 112 0028 0123     		movs	r3, #1
 113 002a 064A     		ldr	r2, .L7+4
 114 002c 1360     		str	r3, [r2]
 214:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
 115              		.loc 1 214 0
 116 002e A2F5C072 		sub	r2, r2, #384
 117 0032 1360     		str	r3, [r2]
 215:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 216:Generated_Source\PSoC5/UART.c ****      #endif /* (UART_TX_INTERRUPT_ENABLED) */
 217:Generated_Source\PSoC5/UART.c **** 
 218:Generated_Source\PSoC5/UART.c ****     #if (UART_INTERNAL_CLOCK_USED)
 219:Generated_Source\PSoC5/UART.c ****         UART_IntClock_Start();  /* Enable the clock */
 118              		.loc 1 219 0
 119 0034 FFF7FEFF 		bl	UART_IntClock_Start
 120              	.LVL4:
 220:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 221:Generated_Source\PSoC5/UART.c **** 
 222:Generated_Source\PSoC5/UART.c ****     CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 7


 121              		.loc 1 222 0
 122 0038 2046     		mov	r0, r4
 123 003a FFF7FEFF 		bl	CyExitCriticalSection
 124              	.LVL5:
 125 003e 10BD     		pop	{r4, pc}
 126              	.LVL6:
 127              	.L8:
 128              		.align	2
 129              	.L7:
 130 0040 96650040 		.word	1073767830
 131 0044 80E200E0 		.word	-536812928
 132              		.cfi_endproc
 133              	.LFE2:
 134              		.size	UART_Enable, .-UART_Enable
 135              		.section	.text.UART_Start,"ax",%progbits
 136              		.align	2
 137              		.global	UART_Start
 138              		.thumb
 139              		.thumb_func
 140              		.type	UART_Start, %function
 141              	UART_Start:
 142              	.LFB0:
  77:Generated_Source\PSoC5/UART.c ****     /* If not initialized then initialize all required hardware and software */
 143              		.loc 1 77 0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147 0000 08B5     		push	{r3, lr}
 148              		.cfi_def_cfa_offset 8
 149              		.cfi_offset 3, -8
 150              		.cfi_offset 14, -4
  79:Generated_Source\PSoC5/UART.c ****     {
 151              		.loc 1 79 0
 152 0002 054B     		ldr	r3, .L12
 153 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 154 0006 23B9     		cbnz	r3, .L10
  81:Generated_Source\PSoC5/UART.c ****         UART_initVar = 1u;
 155              		.loc 1 81 0
 156 0008 FFF7FEFF 		bl	UART_Init
 157              	.LVL7:
  82:Generated_Source\PSoC5/UART.c ****     }
 158              		.loc 1 82 0
 159 000c 0122     		movs	r2, #1
 160 000e 024B     		ldr	r3, .L12
 161 0010 1A70     		strb	r2, [r3]
 162              	.L10:
  85:Generated_Source\PSoC5/UART.c **** }
 163              		.loc 1 85 0
 164 0012 FFF7FEFF 		bl	UART_Enable
 165              	.LVL8:
 166 0016 08BD     		pop	{r3, pc}
 167              	.L13:
 168              		.align	2
 169              	.L12:
 170 0018 00000000 		.word	.LANCHOR0
 171              		.cfi_endproc
 172              	.LFE0:
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 8


 173              		.size	UART_Start, .-UART_Start
 174              		.section	.text.UART_Stop,"ax",%progbits
 175              		.align	2
 176              		.global	UART_Stop
 177              		.thumb
 178              		.thumb_func
 179              		.type	UART_Stop, %function
 180              	UART_Stop:
 181              	.LFB3:
 223:Generated_Source\PSoC5/UART.c **** }
 224:Generated_Source\PSoC5/UART.c **** 
 225:Generated_Source\PSoC5/UART.c **** 
 226:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 227:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Stop
 228:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 229:Generated_Source\PSoC5/UART.c **** *
 230:Generated_Source\PSoC5/UART.c **** * Summary:
 231:Generated_Source\PSoC5/UART.c **** *  Disables the UART operation.
 232:Generated_Source\PSoC5/UART.c **** *
 233:Generated_Source\PSoC5/UART.c **** * Parameters:
 234:Generated_Source\PSoC5/UART.c **** *  None.
 235:Generated_Source\PSoC5/UART.c **** *
 236:Generated_Source\PSoC5/UART.c **** * Return:
 237:Generated_Source\PSoC5/UART.c **** *  None.
 238:Generated_Source\PSoC5/UART.c **** *
 239:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 240:Generated_Source\PSoC5/UART.c **** void UART_Stop(void) 
 241:Generated_Source\PSoC5/UART.c **** {
 182              		.loc 1 241 0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 0
 185              		@ frame_needed = 0, uses_anonymous_args = 0
 186 0000 10B5     		push	{r4, lr}
 187              		.cfi_def_cfa_offset 8
 188              		.cfi_offset 4, -8
 189              		.cfi_offset 14, -4
 242:Generated_Source\PSoC5/UART.c ****     uint8 enableInterrupts;
 243:Generated_Source\PSoC5/UART.c ****     enableInterrupts = CyEnterCriticalSection();
 190              		.loc 1 243 0
 191 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 192              	.LVL9:
 193 0006 0446     		mov	r4, r0
 194              	.LVL10:
 244:Generated_Source\PSoC5/UART.c **** 
 245:Generated_Source\PSoC5/UART.c ****     /* Write Bit Counter Disable */
 246:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 247:Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_CONTROL_REG &= (uint8) ~UART_CNTR_ENABLE;
 195              		.loc 1 247 0
 196 0008 0C4A     		ldr	r2, .L16
 197 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 198 000c 03F0DF03 		and	r3, r3, #223
 199 0010 1370     		strb	r3, [r2]
 248:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 249:Generated_Source\PSoC5/UART.c **** 
 250:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_ENABLED)
 251:Generated_Source\PSoC5/UART.c ****         #if(!UART_TXCLKGEN_DP)
 252:Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_CONTROL_REG &= (uint8) ~UART_CNTR_ENABLE;
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 9


 253:Generated_Source\PSoC5/UART.c ****         #endif /* (!UART_TXCLKGEN_DP) */
 254:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_ENABLED) */
 255:Generated_Source\PSoC5/UART.c **** 
 256:Generated_Source\PSoC5/UART.c ****     #if (UART_INTERNAL_CLOCK_USED)
 257:Generated_Source\PSoC5/UART.c ****         UART_IntClock_Stop();   /* Disable the clock */
 200              		.loc 1 257 0
 201 0012 FFF7FEFF 		bl	UART_IntClock_Stop
 202              	.LVL11:
 258:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 259:Generated_Source\PSoC5/UART.c **** 
 260:Generated_Source\PSoC5/UART.c ****     /* Disable internal interrupt component */
 261:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 262:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_ACTL_REG  &= (uint8) ~UART_INT_ENABLE;
 203              		.loc 1 262 0
 204 0016 0A4A     		ldr	r2, .L16+4
 205 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 206 001a 03F0EF03 		and	r3, r3, #239
 207 001e 1370     		strb	r3, [r2]
 263:Generated_Source\PSoC5/UART.c **** 
 264:Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 265:Generated_Source\PSoC5/UART.c ****             UART_DisableRxInt();
 266:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 267:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 268:Generated_Source\PSoC5/UART.c **** 
 269:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_ENABLED)
 270:Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_ACTL_REG &= (uint8) ~UART_INT_ENABLE;
 208              		.loc 1 270 0
 209 0020 A2F20112 		subw	r2, r2, #257
 210 0024 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 211 0026 03F0EF03 		and	r3, r3, #239
 212 002a 1370     		strb	r3, [r2]
 271:Generated_Source\PSoC5/UART.c **** 
 272:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 273:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
 213              		.loc 1 273 0
 214 002c 0122     		movs	r2, #1
 215 002e 054B     		ldr	r3, .L16+8
 216 0030 1A60     		str	r2, [r3]
 274:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 275:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_ENABLED) */
 276:Generated_Source\PSoC5/UART.c **** 
 277:Generated_Source\PSoC5/UART.c ****     CyExitCriticalSection(enableInterrupts);
 217              		.loc 1 277 0
 218 0032 2046     		mov	r0, r4
 219 0034 FFF7FEFF 		bl	CyExitCriticalSection
 220              	.LVL12:
 221 0038 10BD     		pop	{r4, pc}
 222              	.LVL13:
 223              	.L17:
 224 003a 00BF     		.align	2
 225              	.L16:
 226 003c 96650040 		.word	1073767830
 227 0040 95650040 		.word	1073767829
 228 0044 80E100E0 		.word	-536813184
 229              		.cfi_endproc
 230              	.LFE3:
 231              		.size	UART_Stop, .-UART_Stop
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 10


 232              		.section	.text.UART_ReadControlRegister,"ax",%progbits
 233              		.align	2
 234              		.global	UART_ReadControlRegister
 235              		.thumb
 236              		.thumb_func
 237              		.type	UART_ReadControlRegister, %function
 238              	UART_ReadControlRegister:
 239              	.LFB4:
 278:Generated_Source\PSoC5/UART.c **** }
 279:Generated_Source\PSoC5/UART.c **** 
 280:Generated_Source\PSoC5/UART.c **** 
 281:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 282:Generated_Source\PSoC5/UART.c **** * Function Name: UART_ReadControlRegister
 283:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 284:Generated_Source\PSoC5/UART.c **** *
 285:Generated_Source\PSoC5/UART.c **** * Summary:
 286:Generated_Source\PSoC5/UART.c **** *  Returns the current value of the control register.
 287:Generated_Source\PSoC5/UART.c **** *
 288:Generated_Source\PSoC5/UART.c **** * Parameters:
 289:Generated_Source\PSoC5/UART.c **** *  None.
 290:Generated_Source\PSoC5/UART.c **** *
 291:Generated_Source\PSoC5/UART.c **** * Return:
 292:Generated_Source\PSoC5/UART.c **** *  Contents of the control register.
 293:Generated_Source\PSoC5/UART.c **** *
 294:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 295:Generated_Source\PSoC5/UART.c **** uint8 UART_ReadControlRegister(void) 
 296:Generated_Source\PSoC5/UART.c **** {
 240              		.loc 1 296 0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 0
 243              		@ frame_needed = 0, uses_anonymous_args = 0
 244              		@ link register save eliminated.
 297:Generated_Source\PSoC5/UART.c ****     #if (UART_CONTROL_REG_REMOVED)
 298:Generated_Source\PSoC5/UART.c ****         return(0u);
 299:Generated_Source\PSoC5/UART.c ****     #else
 300:Generated_Source\PSoC5/UART.c ****         return(UART_CONTROL_REG);
 301:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 302:Generated_Source\PSoC5/UART.c **** }
 245              		.loc 1 302 0
 246 0000 0020     		movs	r0, #0
 247 0002 7047     		bx	lr
 248              		.cfi_endproc
 249              	.LFE4:
 250              		.size	UART_ReadControlRegister, .-UART_ReadControlRegister
 251              		.section	.text.UART_WriteControlRegister,"ax",%progbits
 252              		.align	2
 253              		.global	UART_WriteControlRegister
 254              		.thumb
 255              		.thumb_func
 256              		.type	UART_WriteControlRegister, %function
 257              	UART_WriteControlRegister:
 258              	.LFB5:
 303:Generated_Source\PSoC5/UART.c **** 
 304:Generated_Source\PSoC5/UART.c **** 
 305:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 306:Generated_Source\PSoC5/UART.c **** * Function Name: UART_WriteControlRegister
 307:Generated_Source\PSoC5/UART.c **** ********************************************************************************
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 11


 308:Generated_Source\PSoC5/UART.c **** *
 309:Generated_Source\PSoC5/UART.c **** * Summary:
 310:Generated_Source\PSoC5/UART.c **** *  Writes an 8-bit value into the control register
 311:Generated_Source\PSoC5/UART.c **** *
 312:Generated_Source\PSoC5/UART.c **** * Parameters:
 313:Generated_Source\PSoC5/UART.c **** *  control:  control register value
 314:Generated_Source\PSoC5/UART.c **** *
 315:Generated_Source\PSoC5/UART.c **** * Return:
 316:Generated_Source\PSoC5/UART.c **** *  None.
 317:Generated_Source\PSoC5/UART.c **** *
 318:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 319:Generated_Source\PSoC5/UART.c **** void  UART_WriteControlRegister(uint8 control) 
 320:Generated_Source\PSoC5/UART.c **** {
 259              		.loc 1 320 0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263              		@ link register save eliminated.
 264              	.LVL14:
 265 0000 7047     		bx	lr
 266              		.cfi_endproc
 267              	.LFE5:
 268              		.size	UART_WriteControlRegister, .-UART_WriteControlRegister
 269 0002 00BF     		.section	.text.UART_SetRxInterruptMode,"ax",%progbits
 270              		.align	2
 271              		.global	UART_SetRxInterruptMode
 272              		.thumb
 273              		.thumb_func
 274              		.type	UART_SetRxInterruptMode, %function
 275              	UART_SetRxInterruptMode:
 276              	.LFB6:
 321:Generated_Source\PSoC5/UART.c ****     #if (UART_CONTROL_REG_REMOVED)
 322:Generated_Source\PSoC5/UART.c ****         if(0u != control)
 323:Generated_Source\PSoC5/UART.c ****         {
 324:Generated_Source\PSoC5/UART.c ****             /* Suppress compiler warning */
 325:Generated_Source\PSoC5/UART.c ****         }
 326:Generated_Source\PSoC5/UART.c ****     #else
 327:Generated_Source\PSoC5/UART.c ****        UART_CONTROL_REG = control;
 328:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 329:Generated_Source\PSoC5/UART.c **** }
 330:Generated_Source\PSoC5/UART.c **** 
 331:Generated_Source\PSoC5/UART.c **** 
 332:Generated_Source\PSoC5/UART.c **** #if(UART_RX_ENABLED || UART_HD_ENABLED)
 333:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 334:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxInterruptMode
 335:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 336:Generated_Source\PSoC5/UART.c ****     *
 337:Generated_Source\PSoC5/UART.c ****     * Summary:
 338:Generated_Source\PSoC5/UART.c ****     *  Configures the RX interrupt sources enabled.
 339:Generated_Source\PSoC5/UART.c ****     *
 340:Generated_Source\PSoC5/UART.c ****     * Parameters:
 341:Generated_Source\PSoC5/UART.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:Generated_Source\PSoC5/UART.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:Generated_Source\PSoC5/UART.c ****     *  combination of status register bit-masks shown below:
 344:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_STOP_ERROR       Interrupt on stop error.
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 12


 347:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_BREAK            Interrupt on break.
 348:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_OVERRUN          Interrupt on overrun error.
 349:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_MRKSPC           Interrupt on address detect.
 351:Generated_Source\PSoC5/UART.c ****     *
 352:Generated_Source\PSoC5/UART.c ****     * Return:
 353:Generated_Source\PSoC5/UART.c ****     *  None.
 354:Generated_Source\PSoC5/UART.c ****     *
 355:Generated_Source\PSoC5/UART.c ****     * Theory:
 356:Generated_Source\PSoC5/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:Generated_Source\PSoC5/UART.c ****     *
 358:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 359:Generated_Source\PSoC5/UART.c ****     void UART_SetRxInterruptMode(uint8 intSrc) 
 360:Generated_Source\PSoC5/UART.c ****     {
 277              		.loc 1 360 0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 0
 280              		@ frame_needed = 0, uses_anonymous_args = 0
 281              		@ link register save eliminated.
 282              	.LVL15:
 361:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_MASK_REG  = intSrc;
 283              		.loc 1 361 0
 284 0000 014B     		ldr	r3, .L21
 285 0002 1870     		strb	r0, [r3]
 286 0004 7047     		bx	lr
 287              	.L22:
 288 0006 00BF     		.align	2
 289              	.L21:
 290 0008 85650040 		.word	1073767813
 291              		.cfi_endproc
 292              	.LFE6:
 293              		.size	UART_SetRxInterruptMode, .-UART_SetRxInterruptMode
 294              		.section	.text.UART_ReadRxData,"ax",%progbits
 295              		.align	2
 296              		.global	UART_ReadRxData
 297              		.thumb
 298              		.thumb_func
 299              		.type	UART_ReadRxData, %function
 300              	UART_ReadRxData:
 301              	.LFB7:
 362:Generated_Source\PSoC5/UART.c ****     }
 363:Generated_Source\PSoC5/UART.c **** 
 364:Generated_Source\PSoC5/UART.c **** 
 365:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 366:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadRxData
 367:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 368:Generated_Source\PSoC5/UART.c ****     *
 369:Generated_Source\PSoC5/UART.c ****     * Summary:
 370:Generated_Source\PSoC5/UART.c ****     *  Returns the next byte of received data. This function returns data without
 371:Generated_Source\PSoC5/UART.c ****     *  checking the status. You must check the status separately.
 372:Generated_Source\PSoC5/UART.c ****     *
 373:Generated_Source\PSoC5/UART.c ****     * Parameters:
 374:Generated_Source\PSoC5/UART.c ****     *  None.
 375:Generated_Source\PSoC5/UART.c ****     *
 376:Generated_Source\PSoC5/UART.c ****     * Return:
 377:Generated_Source\PSoC5/UART.c ****     *  Received data from RX register
 378:Generated_Source\PSoC5/UART.c ****     *
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 13


 379:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 380:Generated_Source\PSoC5/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 381:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
 382:Generated_Source\PSoC5/UART.c ****     *     checked to identify new data.
 383:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
 384:Generated_Source\PSoC5/UART.c ****     *     incremented after each byte has been read from buffer.
 385:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared if loop condition was detected
 386:Generated_Source\PSoC5/UART.c ****     *     in RX ISR.
 387:Generated_Source\PSoC5/UART.c ****     *
 388:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 389:Generated_Source\PSoC5/UART.c ****     *  No.
 390:Generated_Source\PSoC5/UART.c ****     *
 391:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 392:Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadRxData(void) 
 393:Generated_Source\PSoC5/UART.c ****     {
 302              		.loc 1 393 0
 303              		.cfi_startproc
 304              		@ args = 0, pretend = 0, frame = 0
 305              		@ frame_needed = 0, uses_anonymous_args = 0
 306              		@ link register save eliminated.
 394:Generated_Source\PSoC5/UART.c ****         uint8 rxData;
 395:Generated_Source\PSoC5/UART.c **** 
 396:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 397:Generated_Source\PSoC5/UART.c **** 
 398:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferRead;
 399:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferWrite;
 400:Generated_Source\PSoC5/UART.c **** 
 401:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 402:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 403:Generated_Source\PSoC5/UART.c **** 
 404:Generated_Source\PSoC5/UART.c ****         locRxBufferRead  = UART_rxBufferRead;
 405:Generated_Source\PSoC5/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 406:Generated_Source\PSoC5/UART.c **** 
 407:Generated_Source\PSoC5/UART.c ****         if( (UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 408:Generated_Source\PSoC5/UART.c ****         {
 409:Generated_Source\PSoC5/UART.c ****             rxData = UART_rxBuffer[locRxBufferRead];
 410:Generated_Source\PSoC5/UART.c ****             locRxBufferRead++;
 411:Generated_Source\PSoC5/UART.c **** 
 412:Generated_Source\PSoC5/UART.c ****             if(locRxBufferRead >= UART_RX_BUFFER_SIZE)
 413:Generated_Source\PSoC5/UART.c ****             {
 414:Generated_Source\PSoC5/UART.c ****                 locRxBufferRead = 0u;
 415:Generated_Source\PSoC5/UART.c ****             }
 416:Generated_Source\PSoC5/UART.c ****             /* Update the real pointer */
 417:Generated_Source\PSoC5/UART.c ****             UART_rxBufferRead = locRxBufferRead;
 418:Generated_Source\PSoC5/UART.c **** 
 419:Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 420:Generated_Source\PSoC5/UART.c ****             {
 421:Generated_Source\PSoC5/UART.c ****                 UART_rxBufferLoopDetect = 0u;
 422:Generated_Source\PSoC5/UART.c ****                 #if ((UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u))
 423:Generated_Source\PSoC5/UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:Generated_Source\PSoC5/UART.c ****                     #if( UART_HD_ENABLED )
 425:Generated_Source\PSoC5/UART.c ****                         if((UART_CONTROL_REG & UART_CTRL_HD_SEND) == 0u)
 426:Generated_Source\PSoC5/UART.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:Generated_Source\PSoC5/UART.c ****                             *  configuration set, otherwise
 428:Generated_Source\PSoC5/UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:Generated_Source\PSoC5/UART.c ****                             */
 430:Generated_Source\PSoC5/UART.c ****                             UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 14


 431:Generated_Source\PSoC5/UART.c ****                         }
 432:Generated_Source\PSoC5/UART.c ****                     #else
 433:Generated_Source\PSoC5/UART.c ****                         UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
 434:Generated_Source\PSoC5/UART.c ****                     #endif /* end UART_HD_ENABLED */
 435:Generated_Source\PSoC5/UART.c ****                 #endif /* ((UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u)) */
 436:Generated_Source\PSoC5/UART.c ****             }
 437:Generated_Source\PSoC5/UART.c ****         }
 438:Generated_Source\PSoC5/UART.c ****         else
 439:Generated_Source\PSoC5/UART.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:Generated_Source\PSoC5/UART.c ****             rxData = UART_RXDATA_REG;
 441:Generated_Source\PSoC5/UART.c ****         }
 442:Generated_Source\PSoC5/UART.c **** 
 443:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 444:Generated_Source\PSoC5/UART.c **** 
 445:Generated_Source\PSoC5/UART.c ****     #else
 446:Generated_Source\PSoC5/UART.c **** 
 447:Generated_Source\PSoC5/UART.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:Generated_Source\PSoC5/UART.c ****         rxData = UART_RXDATA_REG;
 307              		.loc 1 448 0
 308 0000 014B     		ldr	r3, .L24
 309 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 310              	.LVL16:
 449:Generated_Source\PSoC5/UART.c **** 
 450:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 451:Generated_Source\PSoC5/UART.c **** 
 452:Generated_Source\PSoC5/UART.c ****         return(rxData);
 453:Generated_Source\PSoC5/UART.c ****     }
 311              		.loc 1 453 0
 312 0004 7047     		bx	lr
 313              	.L25:
 314 0006 00BF     		.align	2
 315              	.L24:
 316 0008 45650040 		.word	1073767749
 317              		.cfi_endproc
 318              	.LFE7:
 319              		.size	UART_ReadRxData, .-UART_ReadRxData
 320              		.section	.text.UART_ReadRxStatus,"ax",%progbits
 321              		.align	2
 322              		.global	UART_ReadRxStatus
 323              		.thumb
 324              		.thumb_func
 325              		.type	UART_ReadRxStatus, %function
 326              	UART_ReadRxStatus:
 327              	.LFB8:
 454:Generated_Source\PSoC5/UART.c **** 
 455:Generated_Source\PSoC5/UART.c **** 
 456:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 457:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadRxStatus
 458:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 459:Generated_Source\PSoC5/UART.c ****     *
 460:Generated_Source\PSoC5/UART.c ****     * Summary:
 461:Generated_Source\PSoC5/UART.c ****     *  Returns the current state of the receiver status register and the software
 462:Generated_Source\PSoC5/UART.c ****     *  buffer overflow status.
 463:Generated_Source\PSoC5/UART.c ****     *
 464:Generated_Source\PSoC5/UART.c ****     * Parameters:
 465:Generated_Source\PSoC5/UART.c ****     *  None.
 466:Generated_Source\PSoC5/UART.c ****     *
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 15


 467:Generated_Source\PSoC5/UART.c ****     * Return:
 468:Generated_Source\PSoC5/UART.c ****     *  Current state of the status register.
 469:Generated_Source\PSoC5/UART.c ****     *
 470:Generated_Source\PSoC5/UART.c ****     * Side Effect:
 471:Generated_Source\PSoC5/UART.c ****     *  All status register bits are clear-on-read except
 472:Generated_Source\PSoC5/UART.c ****     *  UART_RX_STS_FIFO_NOTEMPTY.
 473:Generated_Source\PSoC5/UART.c ****     *  UART_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:Generated_Source\PSoC5/UART.c ****     *  register read.
 475:Generated_Source\PSoC5/UART.c ****     *
 476:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 477:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferOverflow - used to indicate overload condition.
 478:Generated_Source\PSoC5/UART.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:Generated_Source\PSoC5/UART.c ****     *   UART_rxBufferRead to write new data. This condition returned
 480:Generated_Source\PSoC5/UART.c ****     *   and cleared to zero by this API as an
 481:Generated_Source\PSoC5/UART.c ****     *   UART_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:Generated_Source\PSoC5/UART.c ****     *   bits.
 483:Generated_Source\PSoC5/UART.c ****     *
 484:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 485:Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadRxStatus(void) 
 486:Generated_Source\PSoC5/UART.c ****     {
 328              		.loc 1 486 0
 329              		.cfi_startproc
 330              		@ args = 0, pretend = 0, frame = 0
 331              		@ frame_needed = 0, uses_anonymous_args = 0
 332              		@ link register save eliminated.
 487:Generated_Source\PSoC5/UART.c ****         uint8 status;
 488:Generated_Source\PSoC5/UART.c **** 
 489:Generated_Source\PSoC5/UART.c ****         status = UART_RXSTATUS_REG & UART_RX_HW_MASK;
 333              		.loc 1 489 0
 334 0000 024B     		ldr	r3, .L27
 335 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 336              	.LVL17:
 490:Generated_Source\PSoC5/UART.c **** 
 491:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 492:Generated_Source\PSoC5/UART.c ****         if(UART_rxBufferOverflow != 0u)
 493:Generated_Source\PSoC5/UART.c ****         {
 494:Generated_Source\PSoC5/UART.c ****             status |= UART_RX_STS_SOFT_BUFF_OVER;
 495:Generated_Source\PSoC5/UART.c ****             UART_rxBufferOverflow = 0u;
 496:Generated_Source\PSoC5/UART.c ****         }
 497:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 498:Generated_Source\PSoC5/UART.c **** 
 499:Generated_Source\PSoC5/UART.c ****         return(status);
 500:Generated_Source\PSoC5/UART.c ****     }
 337              		.loc 1 500 0
 338 0004 00F07F00 		and	r0, r0, #127
 339              	.LVL18:
 340 0008 7047     		bx	lr
 341              	.L28:
 342 000a 00BF     		.align	2
 343              	.L27:
 344 000c 65650040 		.word	1073767781
 345              		.cfi_endproc
 346              	.LFE8:
 347              		.size	UART_ReadRxStatus, .-UART_ReadRxStatus
 348              		.section	.text.UART_GetChar,"ax",%progbits
 349              		.align	2
 350              		.global	UART_GetChar
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 16


 351              		.thumb
 352              		.thumb_func
 353              		.type	UART_GetChar, %function
 354              	UART_GetChar:
 355              	.LFB9:
 501:Generated_Source\PSoC5/UART.c **** 
 502:Generated_Source\PSoC5/UART.c **** 
 503:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 504:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetChar
 505:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 506:Generated_Source\PSoC5/UART.c ****     *
 507:Generated_Source\PSoC5/UART.c ****     * Summary:
 508:Generated_Source\PSoC5/UART.c ****     *  Returns the last received byte of data. UART_GetChar() is
 509:Generated_Source\PSoC5/UART.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:Generated_Source\PSoC5/UART.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:Generated_Source\PSoC5/UART.c ****     *
 512:Generated_Source\PSoC5/UART.c ****     * Parameters:
 513:Generated_Source\PSoC5/UART.c ****     *  None.
 514:Generated_Source\PSoC5/UART.c ****     *
 515:Generated_Source\PSoC5/UART.c ****     * Return:
 516:Generated_Source\PSoC5/UART.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:Generated_Source\PSoC5/UART.c ****     *  A returned zero signifies an error condition or no data available.
 518:Generated_Source\PSoC5/UART.c ****     *
 519:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 520:Generated_Source\PSoC5/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 521:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
 522:Generated_Source\PSoC5/UART.c ****     *     checked to identify new data.
 523:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
 524:Generated_Source\PSoC5/UART.c ****     *     incremented after each byte has been read from buffer.
 525:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared if loop condition was detected
 526:Generated_Source\PSoC5/UART.c ****     *     in RX ISR.
 527:Generated_Source\PSoC5/UART.c ****     *
 528:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 529:Generated_Source\PSoC5/UART.c ****     *  No.
 530:Generated_Source\PSoC5/UART.c ****     *
 531:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 532:Generated_Source\PSoC5/UART.c ****     uint8 UART_GetChar(void) 
 533:Generated_Source\PSoC5/UART.c ****     {
 356              		.loc 1 533 0
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 0
 359              		@ frame_needed = 0, uses_anonymous_args = 0
 360              		@ link register save eliminated.
 361              	.LVL19:
 534:Generated_Source\PSoC5/UART.c ****         uint8 rxData = 0u;
 535:Generated_Source\PSoC5/UART.c ****         uint8 rxStatus;
 536:Generated_Source\PSoC5/UART.c **** 
 537:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 538:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferRead;
 539:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferWrite;
 540:Generated_Source\PSoC5/UART.c **** 
 541:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 542:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 543:Generated_Source\PSoC5/UART.c **** 
 544:Generated_Source\PSoC5/UART.c ****         locRxBufferRead  = UART_rxBufferRead;
 545:Generated_Source\PSoC5/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 546:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 17


 547:Generated_Source\PSoC5/UART.c ****         if( (UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 548:Generated_Source\PSoC5/UART.c ****         {
 549:Generated_Source\PSoC5/UART.c ****             rxData = UART_rxBuffer[locRxBufferRead];
 550:Generated_Source\PSoC5/UART.c ****             locRxBufferRead++;
 551:Generated_Source\PSoC5/UART.c ****             if(locRxBufferRead >= UART_RX_BUFFER_SIZE)
 552:Generated_Source\PSoC5/UART.c ****             {
 553:Generated_Source\PSoC5/UART.c ****                 locRxBufferRead = 0u;
 554:Generated_Source\PSoC5/UART.c ****             }
 555:Generated_Source\PSoC5/UART.c ****             /* Update the real pointer */
 556:Generated_Source\PSoC5/UART.c ****             UART_rxBufferRead = locRxBufferRead;
 557:Generated_Source\PSoC5/UART.c **** 
 558:Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 559:Generated_Source\PSoC5/UART.c ****             {
 560:Generated_Source\PSoC5/UART.c ****                 UART_rxBufferLoopDetect = 0u;
 561:Generated_Source\PSoC5/UART.c ****                 #if( (UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u) )
 562:Generated_Source\PSoC5/UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:Generated_Source\PSoC5/UART.c ****                     #if( UART_HD_ENABLED )
 564:Generated_Source\PSoC5/UART.c ****                         if((UART_CONTROL_REG & UART_CTRL_HD_SEND) == 0u)
 565:Generated_Source\PSoC5/UART.c ****                         {   /* In Half duplex mode return RX mask only if
 566:Generated_Source\PSoC5/UART.c ****                             *  RX configuration set, otherwise
 567:Generated_Source\PSoC5/UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:Generated_Source\PSoC5/UART.c ****                             */
 569:Generated_Source\PSoC5/UART.c ****                             UART_RXSTATUS_MASK_REG |= UART_RX_STS_FIFO_NOTEMPTY;
 570:Generated_Source\PSoC5/UART.c ****                         }
 571:Generated_Source\PSoC5/UART.c ****                     #else
 572:Generated_Source\PSoC5/UART.c ****                         UART_RXSTATUS_MASK_REG |= UART_RX_STS_FIFO_NOTEMPTY;
 573:Generated_Source\PSoC5/UART.c ****                     #endif /* end UART_HD_ENABLED */
 574:Generated_Source\PSoC5/UART.c ****                 #endif /* UART_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:Generated_Source\PSoC5/UART.c ****             }
 576:Generated_Source\PSoC5/UART.c **** 
 577:Generated_Source\PSoC5/UART.c ****         }
 578:Generated_Source\PSoC5/UART.c ****         else
 579:Generated_Source\PSoC5/UART.c ****         {   rxStatus = UART_RXSTATUS_REG;
 580:Generated_Source\PSoC5/UART.c ****             if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 581:Generated_Source\PSoC5/UART.c ****             {   /* Read received data from FIFO */
 582:Generated_Source\PSoC5/UART.c ****                 rxData = UART_RXDATA_REG;
 583:Generated_Source\PSoC5/UART.c ****                 /*Check status on error*/
 584:Generated_Source\PSoC5/UART.c ****                 if((rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
 585:Generated_Source\PSoC5/UART.c ****                                 UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 586:Generated_Source\PSoC5/UART.c ****                 {
 587:Generated_Source\PSoC5/UART.c ****                     rxData = 0u;
 588:Generated_Source\PSoC5/UART.c ****                 }
 589:Generated_Source\PSoC5/UART.c ****             }
 590:Generated_Source\PSoC5/UART.c ****         }
 591:Generated_Source\PSoC5/UART.c **** 
 592:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 593:Generated_Source\PSoC5/UART.c **** 
 594:Generated_Source\PSoC5/UART.c ****     #else
 595:Generated_Source\PSoC5/UART.c **** 
 596:Generated_Source\PSoC5/UART.c ****         rxStatus =UART_RXSTATUS_REG;
 362              		.loc 1 596 0
 363 0000 084B     		ldr	r3, .L33
 364 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 365 0004 DBB2     		uxtb	r3, r3
 366              	.LVL20:
 597:Generated_Source\PSoC5/UART.c ****         if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 367              		.loc 1 597 0
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 18


 368 0006 13F0200F 		tst	r3, #32
 369 000a 06D0     		beq	.L31
 598:Generated_Source\PSoC5/UART.c ****         {
 599:Generated_Source\PSoC5/UART.c ****             /* Read received data from FIFO */
 600:Generated_Source\PSoC5/UART.c ****             rxData = UART_RXDATA_REG;
 370              		.loc 1 600 0
 371 000c 064A     		ldr	r2, .L33+4
 372 000e 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 373 0010 C0B2     		uxtb	r0, r0
 374              	.LVL21:
 601:Generated_Source\PSoC5/UART.c **** 
 602:Generated_Source\PSoC5/UART.c ****             /*Check status on error*/
 603:Generated_Source\PSoC5/UART.c ****             if((rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
 375              		.loc 1 603 0
 376 0012 13F01E0F 		tst	r3, #30
 377 0016 02D1     		bne	.L32
 378 0018 7047     		bx	lr
 379              	.LVL22:
 380              	.L31:
 534:Generated_Source\PSoC5/UART.c ****         uint8 rxStatus;
 381              		.loc 1 534 0
 382 001a 0020     		movs	r0, #0
 383 001c 7047     		bx	lr
 384              	.LVL23:
 385              	.L32:
 604:Generated_Source\PSoC5/UART.c ****                             UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 605:Generated_Source\PSoC5/UART.c ****             {
 606:Generated_Source\PSoC5/UART.c ****                 rxData = 0u;
 386              		.loc 1 606 0
 387 001e 0020     		movs	r0, #0
 388              	.LVL24:
 607:Generated_Source\PSoC5/UART.c ****             }
 608:Generated_Source\PSoC5/UART.c ****         }
 609:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 610:Generated_Source\PSoC5/UART.c **** 
 611:Generated_Source\PSoC5/UART.c ****         return(rxData);
 612:Generated_Source\PSoC5/UART.c ****     }
 389              		.loc 1 612 0
 390 0020 7047     		bx	lr
 391              	.L34:
 392 0022 00BF     		.align	2
 393              	.L33:
 394 0024 65650040 		.word	1073767781
 395 0028 45650040 		.word	1073767749
 396              		.cfi_endproc
 397              	.LFE9:
 398              		.size	UART_GetChar, .-UART_GetChar
 399              		.section	.text.UART_GetByte,"ax",%progbits
 400              		.align	2
 401              		.global	UART_GetByte
 402              		.thumb
 403              		.thumb_func
 404              		.type	UART_GetByte, %function
 405              	UART_GetByte:
 406              	.LFB10:
 613:Generated_Source\PSoC5/UART.c **** 
 614:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 19


 615:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 616:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetByte
 617:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 618:Generated_Source\PSoC5/UART.c ****     *
 619:Generated_Source\PSoC5/UART.c ****     * Summary:
 620:Generated_Source\PSoC5/UART.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:Generated_Source\PSoC5/UART.c ****     *  condition.
 622:Generated_Source\PSoC5/UART.c ****     *
 623:Generated_Source\PSoC5/UART.c ****     * Parameters:
 624:Generated_Source\PSoC5/UART.c ****     *  None.
 625:Generated_Source\PSoC5/UART.c ****     *
 626:Generated_Source\PSoC5/UART.c ****     * Return:
 627:Generated_Source\PSoC5/UART.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:Generated_Source\PSoC5/UART.c ****     *  an error has occurred.
 629:Generated_Source\PSoC5/UART.c ****     *
 630:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 631:Generated_Source\PSoC5/UART.c ****     *  No.
 632:Generated_Source\PSoC5/UART.c ****     *
 633:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 634:Generated_Source\PSoC5/UART.c ****     uint16 UART_GetByte(void) 
 635:Generated_Source\PSoC5/UART.c ****     {
 407              		.loc 1 635 0
 408              		.cfi_startproc
 409              		@ args = 0, pretend = 0, frame = 0
 410              		@ frame_needed = 0, uses_anonymous_args = 0
 411 0000 10B5     		push	{r4, lr}
 412              		.cfi_def_cfa_offset 8
 413              		.cfi_offset 4, -8
 414              		.cfi_offset 14, -4
 636:Generated_Source\PSoC5/UART.c ****         
 637:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 638:Generated_Source\PSoC5/UART.c ****         uint16 locErrorStatus;
 639:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 640:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 641:Generated_Source\PSoC5/UART.c ****         locErrorStatus = (uint16)UART_errorStatus;
 642:Generated_Source\PSoC5/UART.c ****         UART_errorStatus = 0u;
 643:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 644:Generated_Source\PSoC5/UART.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_ReadRxData() );
 645:Generated_Source\PSoC5/UART.c ****     #else
 646:Generated_Source\PSoC5/UART.c ****         return ( ((uint16)UART_ReadRxStatus() << 8u) | UART_ReadRxData() );
 415              		.loc 1 646 0
 416 0002 FFF7FEFF 		bl	UART_ReadRxStatus
 417              	.LVL25:
 418 0006 0402     		lsls	r4, r0, #8
 419 0008 FFF7FEFF 		bl	UART_ReadRxData
 420              	.LVL26:
 421 000c 2043     		orrs	r0, r0, r4
 647:Generated_Source\PSoC5/UART.c ****     #endif /* UART_RX_INTERRUPT_ENABLED */
 648:Generated_Source\PSoC5/UART.c ****         
 649:Generated_Source\PSoC5/UART.c ****     }
 422              		.loc 1 649 0
 423 000e 80B2     		uxth	r0, r0
 424 0010 10BD     		pop	{r4, pc}
 425              		.cfi_endproc
 426              	.LFE10:
 427              		.size	UART_GetByte, .-UART_GetByte
 428 0012 00BF     		.section	.text.UART_GetRxBufferSize,"ax",%progbits
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 20


 429              		.align	2
 430              		.global	UART_GetRxBufferSize
 431              		.thumb
 432              		.thumb_func
 433              		.type	UART_GetRxBufferSize, %function
 434              	UART_GetRxBufferSize:
 435              	.LFB11:
 650:Generated_Source\PSoC5/UART.c **** 
 651:Generated_Source\PSoC5/UART.c **** 
 652:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 653:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetRxBufferSize
 654:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 655:Generated_Source\PSoC5/UART.c ****     *
 656:Generated_Source\PSoC5/UART.c ****     * Summary:
 657:Generated_Source\PSoC5/UART.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:Generated_Source\PSoC5/UART.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:Generated_Source\PSoC5/UART.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:Generated_Source\PSoC5/UART.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:Generated_Source\PSoC5/UART.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:Generated_Source\PSoC5/UART.c ****     *    account.
 663:Generated_Source\PSoC5/UART.c ****     *
 664:Generated_Source\PSoC5/UART.c ****     * Parameters:
 665:Generated_Source\PSoC5/UART.c ****     *  None.
 666:Generated_Source\PSoC5/UART.c ****     *
 667:Generated_Source\PSoC5/UART.c ****     * Return:
 668:Generated_Source\PSoC5/UART.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:Generated_Source\PSoC5/UART.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:Generated_Source\PSoC5/UART.c ****     *
 671:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 672:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - used to calculate left bytes.
 673:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - used to calculate left bytes.
 674:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - checked to decide left bytes amount.
 675:Generated_Source\PSoC5/UART.c ****     *
 676:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 677:Generated_Source\PSoC5/UART.c ****     *  No.
 678:Generated_Source\PSoC5/UART.c ****     *
 679:Generated_Source\PSoC5/UART.c ****     * Theory:
 680:Generated_Source\PSoC5/UART.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:Generated_Source\PSoC5/UART.c ****     *
 682:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 683:Generated_Source\PSoC5/UART.c ****     uint8 UART_GetRxBufferSize(void)
 684:Generated_Source\PSoC5/UART.c ****                                                             
 685:Generated_Source\PSoC5/UART.c ****     {
 436              		.loc 1 685 0
 437              		.cfi_startproc
 438              		@ args = 0, pretend = 0, frame = 0
 439              		@ frame_needed = 0, uses_anonymous_args = 0
 440              		@ link register save eliminated.
 686:Generated_Source\PSoC5/UART.c ****         uint8 size;
 687:Generated_Source\PSoC5/UART.c **** 
 688:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 689:Generated_Source\PSoC5/UART.c **** 
 690:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 691:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 692:Generated_Source\PSoC5/UART.c **** 
 693:Generated_Source\PSoC5/UART.c ****         if(UART_rxBufferRead == UART_rxBufferWrite)
 694:Generated_Source\PSoC5/UART.c ****         {
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 21


 695:Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 696:Generated_Source\PSoC5/UART.c ****             {
 697:Generated_Source\PSoC5/UART.c ****                 size = UART_RX_BUFFER_SIZE;
 698:Generated_Source\PSoC5/UART.c ****             }
 699:Generated_Source\PSoC5/UART.c ****             else
 700:Generated_Source\PSoC5/UART.c ****             {
 701:Generated_Source\PSoC5/UART.c ****                 size = 0u;
 702:Generated_Source\PSoC5/UART.c ****             }
 703:Generated_Source\PSoC5/UART.c ****         }
 704:Generated_Source\PSoC5/UART.c ****         else if(UART_rxBufferRead < UART_rxBufferWrite)
 705:Generated_Source\PSoC5/UART.c ****         {
 706:Generated_Source\PSoC5/UART.c ****             size = (UART_rxBufferWrite - UART_rxBufferRead);
 707:Generated_Source\PSoC5/UART.c ****         }
 708:Generated_Source\PSoC5/UART.c ****         else
 709:Generated_Source\PSoC5/UART.c ****         {
 710:Generated_Source\PSoC5/UART.c ****             size = (UART_RX_BUFFER_SIZE - UART_rxBufferRead) + UART_rxBufferWrite;
 711:Generated_Source\PSoC5/UART.c ****         }
 712:Generated_Source\PSoC5/UART.c **** 
 713:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 714:Generated_Source\PSoC5/UART.c **** 
 715:Generated_Source\PSoC5/UART.c ****     #else
 716:Generated_Source\PSoC5/UART.c **** 
 717:Generated_Source\PSoC5/UART.c ****         /* We can only know if there is data in the fifo. */
 718:Generated_Source\PSoC5/UART.c ****         size = ((UART_RXSTATUS_REG & UART_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 441              		.loc 1 718 0
 442 0000 044B     		ldr	r3, .L40
 443 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 444 0004 13F0200F 		tst	r3, #32
 445 0008 01D0     		beq	.L39
 446 000a 0120     		movs	r0, #1
 447 000c 7047     		bx	lr
 448              	.L39:
 449 000e 0020     		movs	r0, #0
 450              	.LVL27:
 719:Generated_Source\PSoC5/UART.c **** 
 720:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 721:Generated_Source\PSoC5/UART.c **** 
 722:Generated_Source\PSoC5/UART.c ****         return(size);
 723:Generated_Source\PSoC5/UART.c ****     }
 451              		.loc 1 723 0
 452 0010 7047     		bx	lr
 453              	.L41:
 454 0012 00BF     		.align	2
 455              	.L40:
 456 0014 65650040 		.word	1073767781
 457              		.cfi_endproc
 458              	.LFE11:
 459              		.size	UART_GetRxBufferSize, .-UART_GetRxBufferSize
 460              		.section	.text.UART_ClearRxBuffer,"ax",%progbits
 461              		.align	2
 462              		.global	UART_ClearRxBuffer
 463              		.thumb
 464              		.thumb_func
 465              		.type	UART_ClearRxBuffer, %function
 466              	UART_ClearRxBuffer:
 467              	.LFB12:
 724:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 22


 725:Generated_Source\PSoC5/UART.c **** 
 726:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 727:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ClearRxBuffer
 728:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 729:Generated_Source\PSoC5/UART.c ****     *
 730:Generated_Source\PSoC5/UART.c ****     * Summary:
 731:Generated_Source\PSoC5/UART.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:Generated_Source\PSoC5/UART.c ****     *
 733:Generated_Source\PSoC5/UART.c ****     * Parameters:
 734:Generated_Source\PSoC5/UART.c ****     *  None.
 735:Generated_Source\PSoC5/UART.c ****     *
 736:Generated_Source\PSoC5/UART.c ****     * Return:
 737:Generated_Source\PSoC5/UART.c ****     *  None.
 738:Generated_Source\PSoC5/UART.c ****     *
 739:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 740:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cleared to zero.
 741:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cleared to zero.
 742:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared to zero.
 743:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferOverflow - cleared to zero.
 744:Generated_Source\PSoC5/UART.c ****     *
 745:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 746:Generated_Source\PSoC5/UART.c ****     *  No.
 747:Generated_Source\PSoC5/UART.c ****     *
 748:Generated_Source\PSoC5/UART.c ****     * Theory:
 749:Generated_Source\PSoC5/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:Generated_Source\PSoC5/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:Generated_Source\PSoC5/UART.c ****     *  have remained in the RAM.
 752:Generated_Source\PSoC5/UART.c ****     *
 753:Generated_Source\PSoC5/UART.c ****     * Side Effects:
 754:Generated_Source\PSoC5/UART.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:Generated_Source\PSoC5/UART.c ****     *
 756:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 757:Generated_Source\PSoC5/UART.c ****     void UART_ClearRxBuffer(void) 
 758:Generated_Source\PSoC5/UART.c ****     {
 468              		.loc 1 758 0
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 0
 471              		@ frame_needed = 0, uses_anonymous_args = 0
 472 0000 08B5     		push	{r3, lr}
 473              		.cfi_def_cfa_offset 8
 474              		.cfi_offset 3, -8
 475              		.cfi_offset 14, -4
 759:Generated_Source\PSoC5/UART.c ****         uint8 enableInterrupts;
 760:Generated_Source\PSoC5/UART.c **** 
 761:Generated_Source\PSoC5/UART.c ****         /* Clear the HW FIFO */
 762:Generated_Source\PSoC5/UART.c ****         enableInterrupts = CyEnterCriticalSection();
 476              		.loc 1 762 0
 477 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 478              	.LVL28:
 763:Generated_Source\PSoC5/UART.c ****         UART_RXDATA_AUX_CTL_REG |= (uint8)  UART_RX_FIFO_CLR;
 479              		.loc 1 763 0
 480 0006 064B     		ldr	r3, .L44
 481 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 482 000a 42F00102 		orr	r2, r2, #1
 483 000e 1A70     		strb	r2, [r3]
 764:Generated_Source\PSoC5/UART.c ****         UART_RXDATA_AUX_CTL_REG &= (uint8) ~UART_RX_FIFO_CLR;
 484              		.loc 1 764 0
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 23


 485 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 486 0012 02F0FE02 		and	r2, r2, #254
 487 0016 1A70     		strb	r2, [r3]
 765:Generated_Source\PSoC5/UART.c ****         CyExitCriticalSection(enableInterrupts);
 488              		.loc 1 765 0
 489 0018 FFF7FEFF 		bl	CyExitCriticalSection
 490              	.LVL29:
 491 001c 08BD     		pop	{r3, pc}
 492              	.L45:
 493 001e 00BF     		.align	2
 494              	.L44:
 495 0020 95650040 		.word	1073767829
 496              		.cfi_endproc
 497              	.LFE12:
 498              		.size	UART_ClearRxBuffer, .-UART_ClearRxBuffer
 499              		.section	.text.UART_SetRxAddressMode,"ax",%progbits
 500              		.align	2
 501              		.global	UART_SetRxAddressMode
 502              		.thumb
 503              		.thumb_func
 504              		.type	UART_SetRxAddressMode, %function
 505              	UART_SetRxAddressMode:
 506              	.LFB13:
 766:Generated_Source\PSoC5/UART.c **** 
 767:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 768:Generated_Source\PSoC5/UART.c **** 
 769:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
 770:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 771:Generated_Source\PSoC5/UART.c **** 
 772:Generated_Source\PSoC5/UART.c ****         UART_rxBufferRead = 0u;
 773:Generated_Source\PSoC5/UART.c ****         UART_rxBufferWrite = 0u;
 774:Generated_Source\PSoC5/UART.c ****         UART_rxBufferLoopDetect = 0u;
 775:Generated_Source\PSoC5/UART.c ****         UART_rxBufferOverflow = 0u;
 776:Generated_Source\PSoC5/UART.c **** 
 777:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 778:Generated_Source\PSoC5/UART.c **** 
 779:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 780:Generated_Source\PSoC5/UART.c **** 
 781:Generated_Source\PSoC5/UART.c ****     }
 782:Generated_Source\PSoC5/UART.c **** 
 783:Generated_Source\PSoC5/UART.c **** 
 784:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 785:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddressMode
 786:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 787:Generated_Source\PSoC5/UART.c ****     *
 788:Generated_Source\PSoC5/UART.c ****     * Summary:
 789:Generated_Source\PSoC5/UART.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:Generated_Source\PSoC5/UART.c ****     *  UART.
 791:Generated_Source\PSoC5/UART.c ****     *
 792:Generated_Source\PSoC5/UART.c ****     * Parameters:
 793:Generated_Source\PSoC5/UART.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:Generated_Source\PSoC5/UART.c ****     *                                               detection
 796:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:Generated_Source\PSoC5/UART.c ****     *                                               address detection
 798:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:Generated_Source\PSoC5/UART.c ****     *                                               detection
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 24


 800:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:Generated_Source\PSoC5/UART.c ****     *                                               address detection
 802:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_NONE - No address detection
 803:Generated_Source\PSoC5/UART.c ****     *
 804:Generated_Source\PSoC5/UART.c ****     * Return:
 805:Generated_Source\PSoC5/UART.c ****     *  None.
 806:Generated_Source\PSoC5/UART.c ****     *
 807:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 808:Generated_Source\PSoC5/UART.c ****     *  UART_rxAddressMode - the parameter stored in this variable for
 809:Generated_Source\PSoC5/UART.c ****     *   the farther usage in RX ISR.
 810:Generated_Source\PSoC5/UART.c ****     *  UART_rxAddressDetected - set to initial state (0).
 811:Generated_Source\PSoC5/UART.c ****     *
 812:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 813:Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddressMode(uint8 addressMode)
 814:Generated_Source\PSoC5/UART.c ****                                                         
 815:Generated_Source\PSoC5/UART.c ****     {
 507              		.loc 1 815 0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 0
 510              		@ frame_needed = 0, uses_anonymous_args = 0
 511              		@ link register save eliminated.
 512              	.LVL30:
 513 0000 7047     		bx	lr
 514              		.cfi_endproc
 515              	.LFE13:
 516              		.size	UART_SetRxAddressMode, .-UART_SetRxAddressMode
 517 0002 00BF     		.section	.text.UART_SetRxAddress1,"ax",%progbits
 518              		.align	2
 519              		.global	UART_SetRxAddress1
 520              		.thumb
 521              		.thumb_func
 522              		.type	UART_SetRxAddress1, %function
 523              	UART_SetRxAddress1:
 524              	.LFB14:
 816:Generated_Source\PSoC5/UART.c ****         #if(UART_RXHW_ADDRESS_ENABLED)
 817:Generated_Source\PSoC5/UART.c ****             #if(UART_CONTROL_REG_REMOVED)
 818:Generated_Source\PSoC5/UART.c ****                 if(0u != addressMode)
 819:Generated_Source\PSoC5/UART.c ****                 {
 820:Generated_Source\PSoC5/UART.c ****                     /* Suppress compiler warning */
 821:Generated_Source\PSoC5/UART.c ****                 }
 822:Generated_Source\PSoC5/UART.c ****             #else /* UART_CONTROL_REG_REMOVED */
 823:Generated_Source\PSoC5/UART.c ****                 uint8 tmpCtrl;
 824:Generated_Source\PSoC5/UART.c ****                 tmpCtrl = UART_CONTROL_REG & (uint8)~UART_CTRL_RXADDR_MODE_MASK;
 825:Generated_Source\PSoC5/UART.c ****                 tmpCtrl |= (uint8)(addressMode << UART_CTRL_RXADDR_MODE0_SHIFT);
 826:Generated_Source\PSoC5/UART.c ****                 UART_CONTROL_REG = tmpCtrl;
 827:Generated_Source\PSoC5/UART.c **** 
 828:Generated_Source\PSoC5/UART.c ****                 #if(UART_RX_INTERRUPT_ENABLED && \
 829:Generated_Source\PSoC5/UART.c ****                    (UART_RXBUFFERSIZE > UART_FIFO_LENGTH) )
 830:Generated_Source\PSoC5/UART.c ****                     UART_rxAddressMode = addressMode;
 831:Generated_Source\PSoC5/UART.c ****                     UART_rxAddressDetected = 0u;
 832:Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_RXBUFFERSIZE > UART_FIFO_LENGTH*/
 833:Generated_Source\PSoC5/UART.c ****             #endif /* End UART_CONTROL_REG_REMOVED */
 834:Generated_Source\PSoC5/UART.c ****         #else /* UART_RXHW_ADDRESS_ENABLED */
 835:Generated_Source\PSoC5/UART.c ****             if(0u != addressMode)
 836:Generated_Source\PSoC5/UART.c ****             {
 837:Generated_Source\PSoC5/UART.c ****                 /* Suppress compiler warning */
 838:Generated_Source\PSoC5/UART.c ****             }
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 25


 839:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 840:Generated_Source\PSoC5/UART.c ****     }
 841:Generated_Source\PSoC5/UART.c **** 
 842:Generated_Source\PSoC5/UART.c **** 
 843:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 844:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddress1
 845:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 846:Generated_Source\PSoC5/UART.c ****     *
 847:Generated_Source\PSoC5/UART.c ****     * Summary:
 848:Generated_Source\PSoC5/UART.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:Generated_Source\PSoC5/UART.c ****     *
 850:Generated_Source\PSoC5/UART.c ****     * Parameters:
 851:Generated_Source\PSoC5/UART.c ****     *  address: Address #1 for hardware address detection.
 852:Generated_Source\PSoC5/UART.c ****     *
 853:Generated_Source\PSoC5/UART.c ****     * Return:
 854:Generated_Source\PSoC5/UART.c ****     *  None.
 855:Generated_Source\PSoC5/UART.c ****     *
 856:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 857:Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddress1(uint8 address) 
 858:Generated_Source\PSoC5/UART.c ****     {
 525              		.loc 1 858 0
 526              		.cfi_startproc
 527              		@ args = 0, pretend = 0, frame = 0
 528              		@ frame_needed = 0, uses_anonymous_args = 0
 529              		@ link register save eliminated.
 530              	.LVL31:
 859:Generated_Source\PSoC5/UART.c ****         UART_RXADDRESS1_REG = address;
 531              		.loc 1 859 0
 532 0000 014B     		ldr	r3, .L48
 533 0002 1870     		strb	r0, [r3]
 534 0004 7047     		bx	lr
 535              	.L49:
 536 0006 00BF     		.align	2
 537              	.L48:
 538 0008 25650040 		.word	1073767717
 539              		.cfi_endproc
 540              	.LFE14:
 541              		.size	UART_SetRxAddress1, .-UART_SetRxAddress1
 542              		.section	.text.UART_SetRxAddress2,"ax",%progbits
 543              		.align	2
 544              		.global	UART_SetRxAddress2
 545              		.thumb
 546              		.thumb_func
 547              		.type	UART_SetRxAddress2, %function
 548              	UART_SetRxAddress2:
 549              	.LFB15:
 860:Generated_Source\PSoC5/UART.c ****     }
 861:Generated_Source\PSoC5/UART.c **** 
 862:Generated_Source\PSoC5/UART.c **** 
 863:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 864:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddress2
 865:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 866:Generated_Source\PSoC5/UART.c ****     *
 867:Generated_Source\PSoC5/UART.c ****     * Summary:
 868:Generated_Source\PSoC5/UART.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:Generated_Source\PSoC5/UART.c ****     *
 870:Generated_Source\PSoC5/UART.c ****     * Parameters:
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 26


 871:Generated_Source\PSoC5/UART.c ****     *  address: Address #2 for hardware address detection.
 872:Generated_Source\PSoC5/UART.c ****     *
 873:Generated_Source\PSoC5/UART.c ****     * Return:
 874:Generated_Source\PSoC5/UART.c ****     *  None.
 875:Generated_Source\PSoC5/UART.c ****     *
 876:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 877:Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddress2(uint8 address) 
 878:Generated_Source\PSoC5/UART.c ****     {
 550              		.loc 1 878 0
 551              		.cfi_startproc
 552              		@ args = 0, pretend = 0, frame = 0
 553              		@ frame_needed = 0, uses_anonymous_args = 0
 554              		@ link register save eliminated.
 555              	.LVL32:
 879:Generated_Source\PSoC5/UART.c ****         UART_RXADDRESS2_REG = address;
 556              		.loc 1 879 0
 557 0000 014B     		ldr	r3, .L51
 558 0002 1870     		strb	r0, [r3]
 559 0004 7047     		bx	lr
 560              	.L52:
 561 0006 00BF     		.align	2
 562              	.L51:
 563 0008 35650040 		.word	1073767733
 564              		.cfi_endproc
 565              	.LFE15:
 566              		.size	UART_SetRxAddress2, .-UART_SetRxAddress2
 567              		.section	.text.UART_SetTxInterruptMode,"ax",%progbits
 568              		.align	2
 569              		.global	UART_SetTxInterruptMode
 570              		.thumb
 571              		.thumb_func
 572              		.type	UART_SetTxInterruptMode, %function
 573              	UART_SetTxInterruptMode:
 574              	.LFB16:
 880:Generated_Source\PSoC5/UART.c ****     }
 881:Generated_Source\PSoC5/UART.c **** 
 882:Generated_Source\PSoC5/UART.c **** #endif  /* UART_RX_ENABLED || UART_HD_ENABLED*/
 883:Generated_Source\PSoC5/UART.c **** 
 884:Generated_Source\PSoC5/UART.c **** 
 885:Generated_Source\PSoC5/UART.c **** #if( (UART_TX_ENABLED) || (UART_HD_ENABLED) )
 886:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 887:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetTxInterruptMode
 888:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 889:Generated_Source\PSoC5/UART.c ****     *
 890:Generated_Source\PSoC5/UART.c ****     * Summary:
 891:Generated_Source\PSoC5/UART.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:Generated_Source\PSoC5/UART.c ****     *  interrupt.
 893:Generated_Source\PSoC5/UART.c ****     *
 894:Generated_Source\PSoC5/UART.c ****     * Parameters:
 895:Generated_Source\PSoC5/UART.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:Generated_Source\PSoC5/UART.c ****     *
 901:Generated_Source\PSoC5/UART.c ****     * Return:
 902:Generated_Source\PSoC5/UART.c ****     *  None.
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 27


 903:Generated_Source\PSoC5/UART.c ****     *
 904:Generated_Source\PSoC5/UART.c ****     * Theory:
 905:Generated_Source\PSoC5/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:Generated_Source\PSoC5/UART.c ****     *
 907:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 908:Generated_Source\PSoC5/UART.c ****     void UART_SetTxInterruptMode(uint8 intSrc) 
 909:Generated_Source\PSoC5/UART.c ****     {
 575              		.loc 1 909 0
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 0
 578              		@ frame_needed = 0, uses_anonymous_args = 0
 579              		@ link register save eliminated.
 580              	.LVL33:
 910:Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_MASK_REG = intSrc;
 581              		.loc 1 910 0
 582 0000 014B     		ldr	r3, .L54
 583 0002 1870     		strb	r0, [r3]
 584 0004 7047     		bx	lr
 585              	.L55:
 586 0006 00BF     		.align	2
 587              	.L54:
 588 0008 84640040 		.word	1073767556
 589              		.cfi_endproc
 590              	.LFE16:
 591              		.size	UART_SetTxInterruptMode, .-UART_SetTxInterruptMode
 592              		.section	.text.UART_WriteTxData,"ax",%progbits
 593              		.align	2
 594              		.global	UART_WriteTxData
 595              		.thumb
 596              		.thumb_func
 597              		.type	UART_WriteTxData, %function
 598              	UART_WriteTxData:
 599              	.LFB17:
 911:Generated_Source\PSoC5/UART.c ****     }
 912:Generated_Source\PSoC5/UART.c **** 
 913:Generated_Source\PSoC5/UART.c **** 
 914:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 915:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_WriteTxData
 916:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 917:Generated_Source\PSoC5/UART.c ****     *
 918:Generated_Source\PSoC5/UART.c ****     * Summary:
 919:Generated_Source\PSoC5/UART.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:Generated_Source\PSoC5/UART.c ****     *  available without checking the TX status register. You must check status
 921:Generated_Source\PSoC5/UART.c ****     *  separately.
 922:Generated_Source\PSoC5/UART.c ****     *
 923:Generated_Source\PSoC5/UART.c ****     * Parameters:
 924:Generated_Source\PSoC5/UART.c ****     *  txDataByte: data byte
 925:Generated_Source\PSoC5/UART.c ****     *
 926:Generated_Source\PSoC5/UART.c ****     * Return:
 927:Generated_Source\PSoC5/UART.c ****     * None.
 928:Generated_Source\PSoC5/UART.c ****     *
 929:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 930:Generated_Source\PSoC5/UART.c ****     *  UART_txBuffer - RAM buffer pointer for save data for transmission
 931:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cyclic index for write to txBuffer,
 932:Generated_Source\PSoC5/UART.c ****     *    incremented after each byte saved to buffer.
 933:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cyclic index for read from txBuffer,
 934:Generated_Source\PSoC5/UART.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 28


 935:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
 936:Generated_Source\PSoC5/UART.c ****     *    initialized.
 937:Generated_Source\PSoC5/UART.c ****     *
 938:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 939:Generated_Source\PSoC5/UART.c ****     *  No.
 940:Generated_Source\PSoC5/UART.c ****     *
 941:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 942:Generated_Source\PSoC5/UART.c ****     void UART_WriteTxData(uint8 txDataByte) 
 943:Generated_Source\PSoC5/UART.c ****     {
 600              		.loc 1 943 0
 601              		.cfi_startproc
 602              		@ args = 0, pretend = 0, frame = 0
 603              		@ frame_needed = 0, uses_anonymous_args = 0
 604              		@ link register save eliminated.
 605              	.LVL34:
 944:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function*/
 945:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 606              		.loc 1 945 0
 607 0000 114B     		ldr	r3, .L61
 608 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 609 0004 F3B1     		cbz	r3, .L56
 946:Generated_Source\PSoC5/UART.c ****         {
 947:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 948:Generated_Source\PSoC5/UART.c **** 
 949:Generated_Source\PSoC5/UART.c ****             /* Protect variables that could change on interrupt. */
 950:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
 610              		.loc 1 950 0
 611 0006 0122     		movs	r2, #1
 612 0008 104B     		ldr	r3, .L61+4
 613 000a 1A60     		str	r2, [r3]
 951:Generated_Source\PSoC5/UART.c **** 
 952:Generated_Source\PSoC5/UART.c ****             if( (UART_txBufferRead == UART_txBufferWrite) &&
 614              		.loc 1 952 0
 615 000c 0E4A     		ldr	r2, .L61
 616 000e 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 617 0010 DBB2     		uxtb	r3, r3
 618 0012 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 619 0014 9342     		cmp	r3, r2
 620 0016 07D1     		bne	.L58
 953:Generated_Source\PSoC5/UART.c ****                 ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 621              		.loc 1 953 0 discriminator 1
 622 0018 0D4B     		ldr	r3, .L61+8
 623 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 952:Generated_Source\PSoC5/UART.c ****                 ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 624              		.loc 1 952 0 discriminator 1
 625 001c 13F0040F 		tst	r3, #4
 626 0020 02D1     		bne	.L58
 954:Generated_Source\PSoC5/UART.c ****             {
 955:Generated_Source\PSoC5/UART.c ****                 /* Add directly to the FIFO. */
 956:Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = txDataByte;
 627              		.loc 1 956 0
 628 0022 0C4B     		ldr	r3, .L61+12
 629 0024 1870     		strb	r0, [r3]
 630 0026 0AE0     		b	.L59
 631              	.L58:
 957:Generated_Source\PSoC5/UART.c ****             }
 958:Generated_Source\PSoC5/UART.c ****             else
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 29


 959:Generated_Source\PSoC5/UART.c ****             {
 960:Generated_Source\PSoC5/UART.c ****                 if(UART_txBufferWrite >= UART_TX_BUFFER_SIZE)
 632              		.loc 1 960 0
 633 0028 FF2A     		cmp	r2, #255
 634 002a 02D1     		bne	.L60
 961:Generated_Source\PSoC5/UART.c ****                 {
 962:Generated_Source\PSoC5/UART.c ****                     UART_txBufferWrite = 0u;
 635              		.loc 1 962 0
 636 002c 0022     		movs	r2, #0
 637 002e 064B     		ldr	r3, .L61
 638 0030 9A70     		strb	r2, [r3, #2]
 639              	.L60:
 963:Generated_Source\PSoC5/UART.c ****                 }
 964:Generated_Source\PSoC5/UART.c **** 
 965:Generated_Source\PSoC5/UART.c ****                 UART_txBuffer[UART_txBufferWrite] = txDataByte;
 640              		.loc 1 965 0
 641 0032 054A     		ldr	r2, .L61
 642 0034 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 643 0036 0849     		ldr	r1, .L61+16
 644 0038 C854     		strb	r0, [r1, r3]
 966:Generated_Source\PSoC5/UART.c **** 
 967:Generated_Source\PSoC5/UART.c ****                 /* Add to the software buffer. */
 968:Generated_Source\PSoC5/UART.c ****                 UART_txBufferWrite++;
 645              		.loc 1 968 0
 646 003a 0133     		adds	r3, r3, #1
 647 003c 9370     		strb	r3, [r2, #2]
 648              	.L59:
 969:Generated_Source\PSoC5/UART.c ****             }
 970:Generated_Source\PSoC5/UART.c **** 
 971:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
 649              		.loc 1 971 0
 650 003e 0122     		movs	r2, #1
 651 0040 064B     		ldr	r3, .L61+20
 652 0042 1A60     		str	r2, [r3]
 653              	.L56:
 654 0044 7047     		bx	lr
 655              	.L62:
 656 0046 00BF     		.align	2
 657              	.L61:
 658 0048 00000000 		.word	.LANCHOR0
 659 004c 80E100E0 		.word	-536813184
 660 0050 64640040 		.word	1073767524
 661 0054 44640040 		.word	1073767492
 662 0058 00000000 		.word	UART_txBuffer
 663 005c 00E100E0 		.word	-536813312
 664              		.cfi_endproc
 665              	.LFE17:
 666              		.size	UART_WriteTxData, .-UART_WriteTxData
 667              		.section	.text.UART_ReadTxStatus,"ax",%progbits
 668              		.align	2
 669              		.global	UART_ReadTxStatus
 670              		.thumb
 671              		.thumb_func
 672              		.type	UART_ReadTxStatus, %function
 673              	UART_ReadTxStatus:
 674              	.LFB18:
 972:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 30


 973:Generated_Source\PSoC5/UART.c ****         #else
 974:Generated_Source\PSoC5/UART.c **** 
 975:Generated_Source\PSoC5/UART.c ****             /* Add directly to the FIFO. */
 976:Generated_Source\PSoC5/UART.c ****             UART_TXDATA_REG = txDataByte;
 977:Generated_Source\PSoC5/UART.c **** 
 978:Generated_Source\PSoC5/UART.c ****         #endif /*(UART_TX_INTERRUPT_ENABLED) */
 979:Generated_Source\PSoC5/UART.c ****         }
 980:Generated_Source\PSoC5/UART.c ****     }
 981:Generated_Source\PSoC5/UART.c **** 
 982:Generated_Source\PSoC5/UART.c **** 
 983:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 984:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadTxStatus
 985:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 986:Generated_Source\PSoC5/UART.c ****     *
 987:Generated_Source\PSoC5/UART.c ****     * Summary:
 988:Generated_Source\PSoC5/UART.c ****     *  Reads the status register for the TX portion of the UART.
 989:Generated_Source\PSoC5/UART.c ****     *
 990:Generated_Source\PSoC5/UART.c ****     * Parameters:
 991:Generated_Source\PSoC5/UART.c ****     *  None.
 992:Generated_Source\PSoC5/UART.c ****     *
 993:Generated_Source\PSoC5/UART.c ****     * Return:
 994:Generated_Source\PSoC5/UART.c ****     *  Contents of the status register
 995:Generated_Source\PSoC5/UART.c ****     *
 996:Generated_Source\PSoC5/UART.c ****     * Theory:
 997:Generated_Source\PSoC5/UART.c ****     *  This function reads the TX status register, which is cleared on read.
 998:Generated_Source\PSoC5/UART.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:Generated_Source\PSoC5/UART.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:Generated_Source\PSoC5/UART.c ****     *  and must be handled accordingly.
1001:Generated_Source\PSoC5/UART.c ****     *
1002:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1003:Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadTxStatus(void) 
1004:Generated_Source\PSoC5/UART.c ****     {
 675              		.loc 1 1004 0
 676              		.cfi_startproc
 677              		@ args = 0, pretend = 0, frame = 0
 678              		@ frame_needed = 0, uses_anonymous_args = 0
 679              		@ link register save eliminated.
1005:Generated_Source\PSoC5/UART.c ****         return(UART_TXSTATUS_REG);
 680              		.loc 1 1005 0
 681 0000 014B     		ldr	r3, .L64
 682 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
1006:Generated_Source\PSoC5/UART.c ****     }
 683              		.loc 1 1006 0
 684 0004 7047     		bx	lr
 685              	.L65:
 686 0006 00BF     		.align	2
 687              	.L64:
 688 0008 64640040 		.word	1073767524
 689              		.cfi_endproc
 690              	.LFE18:
 691              		.size	UART_ReadTxStatus, .-UART_ReadTxStatus
 692              		.section	.text.UART_PutChar,"ax",%progbits
 693              		.align	2
 694              		.global	UART_PutChar
 695              		.thumb
 696              		.thumb_func
 697              		.type	UART_PutChar, %function
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 31


 698              	UART_PutChar:
 699              	.LFB19:
1007:Generated_Source\PSoC5/UART.c **** 
1008:Generated_Source\PSoC5/UART.c **** 
1009:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1010:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutChar
1011:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1012:Generated_Source\PSoC5/UART.c ****     *
1013:Generated_Source\PSoC5/UART.c ****     * Summary:
1014:Generated_Source\PSoC5/UART.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:Generated_Source\PSoC5/UART.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:Generated_Source\PSoC5/UART.c ****     *  hold the data.
1017:Generated_Source\PSoC5/UART.c ****     *
1018:Generated_Source\PSoC5/UART.c ****     * Parameters:
1019:Generated_Source\PSoC5/UART.c ****     *  txDataByte: Byte containing the data to transmit
1020:Generated_Source\PSoC5/UART.c ****     *
1021:Generated_Source\PSoC5/UART.c ****     * Return:
1022:Generated_Source\PSoC5/UART.c ****     *  None.
1023:Generated_Source\PSoC5/UART.c ****     *
1024:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1025:Generated_Source\PSoC5/UART.c ****     *  UART_txBuffer - RAM buffer pointer for save data for transmission
1026:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cyclic index for write to txBuffer,
1027:Generated_Source\PSoC5/UART.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:Generated_Source\PSoC5/UART.c ****     *     saved to buffer.
1029:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cyclic index for read from txBuffer,
1030:Generated_Source\PSoC5/UART.c ****     *     checked to identify free space in txBuffer.
1031:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1032:Generated_Source\PSoC5/UART.c ****     *     initialized.
1033:Generated_Source\PSoC5/UART.c ****     *
1034:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1035:Generated_Source\PSoC5/UART.c ****     *  No.
1036:Generated_Source\PSoC5/UART.c ****     *
1037:Generated_Source\PSoC5/UART.c ****     * Theory:
1038:Generated_Source\PSoC5/UART.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:Generated_Source\PSoC5/UART.c ****     *
1040:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1041:Generated_Source\PSoC5/UART.c ****     void UART_PutChar(uint8 txDataByte) 
1042:Generated_Source\PSoC5/UART.c ****     {
 700              		.loc 1 1042 0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 0
 703              		@ frame_needed = 0, uses_anonymous_args = 0
 704              		@ link register save eliminated.
 705              	.LVL35:
 706              	.L69:
1043:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1044:Generated_Source\PSoC5/UART.c ****         /* The temporary output pointer is used since it takes two instructions
1045:Generated_Source\PSoC5/UART.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:Generated_Source\PSoC5/UART.c ****         *  pointer and getting an interrupt in between instructions.
1047:Generated_Source\PSoC5/UART.c ****         */
1048:Generated_Source\PSoC5/UART.c ****         uint8 locTxBufferWrite;
1049:Generated_Source\PSoC5/UART.c ****         uint8 locTxBufferRead;
1050:Generated_Source\PSoC5/UART.c **** 
1051:Generated_Source\PSoC5/UART.c ****         do
1052:Generated_Source\PSoC5/UART.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:Generated_Source\PSoC5/UART.c **** 
1054:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 32


1055:Generated_Source\PSoC5/UART.c ****             /* Disable TX interrupt to protect variables from modification */
1056:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
1057:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:Generated_Source\PSoC5/UART.c **** 
1059:Generated_Source\PSoC5/UART.c ****             locTxBufferWrite = UART_txBufferWrite;
 707              		.loc 1 1059 0
 708 0000 164B     		ldr	r3, .L74
 709 0002 9978     		ldrb	r1, [r3, #2]	@ zero_extendqisi2
 710              	.LVL36:
1060:Generated_Source\PSoC5/UART.c ****             locTxBufferRead  = UART_txBufferRead;
 711              		.loc 1 1060 0
 712 0004 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 713 0006 DBB2     		uxtb	r3, r3
 714              	.LVL37:
1061:Generated_Source\PSoC5/UART.c **** 
1062:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:Generated_Source\PSoC5/UART.c ****             /* Enable interrupt to continue transmission */
1064:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
1065:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:Generated_Source\PSoC5/UART.c ****         }
1067:Generated_Source\PSoC5/UART.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
 715              		.loc 1 1067 0
 716 0008 9942     		cmp	r1, r3
 717 000a 05D2     		bcs	.L67
 718              		.loc 1 1067 0 is_stmt 0 discriminator 1
 719 000c 5A1E     		subs	r2, r3, #1
 720 000e 9142     		cmp	r1, r2
 721 0010 14BF     		ite	ne
 722 0012 0022     		movne	r2, #0
 723 0014 0122     		moveq	r2, #1
 724 0016 04E0     		b	.L68
 725              	.L67:
1068:Generated_Source\PSoC5/UART.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
 726              		.loc 1 1068 0 is_stmt 1 discriminator 2
 727 0018 CA1A     		subs	r2, r1, r3
1067:Generated_Source\PSoC5/UART.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
 728              		.loc 1 1067 0 discriminator 2
 729 001a FE2A     		cmp	r2, #254
 730 001c 14BF     		ite	ne
 731 001e 0022     		movne	r2, #0
 732 0020 0122     		moveq	r2, #1
 733              	.L68:
1069:Generated_Source\PSoC5/UART.c ****                                 (uint8)(UART_TX_BUFFER_SIZE - 1u)) );
 734              		.loc 1 1069 0
 735 0022 002A     		cmp	r2, #0
 736 0024 ECD1     		bne	.L69
1070:Generated_Source\PSoC5/UART.c **** 
1071:Generated_Source\PSoC5/UART.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
 737              		.loc 1 1071 0
 738 0026 8B42     		cmp	r3, r1
 739 0028 07D1     		bne	.L70
1072:Generated_Source\PSoC5/UART.c ****             ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 740              		.loc 1 1072 0 discriminator 1
 741 002a 0D4B     		ldr	r3, .L74+4
 742              	.LVL38:
 743 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1071:Generated_Source\PSoC5/UART.c ****             ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 33


 744              		.loc 1 1071 0 discriminator 1
 745 002e 13F0040F 		tst	r3, #4
 746 0032 02D1     		bne	.L70
1073:Generated_Source\PSoC5/UART.c ****         {
1074:Generated_Source\PSoC5/UART.c ****             /* Add directly to the FIFO */
1075:Generated_Source\PSoC5/UART.c ****             UART_TXDATA_REG = txDataByte;
 747              		.loc 1 1075 0
 748 0034 0B4B     		ldr	r3, .L74+8
 749 0036 1870     		strb	r0, [r3]
 750 0038 7047     		bx	lr
 751              	.L70:
1076:Generated_Source\PSoC5/UART.c ****         }
1077:Generated_Source\PSoC5/UART.c ****         else
1078:Generated_Source\PSoC5/UART.c ****         {
1079:Generated_Source\PSoC5/UART.c ****             if(locTxBufferWrite >= UART_TX_BUFFER_SIZE)
 752              		.loc 1 1079 0
 753 003a FF29     		cmp	r1, #255
 754 003c 00D1     		bne	.L72
1080:Generated_Source\PSoC5/UART.c ****             {
1081:Generated_Source\PSoC5/UART.c ****                 locTxBufferWrite = 0u;
 755              		.loc 1 1081 0
 756 003e 0021     		movs	r1, #0
 757              	.LVL39:
 758              	.L72:
1082:Generated_Source\PSoC5/UART.c ****             }
1083:Generated_Source\PSoC5/UART.c ****             /* Add to the software buffer. */
1084:Generated_Source\PSoC5/UART.c ****             UART_txBuffer[locTxBufferWrite] = txDataByte;
 759              		.loc 1 1084 0
 760 0040 094B     		ldr	r3, .L74+12
 761 0042 5854     		strb	r0, [r3, r1]
1085:Generated_Source\PSoC5/UART.c ****             locTxBufferWrite++;
 762              		.loc 1 1085 0
 763 0044 0131     		adds	r1, r1, #1
 764              	.LVL40:
1086:Generated_Source\PSoC5/UART.c **** 
1087:Generated_Source\PSoC5/UART.c ****             /* Finally, update the real output pointer */
1088:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
1090:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:Generated_Source\PSoC5/UART.c **** 
1092:Generated_Source\PSoC5/UART.c ****             UART_txBufferWrite = locTxBufferWrite;
 765              		.loc 1 1092 0
 766 0046 054B     		ldr	r3, .L74
 767 0048 9970     		strb	r1, [r3, #2]
1093:Generated_Source\PSoC5/UART.c **** 
1094:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
1096:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:Generated_Source\PSoC5/UART.c **** 
1098:Generated_Source\PSoC5/UART.c ****             if(0u != (UART_TXSTATUS_REG & UART_TX_STS_FIFO_EMPTY))
 768              		.loc 1 1098 0
 769 004a 054B     		ldr	r3, .L74+4
 770 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 771 004e 13F0020F 		tst	r3, #2
 772 0052 02D0     		beq	.L66
1099:Generated_Source\PSoC5/UART.c ****             {
1100:Generated_Source\PSoC5/UART.c ****                 /* Trigger TX interrupt to send software buffer */
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 34


1101:Generated_Source\PSoC5/UART.c ****                 UART_SetPendingTxInt();
 773              		.loc 1 1101 0
 774 0054 0122     		movs	r2, #1
 775 0056 054B     		ldr	r3, .L74+16
 776 0058 1A60     		str	r2, [r3]
 777              	.L66:
 778 005a 7047     		bx	lr
 779              	.L75:
 780              		.align	2
 781              	.L74:
 782 005c 00000000 		.word	.LANCHOR0
 783 0060 64640040 		.word	1073767524
 784 0064 44640040 		.word	1073767492
 785 0068 00000000 		.word	UART_txBuffer
 786 006c 00E200E0 		.word	-536813056
 787              		.cfi_endproc
 788              	.LFE19:
 789              		.size	UART_PutChar, .-UART_PutChar
 790              		.section	.text.UART_PutString,"ax",%progbits
 791              		.align	2
 792              		.global	UART_PutString
 793              		.thumb
 794              		.thumb_func
 795              		.type	UART_PutString, %function
 796              	UART_PutString:
 797              	.LFB20:
1102:Generated_Source\PSoC5/UART.c ****             }
1103:Generated_Source\PSoC5/UART.c ****         }
1104:Generated_Source\PSoC5/UART.c **** 
1105:Generated_Source\PSoC5/UART.c ****     #else
1106:Generated_Source\PSoC5/UART.c **** 
1107:Generated_Source\PSoC5/UART.c ****         while((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) != 0u)
1108:Generated_Source\PSoC5/UART.c ****         {
1109:Generated_Source\PSoC5/UART.c ****             /* Wait for room in the FIFO */
1110:Generated_Source\PSoC5/UART.c ****         }
1111:Generated_Source\PSoC5/UART.c **** 
1112:Generated_Source\PSoC5/UART.c ****         /* Add directly to the FIFO */
1113:Generated_Source\PSoC5/UART.c ****         UART_TXDATA_REG = txDataByte;
1114:Generated_Source\PSoC5/UART.c **** 
1115:Generated_Source\PSoC5/UART.c ****     #endif /* UART_TX_INTERRUPT_ENABLED */
1116:Generated_Source\PSoC5/UART.c ****     }
1117:Generated_Source\PSoC5/UART.c **** 
1118:Generated_Source\PSoC5/UART.c **** 
1119:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1120:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutString
1121:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1122:Generated_Source\PSoC5/UART.c ****     *
1123:Generated_Source\PSoC5/UART.c ****     * Summary:
1124:Generated_Source\PSoC5/UART.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:Generated_Source\PSoC5/UART.c ****     *
1126:Generated_Source\PSoC5/UART.c ****     * Parameters:
1127:Generated_Source\PSoC5/UART.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:Generated_Source\PSoC5/UART.c ****     *
1129:Generated_Source\PSoC5/UART.c ****     * Return:
1130:Generated_Source\PSoC5/UART.c ****     *  None.
1131:Generated_Source\PSoC5/UART.c ****     *
1132:Generated_Source\PSoC5/UART.c ****     * Global Variables:
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 35


1133:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1134:Generated_Source\PSoC5/UART.c ****     *     initialized.
1135:Generated_Source\PSoC5/UART.c ****     *
1136:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1137:Generated_Source\PSoC5/UART.c ****     *  No.
1138:Generated_Source\PSoC5/UART.c ****     *
1139:Generated_Source\PSoC5/UART.c ****     * Theory:
1140:Generated_Source\PSoC5/UART.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:Generated_Source\PSoC5/UART.c ****     *  function blocks until the last character of the string is loaded into the
1142:Generated_Source\PSoC5/UART.c ****     *  TX buffer.
1143:Generated_Source\PSoC5/UART.c ****     *
1144:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1145:Generated_Source\PSoC5/UART.c ****     void UART_PutString(const char8 string[]) 
1146:Generated_Source\PSoC5/UART.c ****     {
 798              		.loc 1 1146 0
 799              		.cfi_startproc
 800              		@ args = 0, pretend = 0, frame = 0
 801              		@ frame_needed = 0, uses_anonymous_args = 0
 802              	.LVL41:
 803 0000 38B5     		push	{r3, r4, r5, lr}
 804              		.cfi_def_cfa_offset 16
 805              		.cfi_offset 3, -16
 806              		.cfi_offset 4, -12
 807              		.cfi_offset 5, -8
 808              		.cfi_offset 14, -4
 809              	.LVL42:
1147:Generated_Source\PSoC5/UART.c ****         uint16 bufIndex = 0u;
1148:Generated_Source\PSoC5/UART.c **** 
1149:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1150:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 810              		.loc 1 1150 0
 811 0002 074B     		ldr	r3, .L82
 812 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 813 0006 2BB9     		cbnz	r3, .L80
 814 0008 38BD     		pop	{r3, r4, r5, pc}
 815              	.LVL43:
 816              	.L79:
1151:Generated_Source\PSoC5/UART.c ****         {
1152:Generated_Source\PSoC5/UART.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:Generated_Source\PSoC5/UART.c ****             while(string[bufIndex] != (char8) 0)
1154:Generated_Source\PSoC5/UART.c ****             {
1155:Generated_Source\PSoC5/UART.c ****                 UART_PutChar((uint8)string[bufIndex]);
 817              		.loc 1 1155 0
 818 000a FFF7FEFF 		bl	UART_PutChar
 819              	.LVL44:
1156:Generated_Source\PSoC5/UART.c ****                 bufIndex++;
 820              		.loc 1 1156 0
 821 000e 0134     		adds	r4, r4, #1
 822              	.LVL45:
 823 0010 A4B2     		uxth	r4, r4
 824              	.LVL46:
 825 0012 01E0     		b	.L77
 826              	.LVL47:
 827              	.L80:
 828 0014 0546     		mov	r5, r0
 829 0016 0024     		movs	r4, #0
 830              	.LVL48:
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 36


 831              	.L77:
1153:Generated_Source\PSoC5/UART.c ****             {
 832              		.loc 1 1153 0
 833 0018 285D     		ldrb	r0, [r5, r4]	@ zero_extendqisi2
 834 001a 0028     		cmp	r0, #0
 835 001c F5D1     		bne	.L79
 836 001e 38BD     		pop	{r3, r4, r5, pc}
 837              	.LVL49:
 838              	.L83:
 839              		.align	2
 840              	.L82:
 841 0020 00000000 		.word	.LANCHOR0
 842              		.cfi_endproc
 843              	.LFE20:
 844              		.size	UART_PutString, .-UART_PutString
 845              		.section	.text.UART_PutArray,"ax",%progbits
 846              		.align	2
 847              		.global	UART_PutArray
 848              		.thumb
 849              		.thumb_func
 850              		.type	UART_PutArray, %function
 851              	UART_PutArray:
 852              	.LFB21:
1157:Generated_Source\PSoC5/UART.c ****             }
1158:Generated_Source\PSoC5/UART.c ****         }
1159:Generated_Source\PSoC5/UART.c ****     }
1160:Generated_Source\PSoC5/UART.c **** 
1161:Generated_Source\PSoC5/UART.c **** 
1162:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1163:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutArray
1164:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1165:Generated_Source\PSoC5/UART.c ****     *
1166:Generated_Source\PSoC5/UART.c ****     * Summary:
1167:Generated_Source\PSoC5/UART.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:Generated_Source\PSoC5/UART.c ****     *  transmission.
1169:Generated_Source\PSoC5/UART.c ****     *
1170:Generated_Source\PSoC5/UART.c ****     * Parameters:
1171:Generated_Source\PSoC5/UART.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:Generated_Source\PSoC5/UART.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:Generated_Source\PSoC5/UART.c ****     *             Size parameter.
1174:Generated_Source\PSoC5/UART.c ****     *
1175:Generated_Source\PSoC5/UART.c ****     * Return:
1176:Generated_Source\PSoC5/UART.c ****     *  None.
1177:Generated_Source\PSoC5/UART.c ****     *
1178:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1179:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1180:Generated_Source\PSoC5/UART.c ****     *     initialized.
1181:Generated_Source\PSoC5/UART.c ****     *
1182:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1183:Generated_Source\PSoC5/UART.c ****     *  No.
1184:Generated_Source\PSoC5/UART.c ****     *
1185:Generated_Source\PSoC5/UART.c ****     * Theory:
1186:Generated_Source\PSoC5/UART.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:Generated_Source\PSoC5/UART.c ****     *  function blocks until the last character of the string is loaded into the
1188:Generated_Source\PSoC5/UART.c ****     *  TX buffer.
1189:Generated_Source\PSoC5/UART.c ****     *
1190:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 37


1191:Generated_Source\PSoC5/UART.c ****     void UART_PutArray(const uint8 string[], uint8 byteCount)
1192:Generated_Source\PSoC5/UART.c ****                                                                     
1193:Generated_Source\PSoC5/UART.c ****     {
 853              		.loc 1 1193 0
 854              		.cfi_startproc
 855              		@ args = 0, pretend = 0, frame = 0
 856              		@ frame_needed = 0, uses_anonymous_args = 0
 857              	.LVL50:
1194:Generated_Source\PSoC5/UART.c ****         uint8 bufIndex = 0u;
1195:Generated_Source\PSoC5/UART.c **** 
1196:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1197:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 858              		.loc 1 1197 0
 859 0000 084B     		ldr	r3, .L90
 860 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 861 0004 33B9     		cbnz	r3, .L88
 862 0006 7047     		bx	lr
 863              	.LVL51:
 864              	.L87:
 865              		.cfi_def_cfa_offset 16
 866              		.cfi_offset 4, -16
 867              		.cfi_offset 5, -12
 868              		.cfi_offset 6, -8
 869              		.cfi_offset 14, -4
1198:Generated_Source\PSoC5/UART.c ****         {
1199:Generated_Source\PSoC5/UART.c ****             while(bufIndex < byteCount)
1200:Generated_Source\PSoC5/UART.c ****             {
1201:Generated_Source\PSoC5/UART.c ****                 UART_PutChar(string[bufIndex]);
 870              		.loc 1 1201 0
 871 0008 305D     		ldrb	r0, [r6, r4]	@ zero_extendqisi2
 872 000a FFF7FEFF 		bl	UART_PutChar
 873              	.LVL52:
1202:Generated_Source\PSoC5/UART.c ****                 bufIndex++;
 874              		.loc 1 1202 0
 875 000e 0134     		adds	r4, r4, #1
 876              	.LVL53:
 877 0010 E4B2     		uxtb	r4, r4
 878              	.LVL54:
 879 0012 03E0     		b	.L85
 880              	.LVL55:
 881              	.L88:
 882              		.cfi_def_cfa_offset 0
 883              		.cfi_restore 4
 884              		.cfi_restore 5
 885              		.cfi_restore 6
 886              		.cfi_restore 14
1193:Generated_Source\PSoC5/UART.c ****         uint8 bufIndex = 0u;
 887              		.loc 1 1193 0
 888 0014 70B5     		push	{r4, r5, r6, lr}
 889              		.cfi_def_cfa_offset 16
 890              		.cfi_offset 4, -16
 891              		.cfi_offset 5, -12
 892              		.cfi_offset 6, -8
 893              		.cfi_offset 14, -4
 894 0016 0D46     		mov	r5, r1
 895 0018 0646     		mov	r6, r0
 896 001a 0024     		movs	r4, #0
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 38


 897              	.LVL56:
 898              	.L85:
1199:Generated_Source\PSoC5/UART.c ****             {
 899              		.loc 1 1199 0
 900 001c AC42     		cmp	r4, r5
 901 001e F3D3     		bcc	.L87
 902 0020 70BD     		pop	{r4, r5, r6, pc}
 903              	.LVL57:
 904              	.L91:
 905 0022 00BF     		.align	2
 906              	.L90:
 907 0024 00000000 		.word	.LANCHOR0
 908              		.cfi_endproc
 909              	.LFE21:
 910              		.size	UART_PutArray, .-UART_PutArray
 911              		.section	.text.UART_PutCRLF,"ax",%progbits
 912              		.align	2
 913              		.global	UART_PutCRLF
 914              		.thumb
 915              		.thumb_func
 916              		.type	UART_PutCRLF, %function
 917              	UART_PutCRLF:
 918              	.LFB22:
1203:Generated_Source\PSoC5/UART.c ****             }
1204:Generated_Source\PSoC5/UART.c ****         }
1205:Generated_Source\PSoC5/UART.c ****     }
1206:Generated_Source\PSoC5/UART.c **** 
1207:Generated_Source\PSoC5/UART.c **** 
1208:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1209:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutCRLF
1210:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1211:Generated_Source\PSoC5/UART.c ****     *
1212:Generated_Source\PSoC5/UART.c ****     * Summary:
1213:Generated_Source\PSoC5/UART.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:Generated_Source\PSoC5/UART.c ****     *  (0x0A) to the transmit buffer.
1215:Generated_Source\PSoC5/UART.c ****     *
1216:Generated_Source\PSoC5/UART.c ****     * Parameters:
1217:Generated_Source\PSoC5/UART.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:Generated_Source\PSoC5/UART.c ****     *
1219:Generated_Source\PSoC5/UART.c ****     * Return:
1220:Generated_Source\PSoC5/UART.c ****     *  None.
1221:Generated_Source\PSoC5/UART.c ****     *
1222:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1223:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1224:Generated_Source\PSoC5/UART.c ****     *     initialized.
1225:Generated_Source\PSoC5/UART.c ****     *
1226:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1227:Generated_Source\PSoC5/UART.c ****     *  No.
1228:Generated_Source\PSoC5/UART.c ****     *
1229:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1230:Generated_Source\PSoC5/UART.c ****     void UART_PutCRLF(uint8 txDataByte) 
1231:Generated_Source\PSoC5/UART.c ****     {
 919              		.loc 1 1231 0
 920              		.cfi_startproc
 921              		@ args = 0, pretend = 0, frame = 0
 922              		@ frame_needed = 0, uses_anonymous_args = 0
 923              	.LVL58:
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 39


 924 0000 08B5     		push	{r3, lr}
 925              		.cfi_def_cfa_offset 8
 926              		.cfi_offset 3, -8
 927              		.cfi_offset 14, -4
1232:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1233:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 928              		.loc 1 1233 0
 929 0002 064B     		ldr	r3, .L95
 930 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 931 0006 3BB1     		cbz	r3, .L92
1234:Generated_Source\PSoC5/UART.c ****         {
1235:Generated_Source\PSoC5/UART.c ****             UART_PutChar(txDataByte);
 932              		.loc 1 1235 0
 933 0008 FFF7FEFF 		bl	UART_PutChar
 934              	.LVL59:
1236:Generated_Source\PSoC5/UART.c ****             UART_PutChar(0x0Du);
 935              		.loc 1 1236 0
 936 000c 0D20     		movs	r0, #13
 937 000e FFF7FEFF 		bl	UART_PutChar
 938              	.LVL60:
1237:Generated_Source\PSoC5/UART.c ****             UART_PutChar(0x0Au);
 939              		.loc 1 1237 0
 940 0012 0A20     		movs	r0, #10
 941 0014 FFF7FEFF 		bl	UART_PutChar
 942              	.LVL61:
 943              	.L92:
 944 0018 08BD     		pop	{r3, pc}
 945              	.L96:
 946 001a 00BF     		.align	2
 947              	.L95:
 948 001c 00000000 		.word	.LANCHOR0
 949              		.cfi_endproc
 950              	.LFE22:
 951              		.size	UART_PutCRLF, .-UART_PutCRLF
 952              		.section	.text.UART_GetTxBufferSize,"ax",%progbits
 953              		.align	2
 954              		.global	UART_GetTxBufferSize
 955              		.thumb
 956              		.thumb_func
 957              		.type	UART_GetTxBufferSize, %function
 958              	UART_GetTxBufferSize:
 959              	.LFB23:
1238:Generated_Source\PSoC5/UART.c ****         }
1239:Generated_Source\PSoC5/UART.c ****     }
1240:Generated_Source\PSoC5/UART.c **** 
1241:Generated_Source\PSoC5/UART.c **** 
1242:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1243:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetTxBufferSize
1244:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1245:Generated_Source\PSoC5/UART.c ****     *
1246:Generated_Source\PSoC5/UART.c ****     * Summary:
1247:Generated_Source\PSoC5/UART.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:Generated_Source\PSoC5/UART.c ****     *  transmitted.
1249:Generated_Source\PSoC5/UART.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:Generated_Source\PSoC5/UART.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:Generated_Source\PSoC5/UART.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:Generated_Source\PSoC5/UART.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 40


1253:Generated_Source\PSoC5/UART.c ****     *    TX FIFO do not count.
1254:Generated_Source\PSoC5/UART.c ****     *
1255:Generated_Source\PSoC5/UART.c ****     * Parameters:
1256:Generated_Source\PSoC5/UART.c ****     *  None.
1257:Generated_Source\PSoC5/UART.c ****     *
1258:Generated_Source\PSoC5/UART.c ****     * Return:
1259:Generated_Source\PSoC5/UART.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:Generated_Source\PSoC5/UART.c ****     *  Buffer Size parameter.
1261:Generated_Source\PSoC5/UART.c ****     *
1262:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1263:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - used to calculate left space.
1264:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - used to calculate left space.
1265:Generated_Source\PSoC5/UART.c ****     *
1266:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1267:Generated_Source\PSoC5/UART.c ****     *  No.
1268:Generated_Source\PSoC5/UART.c ****     *
1269:Generated_Source\PSoC5/UART.c ****     * Theory:
1270:Generated_Source\PSoC5/UART.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:Generated_Source\PSoC5/UART.c ****     *
1272:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1273:Generated_Source\PSoC5/UART.c ****     uint8 UART_GetTxBufferSize(void)
1274:Generated_Source\PSoC5/UART.c ****                                                             
1275:Generated_Source\PSoC5/UART.c ****     {
 960              		.loc 1 1275 0
 961              		.cfi_startproc
 962              		@ args = 0, pretend = 0, frame = 0
 963              		@ frame_needed = 0, uses_anonymous_args = 0
 964              		@ link register save eliminated.
1276:Generated_Source\PSoC5/UART.c ****         uint8 size;
1277:Generated_Source\PSoC5/UART.c **** 
1278:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1279:Generated_Source\PSoC5/UART.c **** 
1280:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
1281:Generated_Source\PSoC5/UART.c ****         UART_DisableTxInt();
 965              		.loc 1 1281 0
 966 0000 0122     		movs	r2, #1
 967 0002 0E4B     		ldr	r3, .L101
 968 0004 1A60     		str	r2, [r3]
1282:Generated_Source\PSoC5/UART.c **** 
1283:Generated_Source\PSoC5/UART.c ****         if(UART_txBufferRead == UART_txBufferWrite)
 969              		.loc 1 1283 0
 970 0006 0E4B     		ldr	r3, .L101+4
 971 0008 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 972 000a D2B2     		uxtb	r2, r2
 973 000c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 974 000e 9A42     		cmp	r2, r3
 975 0010 0FD0     		beq	.L100
1284:Generated_Source\PSoC5/UART.c ****         {
1285:Generated_Source\PSoC5/UART.c ****             size = 0u;
1286:Generated_Source\PSoC5/UART.c ****         }
1287:Generated_Source\PSoC5/UART.c ****         else if(UART_txBufferRead < UART_txBufferWrite)
 976              		.loc 1 1287 0
 977 0012 0B4A     		ldr	r2, .L101+4
 978 0014 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 979 0016 D2B2     		uxtb	r2, r2
 980 0018 9342     		cmp	r3, r2
 981 001a 04D9     		bls	.L99
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 41


1288:Generated_Source\PSoC5/UART.c ****         {
1289:Generated_Source\PSoC5/UART.c ****             size = (UART_txBufferWrite - UART_txBufferRead);
 982              		.loc 1 1289 0
 983 001c 084A     		ldr	r2, .L101+4
 984 001e 5078     		ldrb	r0, [r2, #1]	@ zero_extendqisi2
 985 0020 181A     		subs	r0, r3, r0
 986 0022 C0B2     		uxtb	r0, r0
 987              	.LVL62:
 988 0024 06E0     		b	.L98
 989              	.LVL63:
 990              	.L99:
1290:Generated_Source\PSoC5/UART.c ****         }
1291:Generated_Source\PSoC5/UART.c ****         else
1292:Generated_Source\PSoC5/UART.c ****         {
1293:Generated_Source\PSoC5/UART.c ****             size = (UART_TX_BUFFER_SIZE - UART_txBufferRead) +
 991              		.loc 1 1293 0
 992 0026 064A     		ldr	r2, .L101+4
 993 0028 5078     		ldrb	r0, [r2, #1]	@ zero_extendqisi2
 994 002a 181A     		subs	r0, r3, r0
 995 002c 0138     		subs	r0, r0, #1
 996 002e C0B2     		uxtb	r0, r0
 997              	.LVL64:
 998 0030 00E0     		b	.L98
 999              	.LVL65:
 1000              	.L100:
1285:Generated_Source\PSoC5/UART.c ****         }
 1001              		.loc 1 1285 0
 1002 0032 0020     		movs	r0, #0
 1003              	.L98:
 1004              	.LVL66:
1294:Generated_Source\PSoC5/UART.c ****                     UART_txBufferWrite;
1295:Generated_Source\PSoC5/UART.c ****         }
1296:Generated_Source\PSoC5/UART.c **** 
1297:Generated_Source\PSoC5/UART.c ****         UART_EnableTxInt();
 1005              		.loc 1 1297 0
 1006 0034 0122     		movs	r2, #1
 1007 0036 034B     		ldr	r3, .L101+8
 1008 0038 1A60     		str	r2, [r3]
1298:Generated_Source\PSoC5/UART.c **** 
1299:Generated_Source\PSoC5/UART.c ****     #else
1300:Generated_Source\PSoC5/UART.c **** 
1301:Generated_Source\PSoC5/UART.c ****         size = UART_TXSTATUS_REG;
1302:Generated_Source\PSoC5/UART.c **** 
1303:Generated_Source\PSoC5/UART.c ****         /* Is the fifo is full. */
1304:Generated_Source\PSoC5/UART.c ****         if((size & UART_TX_STS_FIFO_FULL) != 0u)
1305:Generated_Source\PSoC5/UART.c ****         {
1306:Generated_Source\PSoC5/UART.c ****             size = UART_FIFO_LENGTH;
1307:Generated_Source\PSoC5/UART.c ****         }
1308:Generated_Source\PSoC5/UART.c ****         else if((size & UART_TX_STS_FIFO_EMPTY) != 0u)
1309:Generated_Source\PSoC5/UART.c ****         {
1310:Generated_Source\PSoC5/UART.c ****             size = 0u;
1311:Generated_Source\PSoC5/UART.c ****         }
1312:Generated_Source\PSoC5/UART.c ****         else
1313:Generated_Source\PSoC5/UART.c ****         {
1314:Generated_Source\PSoC5/UART.c ****             /* We only know there is data in the fifo. */
1315:Generated_Source\PSoC5/UART.c ****             size = 1u;
1316:Generated_Source\PSoC5/UART.c ****         }
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 42


1317:Generated_Source\PSoC5/UART.c **** 
1318:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_INTERRUPT_ENABLED) */
1319:Generated_Source\PSoC5/UART.c **** 
1320:Generated_Source\PSoC5/UART.c ****     return(size);
1321:Generated_Source\PSoC5/UART.c ****     }
 1009              		.loc 1 1321 0
 1010 003a 7047     		bx	lr
 1011              	.L102:
 1012              		.align	2
 1013              	.L101:
 1014 003c 80E100E0 		.word	-536813184
 1015 0040 00000000 		.word	.LANCHOR0
 1016 0044 00E100E0 		.word	-536813312
 1017              		.cfi_endproc
 1018              	.LFE23:
 1019              		.size	UART_GetTxBufferSize, .-UART_GetTxBufferSize
 1020              		.section	.text.UART_ClearTxBuffer,"ax",%progbits
 1021              		.align	2
 1022              		.global	UART_ClearTxBuffer
 1023              		.thumb
 1024              		.thumb_func
 1025              		.type	UART_ClearTxBuffer, %function
 1026              	UART_ClearTxBuffer:
 1027              	.LFB24:
1322:Generated_Source\PSoC5/UART.c **** 
1323:Generated_Source\PSoC5/UART.c **** 
1324:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1325:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ClearTxBuffer
1326:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1327:Generated_Source\PSoC5/UART.c ****     *
1328:Generated_Source\PSoC5/UART.c ****     * Summary:
1329:Generated_Source\PSoC5/UART.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:Generated_Source\PSoC5/UART.c ****     *
1331:Generated_Source\PSoC5/UART.c ****     * Parameters:
1332:Generated_Source\PSoC5/UART.c ****     *  None.
1333:Generated_Source\PSoC5/UART.c ****     *
1334:Generated_Source\PSoC5/UART.c ****     * Return:
1335:Generated_Source\PSoC5/UART.c ****     *  None.
1336:Generated_Source\PSoC5/UART.c ****     *
1337:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1338:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cleared to zero.
1339:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cleared to zero.
1340:Generated_Source\PSoC5/UART.c ****     *
1341:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1342:Generated_Source\PSoC5/UART.c ****     *  No.
1343:Generated_Source\PSoC5/UART.c ****     *
1344:Generated_Source\PSoC5/UART.c ****     * Theory:
1345:Generated_Source\PSoC5/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:Generated_Source\PSoC5/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:Generated_Source\PSoC5/UART.c ****     *  remained in the RAM.
1348:Generated_Source\PSoC5/UART.c ****     *
1349:Generated_Source\PSoC5/UART.c ****     * Side Effects:
1350:Generated_Source\PSoC5/UART.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:Generated_Source\PSoC5/UART.c ****     *  transmitting finishes transmitting.
1352:Generated_Source\PSoC5/UART.c ****     *
1353:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1354:Generated_Source\PSoC5/UART.c ****     void UART_ClearTxBuffer(void) 
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 43


1355:Generated_Source\PSoC5/UART.c ****     {
 1028              		.loc 1 1355 0
 1029              		.cfi_startproc
 1030              		@ args = 0, pretend = 0, frame = 0
 1031              		@ frame_needed = 0, uses_anonymous_args = 0
 1032 0000 08B5     		push	{r3, lr}
 1033              		.cfi_def_cfa_offset 8
 1034              		.cfi_offset 3, -8
 1035              		.cfi_offset 14, -4
1356:Generated_Source\PSoC5/UART.c ****         uint8 enableInterrupts;
1357:Generated_Source\PSoC5/UART.c **** 
1358:Generated_Source\PSoC5/UART.c ****         enableInterrupts = CyEnterCriticalSection();
 1036              		.loc 1 1358 0
 1037 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1038              	.LVL67:
1359:Generated_Source\PSoC5/UART.c ****         /* Clear the HW FIFO */
1360:Generated_Source\PSoC5/UART.c ****         UART_TXDATA_AUX_CTL_REG |= (uint8)  UART_TX_FIFO_CLR;
 1039              		.loc 1 1360 0
 1040 0006 0A4B     		ldr	r3, .L105
 1041 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1042 000a 42F00102 		orr	r2, r2, #1
 1043 000e 1A70     		strb	r2, [r3]
1361:Generated_Source\PSoC5/UART.c ****         UART_TXDATA_AUX_CTL_REG &= (uint8) ~UART_TX_FIFO_CLR;
 1044              		.loc 1 1361 0
 1045 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1046 0012 02F0FE02 		and	r2, r2, #254
 1047 0016 1A70     		strb	r2, [r3]
1362:Generated_Source\PSoC5/UART.c ****         CyExitCriticalSection(enableInterrupts);
 1048              		.loc 1 1362 0
 1049 0018 FFF7FEFF 		bl	CyExitCriticalSection
 1050              	.LVL68:
1363:Generated_Source\PSoC5/UART.c **** 
1364:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1365:Generated_Source\PSoC5/UART.c **** 
1366:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
1367:Generated_Source\PSoC5/UART.c ****         UART_DisableTxInt();
 1051              		.loc 1 1367 0
 1052 001c 0123     		movs	r3, #1
 1053 001e 054A     		ldr	r2, .L105+4
 1054 0020 1360     		str	r3, [r2]
1368:Generated_Source\PSoC5/UART.c **** 
1369:Generated_Source\PSoC5/UART.c ****         UART_txBufferRead = 0u;
 1055              		.loc 1 1369 0
 1056 0022 054A     		ldr	r2, .L105+8
 1057 0024 0021     		movs	r1, #0
 1058 0026 5170     		strb	r1, [r2, #1]
1370:Generated_Source\PSoC5/UART.c ****         UART_txBufferWrite = 0u;
 1059              		.loc 1 1370 0
 1060 0028 9170     		strb	r1, [r2, #2]
1371:Generated_Source\PSoC5/UART.c **** 
1372:Generated_Source\PSoC5/UART.c ****         /* Enable Tx interrupt. */
1373:Generated_Source\PSoC5/UART.c ****         UART_EnableTxInt();
 1061              		.loc 1 1373 0
 1062 002a 044A     		ldr	r2, .L105+12
 1063 002c 1360     		str	r3, [r2]
 1064 002e 08BD     		pop	{r3, pc}
 1065              	.L106:
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 44


 1066              		.align	2
 1067              	.L105:
 1068 0030 94640040 		.word	1073767572
 1069 0034 80E100E0 		.word	-536813184
 1070 0038 00000000 		.word	.LANCHOR0
 1071 003c 00E100E0 		.word	-536813312
 1072              		.cfi_endproc
 1073              	.LFE24:
 1074              		.size	UART_ClearTxBuffer, .-UART_ClearTxBuffer
 1075              		.section	.text.UART_SendBreak,"ax",%progbits
 1076              		.align	2
 1077              		.global	UART_SendBreak
 1078              		.thumb
 1079              		.thumb_func
 1080              		.type	UART_SendBreak, %function
 1081              	UART_SendBreak:
 1082              	.LFB25:
1374:Generated_Source\PSoC5/UART.c **** 
1375:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_INTERRUPT_ENABLED) */
1376:Generated_Source\PSoC5/UART.c ****     }
1377:Generated_Source\PSoC5/UART.c **** 
1378:Generated_Source\PSoC5/UART.c **** 
1379:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1380:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SendBreak
1381:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1382:Generated_Source\PSoC5/UART.c ****     *
1383:Generated_Source\PSoC5/UART.c ****     * Summary:
1384:Generated_Source\PSoC5/UART.c ****     *  Transmits a break signal on the bus.
1385:Generated_Source\PSoC5/UART.c ****     *
1386:Generated_Source\PSoC5/UART.c ****     * Parameters:
1387:Generated_Source\PSoC5/UART.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:Generated_Source\PSoC5/UART.c ****     *   UART_SEND_BREAK - Initialize registers for break, send the Break
1389:Generated_Source\PSoC5/UART.c ****     *       signal and return immediately.
1390:Generated_Source\PSoC5/UART.c ****     *   UART_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:Generated_Source\PSoC5/UART.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:Generated_Source\PSoC5/UART.c ****     *   UART_REINIT - Reinitialize registers to normal transmission mode
1393:Generated_Source\PSoC5/UART.c ****     *       then return.
1394:Generated_Source\PSoC5/UART.c ****     *   UART_SEND_WAIT_REINIT - Performs both options: 
1395:Generated_Source\PSoC5/UART.c ****     *      UART_SEND_BREAK and UART_WAIT_FOR_COMPLETE_REINIT.
1396:Generated_Source\PSoC5/UART.c ****     *      This option is recommended for most cases.
1397:Generated_Source\PSoC5/UART.c ****     *
1398:Generated_Source\PSoC5/UART.c ****     * Return:
1399:Generated_Source\PSoC5/UART.c ****     *  None.
1400:Generated_Source\PSoC5/UART.c ****     *
1401:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1402:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1403:Generated_Source\PSoC5/UART.c ****     *     initialized.
1404:Generated_Source\PSoC5/UART.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:Generated_Source\PSoC5/UART.c ****     *
1406:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1407:Generated_Source\PSoC5/UART.c ****     *  No.
1408:Generated_Source\PSoC5/UART.c ****     *
1409:Generated_Source\PSoC5/UART.c ****     * Theory:
1410:Generated_Source\PSoC5/UART.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:Generated_Source\PSoC5/UART.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:Generated_Source\PSoC5/UART.c ****     *  operation.
1413:Generated_Source\PSoC5/UART.c ****     *  There are 3 variants for this API usage:
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 45


1414:Generated_Source\PSoC5/UART.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:Generated_Source\PSoC5/UART.c ****     *     configuration returning. Function will block CPU until transmission
1416:Generated_Source\PSoC5/UART.c ****     *     complete.
1417:Generated_Source\PSoC5/UART.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:Generated_Source\PSoC5/UART.c ****     *     operation
1419:Generated_Source\PSoC5/UART.c ****     *     Example for this case:
1420:Generated_Source\PSoC5/UART.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:Generated_Source\PSoC5/UART.c ****     *         Add your code here to use CPU time
1422:Generated_Source\PSoC5/UART.c ****     *     SendBreak(1);     - complete Break operation
1423:Generated_Source\PSoC5/UART.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:Generated_Source\PSoC5/UART.c ****     *     complete break operation.
1425:Generated_Source\PSoC5/UART.c ****     *     Example for this case:
1426:Generated_Source\PSoC5/UART.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:Generated_Source\PSoC5/UART.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:Generated_Source\PSoC5/UART.c ****     *         Add your code here to use CPU time
1429:Generated_Source\PSoC5/UART.c ****     *     When interrupt appear with UART_TX_STS_COMPLETE status:
1430:Generated_Source\PSoC5/UART.c ****     *     SendBreak(2);     - complete Break operation
1431:Generated_Source\PSoC5/UART.c ****     *
1432:Generated_Source\PSoC5/UART.c ****     * Side Effects:
1433:Generated_Source\PSoC5/UART.c ****     *  The UART_SendBreak() function initializes registers to send a
1434:Generated_Source\PSoC5/UART.c ****     *  break signal.
1435:Generated_Source\PSoC5/UART.c ****     *  Break signal length depends on the break signal bits configuration.
1436:Generated_Source\PSoC5/UART.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:Generated_Source\PSoC5/UART.c ****     *  communication can continue.
1438:Generated_Source\PSoC5/UART.c ****     *
1439:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1440:Generated_Source\PSoC5/UART.c ****     void UART_SendBreak(uint8 retMode) 
1441:Generated_Source\PSoC5/UART.c ****     {
 1083              		.loc 1 1441 0
 1084              		.cfi_startproc
 1085              		@ args = 0, pretend = 0, frame = 0
 1086              		@ frame_needed = 0, uses_anonymous_args = 0
 1087              		@ link register save eliminated.
 1088              	.LVL69:
1442:Generated_Source\PSoC5/UART.c **** 
1443:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function*/
1444:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 1089              		.loc 1 1444 0
 1090 0000 124B     		ldr	r3, .L114
 1091 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1092 0004 0BB3     		cbz	r3, .L107
 1093              	.LBB2:
1445:Generated_Source\PSoC5/UART.c ****         {
1446:Generated_Source\PSoC5/UART.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:Generated_Source\PSoC5/UART.c ****             /* When that is done then reset the counter value back */
1448:Generated_Source\PSoC5/UART.c ****             uint8 tmpStat;
1449:Generated_Source\PSoC5/UART.c **** 
1450:Generated_Source\PSoC5/UART.c ****         #if(UART_HD_ENABLED) /* Half Duplex mode*/
1451:Generated_Source\PSoC5/UART.c **** 
1452:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_SEND_BREAK) ||
1453:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT ) )
1454:Generated_Source\PSoC5/UART.c ****             {
1455:Generated_Source\PSoC5/UART.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() |
1457:Generated_Source\PSoC5/UART.c ****                                                       UART_CTRL_HD_SEND_BREAK);
1458:Generated_Source\PSoC5/UART.c ****                 /* Send zeros */
1459:Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = 0u;
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 46


1460:Generated_Source\PSoC5/UART.c **** 
1461:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit starts */
1462:Generated_Source\PSoC5/UART.c ****                 {
1463:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1464:Generated_Source\PSoC5/UART.c ****                 }
1465:Generated_Source\PSoC5/UART.c ****                 while((tmpStat & UART_TX_STS_FIFO_EMPTY) != 0u);
1466:Generated_Source\PSoC5/UART.c ****             }
1467:Generated_Source\PSoC5/UART.c **** 
1468:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1469:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1470:Generated_Source\PSoC5/UART.c ****             {
1471:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit complete */
1472:Generated_Source\PSoC5/UART.c ****                 {
1473:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1474:Generated_Source\PSoC5/UART.c ****                 }
1475:Generated_Source\PSoC5/UART.c ****                 while(((uint8)~tmpStat & UART_TX_STS_COMPLETE) != 0u);
1476:Generated_Source\PSoC5/UART.c ****             }
1477:Generated_Source\PSoC5/UART.c **** 
1478:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1479:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_REINIT) ||
1480:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1481:Generated_Source\PSoC5/UART.c ****             {
1482:Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() &
1483:Generated_Source\PSoC5/UART.c ****                                               (uint8)~UART_CTRL_HD_SEND_BREAK);
1484:Generated_Source\PSoC5/UART.c ****             }
1485:Generated_Source\PSoC5/UART.c **** 
1486:Generated_Source\PSoC5/UART.c ****         #else /* UART_HD_ENABLED Full Duplex mode */
1487:Generated_Source\PSoC5/UART.c **** 
1488:Generated_Source\PSoC5/UART.c ****             static uint8 txPeriod;
1489:Generated_Source\PSoC5/UART.c **** 
1490:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_SEND_BREAK) ||
 1094              		.loc 1 1490 0
 1095 0006 08B1     		cbz	r0, .L109
 1096              		.loc 1 1490 0 is_stmt 0 discriminator 1
 1097 0008 0328     		cmp	r0, #3
 1098 000a 0DD1     		bne	.L110
 1099              	.L109:
1491:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1492:Generated_Source\PSoC5/UART.c ****             {
1493:Generated_Source\PSoC5/UART.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:Generated_Source\PSoC5/UART.c ****                 #if( (UART_PARITY_TYPE != UART__B_UART__NONE_REVB) || \
1495:Generated_Source\PSoC5/UART.c ****                                     (UART_PARITY_TYPE_SW != 0u) )
1496:Generated_Source\PSoC5/UART.c ****                     UART_WriteControlRegister(UART_ReadControlRegister() |
1497:Generated_Source\PSoC5/UART.c ****                                                           UART_CTRL_HD_SEND_BREAK);
1498:Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_PARITY_TYPE != UART__B_UART__NONE_REVB  */
1499:Generated_Source\PSoC5/UART.c **** 
1500:Generated_Source\PSoC5/UART.c ****                 #if(UART_TXCLKGEN_DP)
1501:Generated_Source\PSoC5/UART.c ****                     txPeriod = UART_TXBITCLKTX_COMPLETE_REG;
 1100              		.loc 1 1501 0 is_stmt 1
 1101 000c 104B     		ldr	r3, .L114+4
 1102 000e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1103 0010 0E4A     		ldr	r2, .L114
 1104 0012 D170     		strb	r1, [r2, #3]
1502:Generated_Source\PSoC5/UART.c ****                     UART_TXBITCLKTX_COMPLETE_REG = UART_TXBITCTR_BREAKBITS;
 1105              		.loc 1 1502 0
 1106 0014 6722     		movs	r2, #103
 1107 0016 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 47


1503:Generated_Source\PSoC5/UART.c ****                 #else
1504:Generated_Source\PSoC5/UART.c ****                     txPeriod = UART_TXBITCTR_PERIOD_REG;
1505:Generated_Source\PSoC5/UART.c ****                     UART_TXBITCTR_PERIOD_REG = UART_TXBITCTR_BREAKBITS8X;
1506:Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_TXCLKGEN_DP */
1507:Generated_Source\PSoC5/UART.c **** 
1508:Generated_Source\PSoC5/UART.c ****                 /* Send zeros */
1509:Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = 0u;
 1108              		.loc 1 1509 0
 1109 0018 0022     		movs	r2, #0
 1110 001a 1133     		adds	r3, r3, #17
 1111 001c 1A70     		strb	r2, [r3]
 1112              	.L111:
1510:Generated_Source\PSoC5/UART.c **** 
1511:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit starts */
1512:Generated_Source\PSoC5/UART.c ****                 {
1513:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
 1113              		.loc 1 1513 0 discriminator 1
 1114 001e 0D4B     		ldr	r3, .L114+8
 1115 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1116              	.LVL70:
1514:Generated_Source\PSoC5/UART.c ****                 }
1515:Generated_Source\PSoC5/UART.c ****                 while((tmpStat & UART_TX_STS_FIFO_EMPTY) != 0u);
 1117              		.loc 1 1515 0 discriminator 1
 1118 0022 13F0020F 		tst	r3, #2
 1119 0026 FAD1     		bne	.L111
 1120              	.LVL71:
 1121              	.L110:
1516:Generated_Source\PSoC5/UART.c ****             }
1517:Generated_Source\PSoC5/UART.c **** 
1518:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
 1122              		.loc 1 1518 0
 1123 0028 0128     		cmp	r0, #1
 1124 002a 01D0     		beq	.L112
 1125              		.loc 1 1518 0 is_stmt 0 discriminator 1
 1126 002c 0328     		cmp	r0, #3
 1127 002e 04D1     		bne	.L113
 1128              	.L112:
1519:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1520:Generated_Source\PSoC5/UART.c ****             {
1521:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit complete */
1522:Generated_Source\PSoC5/UART.c ****                 {
1523:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
 1129              		.loc 1 1523 0 is_stmt 1 discriminator 1
 1130 0030 084B     		ldr	r3, .L114+8
 1131 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1132              	.LVL72:
1524:Generated_Source\PSoC5/UART.c ****                 }
1525:Generated_Source\PSoC5/UART.c ****                 while(((uint8)~tmpStat & UART_TX_STS_COMPLETE) != 0u);
 1133              		.loc 1 1525 0 discriminator 1
 1134 0034 13F0010F 		tst	r3, #1
 1135 0038 FAD0     		beq	.L112
 1136              	.LVL73:
 1137              	.L113:
1526:Generated_Source\PSoC5/UART.c ****             }
1527:Generated_Source\PSoC5/UART.c **** 
1528:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1529:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_REINIT) ||
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 48


 1138              		.loc 1 1529 0
 1139 003a 0138     		subs	r0, r0, #1
 1140              	.LVL74:
 1141 003c C0B2     		uxtb	r0, r0
1528:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_REINIT) ||
 1142              		.loc 1 1528 0
 1143 003e 0228     		cmp	r0, #2
 1144 0040 03D8     		bhi	.L107
1530:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1531:Generated_Source\PSoC5/UART.c ****             {
1532:Generated_Source\PSoC5/UART.c **** 
1533:Generated_Source\PSoC5/UART.c ****             #if(UART_TXCLKGEN_DP)
1534:Generated_Source\PSoC5/UART.c ****                 UART_TXBITCLKTX_COMPLETE_REG = txPeriod;
 1145              		.loc 1 1534 0
 1146 0042 024B     		ldr	r3, .L114
 1147 0044 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 1148 0046 024B     		ldr	r3, .L114+4
 1149 0048 1A70     		strb	r2, [r3]
 1150              	.L107:
 1151 004a 7047     		bx	lr
 1152              	.L115:
 1153              		.align	2
 1154              	.L114:
 1155 004c 00000000 		.word	.LANCHOR0
 1156 0050 33640040 		.word	1073767475
 1157 0054 64640040 		.word	1073767524
 1158              	.LBE2:
 1159              		.cfi_endproc
 1160              	.LFE25:
 1161              		.size	UART_SendBreak, .-UART_SendBreak
 1162              		.section	.text.UART_SetTxAddressMode,"ax",%progbits
 1163              		.align	2
 1164              		.global	UART_SetTxAddressMode
 1165              		.thumb
 1166              		.thumb_func
 1167              		.type	UART_SetTxAddressMode, %function
 1168              	UART_SetTxAddressMode:
 1169              	.LFB26:
1535:Generated_Source\PSoC5/UART.c ****             #else
1536:Generated_Source\PSoC5/UART.c ****                 UART_TXBITCTR_PERIOD_REG = txPeriod;
1537:Generated_Source\PSoC5/UART.c ****             #endif /* End UART_TXCLKGEN_DP */
1538:Generated_Source\PSoC5/UART.c **** 
1539:Generated_Source\PSoC5/UART.c ****             #if( (UART_PARITY_TYPE != UART__B_UART__NONE_REVB) || \
1540:Generated_Source\PSoC5/UART.c ****                  (UART_PARITY_TYPE_SW != 0u) )
1541:Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() &
1542:Generated_Source\PSoC5/UART.c ****                                                       (uint8) ~UART_CTRL_HD_SEND_BREAK);
1543:Generated_Source\PSoC5/UART.c ****             #endif /* End UART_PARITY_TYPE != NONE */
1544:Generated_Source\PSoC5/UART.c ****             }
1545:Generated_Source\PSoC5/UART.c ****         #endif    /* End UART_HD_ENABLED */
1546:Generated_Source\PSoC5/UART.c ****         }
1547:Generated_Source\PSoC5/UART.c ****     }
1548:Generated_Source\PSoC5/UART.c **** 
1549:Generated_Source\PSoC5/UART.c **** 
1550:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1551:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetTxAddressMode
1552:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1553:Generated_Source\PSoC5/UART.c ****     *
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 49


1554:Generated_Source\PSoC5/UART.c ****     * Summary:
1555:Generated_Source\PSoC5/UART.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:Generated_Source\PSoC5/UART.c ****     *
1557:Generated_Source\PSoC5/UART.c ****     * Parameters:
1558:Generated_Source\PSoC5/UART.c ****     *  addressMode: 
1559:Generated_Source\PSoC5/UART.c ****     *       UART_SET_SPACE - Configure the transmitter to send the next
1560:Generated_Source\PSoC5/UART.c ****     *                                    byte as a data.
1561:Generated_Source\PSoC5/UART.c ****     *       UART_SET_MARK  - Configure the transmitter to send the next
1562:Generated_Source\PSoC5/UART.c ****     *                                    byte as an address.
1563:Generated_Source\PSoC5/UART.c ****     *
1564:Generated_Source\PSoC5/UART.c ****     * Return:
1565:Generated_Source\PSoC5/UART.c ****     *  None.
1566:Generated_Source\PSoC5/UART.c ****     *
1567:Generated_Source\PSoC5/UART.c ****     * Side Effects:
1568:Generated_Source\PSoC5/UART.c ****     *  This function sets and clears UART_CTRL_MARK bit in the Control
1569:Generated_Source\PSoC5/UART.c ****     *  register.
1570:Generated_Source\PSoC5/UART.c ****     *
1571:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1572:Generated_Source\PSoC5/UART.c ****     void UART_SetTxAddressMode(uint8 addressMode) 
1573:Generated_Source\PSoC5/UART.c ****     {
 1170              		.loc 1 1573 0
 1171              		.cfi_startproc
 1172              		@ args = 0, pretend = 0, frame = 0
 1173              		@ frame_needed = 0, uses_anonymous_args = 0
 1174              		@ link register save eliminated.
 1175              	.LVL75:
 1176 0000 7047     		bx	lr
 1177              		.cfi_endproc
 1178              	.LFE26:
 1179              		.size	UART_SetTxAddressMode, .-UART_SetTxAddressMode
 1180              		.global	UART_txBufferWrite
 1181              		.global	UART_txBufferRead
 1182              		.comm	UART_txBuffer,255,4
 1183              		.global	UART_initVar
 1184 0002 00BF     		.bss
 1185              		.set	.LANCHOR0,. + 0
 1186              		.type	UART_initVar, %object
 1187              		.size	UART_initVar, 1
 1188              	UART_initVar:
 1189 0000 00       		.space	1
 1190              		.type	UART_txBufferRead, %object
 1191              		.size	UART_txBufferRead, 1
 1192              	UART_txBufferRead:
 1193 0001 00       		.space	1
 1194              		.type	UART_txBufferWrite, %object
 1195              		.size	UART_txBufferWrite, 1
 1196              	UART_txBufferWrite:
 1197 0002 00       		.space	1
 1198              		.type	txPeriod.5006, %object
 1199              		.size	txPeriod.5006, 1
 1200              	txPeriod.5006:
 1201 0003 00       		.space	1
 1202              		.text
 1203              	.Letext0:
 1204              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1205              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 1206              		.file 4 "Generated_Source\\PSoC5\\UART_IntClock.h"
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 50


 1207              		.section	.debug_info,"",%progbits
 1208              	.Ldebug_info0:
 1209 0000 F1060000 		.4byte	0x6f1
 1210 0004 0400     		.2byte	0x4
 1211 0006 00000000 		.4byte	.Ldebug_abbrev0
 1212 000a 04       		.byte	0x4
 1213 000b 01       		.uleb128 0x1
 1214 000c 25040000 		.4byte	.LASF73
 1215 0010 01       		.byte	0x1
 1216 0011 AF020000 		.4byte	.LASF74
 1217 0015 69030000 		.4byte	.LASF75
 1218 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1219 001d 00000000 		.4byte	0
 1220 0021 00000000 		.4byte	.Ldebug_line0
 1221 0025 02       		.uleb128 0x2
 1222 0026 01       		.byte	0x1
 1223 0027 06       		.byte	0x6
 1224 0028 9C000000 		.4byte	.LASF0
 1225 002c 02       		.uleb128 0x2
 1226 002d 01       		.byte	0x1
 1227 002e 08       		.byte	0x8
 1228 002f FD020000 		.4byte	.LASF1
 1229 0033 02       		.uleb128 0x2
 1230 0034 02       		.byte	0x2
 1231 0035 05       		.byte	0x5
 1232 0036 1C030000 		.4byte	.LASF2
 1233 003a 02       		.uleb128 0x2
 1234 003b 02       		.byte	0x2
 1235 003c 07       		.byte	0x7
 1236 003d CF010000 		.4byte	.LASF3
 1237 0041 02       		.uleb128 0x2
 1238 0042 04       		.byte	0x4
 1239 0043 05       		.byte	0x5
 1240 0044 B1000000 		.4byte	.LASF4
 1241 0048 02       		.uleb128 0x2
 1242 0049 04       		.byte	0x4
 1243 004a 07       		.byte	0x7
 1244 004b 82010000 		.4byte	.LASF5
 1245 004f 02       		.uleb128 0x2
 1246 0050 08       		.byte	0x8
 1247 0051 05       		.byte	0x5
 1248 0052 8E000000 		.4byte	.LASF6
 1249 0056 02       		.uleb128 0x2
 1250 0057 08       		.byte	0x8
 1251 0058 07       		.byte	0x7
 1252 0059 42000000 		.4byte	.LASF7
 1253 005d 03       		.uleb128 0x3
 1254 005e 04       		.byte	0x4
 1255 005f 05       		.byte	0x5
 1256 0060 696E7400 		.ascii	"int\000"
 1257 0064 02       		.uleb128 0x2
 1258 0065 04       		.byte	0x4
 1259 0066 07       		.byte	0x7
 1260 0067 55010000 		.4byte	.LASF8
 1261 006b 04       		.uleb128 0x4
 1262 006c D7000000 		.4byte	.LASF9
 1263 0070 02       		.byte	0x2
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 51


 1264 0071 9201     		.2byte	0x192
 1265 0073 2C000000 		.4byte	0x2c
 1266 0077 04       		.uleb128 0x4
 1267 0078 00000000 		.4byte	.LASF10
 1268 007c 02       		.byte	0x2
 1269 007d 9301     		.2byte	0x193
 1270 007f 3A000000 		.4byte	0x3a
 1271 0083 04       		.uleb128 0x4
 1272 0084 09010000 		.4byte	.LASF11
 1273 0088 02       		.byte	0x2
 1274 0089 9401     		.2byte	0x194
 1275 008b 48000000 		.4byte	0x48
 1276 008f 02       		.uleb128 0x2
 1277 0090 04       		.byte	0x4
 1278 0091 04       		.byte	0x4
 1279 0092 BD040000 		.4byte	.LASF12
 1280 0096 02       		.uleb128 0x2
 1281 0097 08       		.byte	0x8
 1282 0098 04       		.byte	0x4
 1283 0099 F6000000 		.4byte	.LASF13
 1284 009d 04       		.uleb128 0x4
 1285 009e C0030000 		.4byte	.LASF14
 1286 00a2 02       		.byte	0x2
 1287 00a3 A301     		.2byte	0x1a3
 1288 00a5 A9000000 		.4byte	0xa9
 1289 00a9 02       		.uleb128 0x2
 1290 00aa 01       		.byte	0x1
 1291 00ab 08       		.byte	0x8
 1292 00ac 64030000 		.4byte	.LASF15
 1293 00b0 04       		.uleb128 0x4
 1294 00b1 E2020000 		.4byte	.LASF16
 1295 00b5 02       		.byte	0x2
 1296 00b6 3C02     		.2byte	0x23c
 1297 00b8 BC000000 		.4byte	0xbc
 1298 00bc 05       		.uleb128 0x5
 1299 00bd 6B000000 		.4byte	0x6b
 1300 00c1 04       		.uleb128 0x4
 1301 00c2 3D020000 		.4byte	.LASF17
 1302 00c6 02       		.byte	0x2
 1303 00c7 3E02     		.2byte	0x23e
 1304 00c9 CD000000 		.4byte	0xcd
 1305 00cd 05       		.uleb128 0x5
 1306 00ce 83000000 		.4byte	0x83
 1307 00d2 04       		.uleb128 0x4
 1308 00d3 B3030000 		.4byte	.LASF18
 1309 00d7 02       		.byte	0x2
 1310 00d8 4E02     		.2byte	0x24e
 1311 00da DE000000 		.4byte	0xde
 1312 00de 06       		.uleb128 0x6
 1313 00df 04       		.byte	0x4
 1314 00e0 E4000000 		.4byte	0xe4
 1315 00e4 07       		.uleb128 0x7
 1316 00e5 02       		.uleb128 0x2
 1317 00e6 04       		.byte	0x4
 1318 00e7 07       		.byte	0x7
 1319 00e8 4B020000 		.4byte	.LASF19
 1320 00ec 08       		.uleb128 0x8
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 52


 1321 00ed 28010000 		.4byte	.LASF20
 1322 00f1 01       		.byte	0x1
 1323 00f2 6A       		.byte	0x6a
 1324 00f3 00000000 		.4byte	.LFB1
 1325 00f7 40000000 		.4byte	.LFE1-.LFB1
 1326 00fb 01       		.uleb128 0x1
 1327 00fc 9C       		.byte	0x9c
 1328 00fd 29010000 		.4byte	0x129
 1329 0101 09       		.uleb128 0x9
 1330 0102 16000000 		.4byte	.LVL0
 1331 0106 9A060000 		.4byte	0x69a
 1332 010a 14010000 		.4byte	0x114
 1333 010e 0A       		.uleb128 0xa
 1334 010f 01       		.uleb128 0x1
 1335 0110 50       		.byte	0x50
 1336 0111 01       		.uleb128 0x1
 1337 0112 30       		.byte	0x30
 1338 0113 00       		.byte	0
 1339 0114 0B       		.uleb128 0xb
 1340 0115 1E000000 		.4byte	.LVL1
 1341 0119 B4060000 		.4byte	0x6b4
 1342 011d 0A       		.uleb128 0xa
 1343 011e 01       		.uleb128 0x1
 1344 011f 51       		.byte	0x51
 1345 0120 01       		.uleb128 0x1
 1346 0121 37       		.byte	0x37
 1347 0122 0A       		.uleb128 0xa
 1348 0123 01       		.uleb128 0x1
 1349 0124 50       		.byte	0x50
 1350 0125 01       		.uleb128 0x1
 1351 0126 30       		.byte	0x30
 1352 0127 00       		.byte	0
 1353 0128 00       		.byte	0
 1354 0129 08       		.uleb128 0x8
 1355 012a 46030000 		.4byte	.LASF21
 1356 012e 01       		.byte	0x1
 1357 012f B7       		.byte	0xb7
 1358 0130 00000000 		.4byte	.LFB2
 1359 0134 48000000 		.4byte	.LFE2-.LFB2
 1360 0138 01       		.uleb128 0x1
 1361 0139 9C       		.byte	0x9c
 1362 013a 70010000 		.4byte	0x170
 1363 013e 0C       		.uleb128 0xc
 1364 013f EB030000 		.4byte	.LASF24
 1365 0143 01       		.byte	0x1
 1366 0144 B9       		.byte	0xb9
 1367 0145 6B000000 		.4byte	0x6b
 1368 0149 00000000 		.4byte	.LLST0
 1369 014d 0D       		.uleb128 0xd
 1370 014e 06000000 		.4byte	.LVL2
 1371 0152 CA060000 		.4byte	0x6ca
 1372 0156 0D       		.uleb128 0xd
 1373 0157 38000000 		.4byte	.LVL4
 1374 015b D5060000 		.4byte	0x6d5
 1375 015f 0B       		.uleb128 0xb
 1376 0160 3E000000 		.4byte	.LVL5
 1377 0164 DC060000 		.4byte	0x6dc
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 53


 1378 0168 0A       		.uleb128 0xa
 1379 0169 01       		.uleb128 0x1
 1380 016a 50       		.byte	0x50
 1381 016b 02       		.uleb128 0x2
 1382 016c 74       		.byte	0x74
 1383 016d 00       		.sleb128 0
 1384 016e 00       		.byte	0
 1385 016f 00       		.byte	0
 1386 0170 08       		.uleb128 0x8
 1387 0171 59000000 		.4byte	.LASF22
 1388 0175 01       		.byte	0x1
 1389 0176 4C       		.byte	0x4c
 1390 0177 00000000 		.4byte	.LFB0
 1391 017b 1C000000 		.4byte	.LFE0-.LFB0
 1392 017f 01       		.uleb128 0x1
 1393 0180 9C       		.byte	0x9c
 1394 0181 98010000 		.4byte	0x198
 1395 0185 0D       		.uleb128 0xd
 1396 0186 0C000000 		.4byte	.LVL7
 1397 018a EC000000 		.4byte	0xec
 1398 018e 0D       		.uleb128 0xd
 1399 018f 16000000 		.4byte	.LVL8
 1400 0193 29010000 		.4byte	0x129
 1401 0197 00       		.byte	0
 1402 0198 08       		.uleb128 0x8
 1403 0199 B3040000 		.4byte	.LASF23
 1404 019d 01       		.byte	0x1
 1405 019e F0       		.byte	0xf0
 1406 019f 00000000 		.4byte	.LFB3
 1407 01a3 48000000 		.4byte	.LFE3-.LFB3
 1408 01a7 01       		.uleb128 0x1
 1409 01a8 9C       		.byte	0x9c
 1410 01a9 DF010000 		.4byte	0x1df
 1411 01ad 0C       		.uleb128 0xc
 1412 01ae EB030000 		.4byte	.LASF24
 1413 01b2 01       		.byte	0x1
 1414 01b3 F2       		.byte	0xf2
 1415 01b4 6B000000 		.4byte	0x6b
 1416 01b8 13000000 		.4byte	.LLST1
 1417 01bc 0D       		.uleb128 0xd
 1418 01bd 06000000 		.4byte	.LVL9
 1419 01c1 CA060000 		.4byte	0x6ca
 1420 01c5 0D       		.uleb128 0xd
 1421 01c6 16000000 		.4byte	.LVL11
 1422 01ca ED060000 		.4byte	0x6ed
 1423 01ce 0B       		.uleb128 0xb
 1424 01cf 38000000 		.4byte	.LVL12
 1425 01d3 DC060000 		.4byte	0x6dc
 1426 01d7 0A       		.uleb128 0xa
 1427 01d8 01       		.uleb128 0x1
 1428 01d9 50       		.byte	0x50
 1429 01da 02       		.uleb128 0x2
 1430 01db 74       		.byte	0x74
 1431 01dc 00       		.sleb128 0
 1432 01dd 00       		.byte	0
 1433 01de 00       		.byte	0
 1434 01df 0E       		.uleb128 0xe
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 54


 1435 01e0 DD000000 		.4byte	.LASF47
 1436 01e4 01       		.byte	0x1
 1437 01e5 2701     		.2byte	0x127
 1438 01e7 6B000000 		.4byte	0x6b
 1439 01eb 00000000 		.4byte	.LFB4
 1440 01ef 04000000 		.4byte	.LFE4-.LFB4
 1441 01f3 01       		.uleb128 0x1
 1442 01f4 9C       		.byte	0x9c
 1443 01f5 0F       		.uleb128 0xf
 1444 01f6 D2040000 		.4byte	.LASF25
 1445 01fa 01       		.byte	0x1
 1446 01fb 3F01     		.2byte	0x13f
 1447 01fd 00000000 		.4byte	.LFB5
 1448 0201 02000000 		.4byte	.LFE5-.LFB5
 1449 0205 01       		.uleb128 0x1
 1450 0206 9C       		.byte	0x9c
 1451 0207 1A020000 		.4byte	0x21a
 1452 020b 10       		.uleb128 0x10
 1453 020c 10010000 		.4byte	.LASF27
 1454 0210 01       		.byte	0x1
 1455 0211 3F01     		.2byte	0x13f
 1456 0213 6B000000 		.4byte	0x6b
 1457 0217 01       		.uleb128 0x1
 1458 0218 50       		.byte	0x50
 1459 0219 00       		.byte	0
 1460 021a 0F       		.uleb128 0xf
 1461 021b C6030000 		.4byte	.LASF26
 1462 021f 01       		.byte	0x1
 1463 0220 6701     		.2byte	0x167
 1464 0222 00000000 		.4byte	.LFB6
 1465 0226 0C000000 		.4byte	.LFE6-.LFB6
 1466 022a 01       		.uleb128 0x1
 1467 022b 9C       		.byte	0x9c
 1468 022c 3F020000 		.4byte	0x23f
 1469 0230 10       		.uleb128 0x10
 1470 0231 FA010000 		.4byte	.LASF28
 1471 0235 01       		.byte	0x1
 1472 0236 6701     		.2byte	0x167
 1473 0238 6B000000 		.4byte	0x6b
 1474 023c 01       		.uleb128 0x1
 1475 023d 50       		.byte	0x50
 1476 023e 00       		.byte	0
 1477 023f 11       		.uleb128 0x11
 1478 0240 C7000000 		.4byte	.LASF30
 1479 0244 01       		.byte	0x1
 1480 0245 8801     		.2byte	0x188
 1481 0247 6B000000 		.4byte	0x6b
 1482 024b 00000000 		.4byte	.LFB7
 1483 024f 0C000000 		.4byte	.LFE7-.LFB7
 1484 0253 01       		.uleb128 0x1
 1485 0254 9C       		.byte	0x9c
 1486 0255 68020000 		.4byte	0x268
 1487 0259 12       		.uleb128 0x12
 1488 025a 3F030000 		.4byte	.LASF29
 1489 025e 01       		.byte	0x1
 1490 025f 8A01     		.2byte	0x18a
 1491 0261 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 55


 1492 0265 01       		.uleb128 0x1
 1493 0266 50       		.byte	0x50
 1494 0267 00       		.byte	0
 1495 0268 11       		.uleb128 0x11
 1496 0269 52030000 		.4byte	.LASF31
 1497 026d 01       		.byte	0x1
 1498 026e E501     		.2byte	0x1e5
 1499 0270 6B000000 		.4byte	0x6b
 1500 0274 00000000 		.4byte	.LFB8
 1501 0278 10000000 		.4byte	.LFE8-.LFB8
 1502 027c 01       		.uleb128 0x1
 1503 027d 9C       		.byte	0x9c
 1504 027e 93020000 		.4byte	0x293
 1505 0282 13       		.uleb128 0x13
 1506 0283 1E040000 		.4byte	.LASF32
 1507 0287 01       		.byte	0x1
 1508 0288 E701     		.2byte	0x1e7
 1509 028a 6B000000 		.4byte	0x6b
 1510 028e 26000000 		.4byte	.LLST2
 1511 0292 00       		.byte	0
 1512 0293 11       		.uleb128 0x11
 1513 0294 DE030000 		.4byte	.LASF33
 1514 0298 01       		.byte	0x1
 1515 0299 1402     		.2byte	0x214
 1516 029b 6B000000 		.4byte	0x6b
 1517 029f 00000000 		.4byte	.LFB9
 1518 02a3 2C000000 		.4byte	.LFE9-.LFB9
 1519 02a7 01       		.uleb128 0x1
 1520 02a8 9C       		.byte	0x9c
 1521 02a9 CC020000 		.4byte	0x2cc
 1522 02ad 13       		.uleb128 0x13
 1523 02ae 3F030000 		.4byte	.LASF29
 1524 02b2 01       		.byte	0x1
 1525 02b3 1602     		.2byte	0x216
 1526 02b5 6B000000 		.4byte	0x6b
 1527 02b9 3E000000 		.4byte	.LLST3
 1528 02bd 12       		.uleb128 0x12
 1529 02be 82020000 		.4byte	.LASF34
 1530 02c2 01       		.byte	0x1
 1531 02c3 1702     		.2byte	0x217
 1532 02c5 6B000000 		.4byte	0x6b
 1533 02c9 01       		.uleb128 0x1
 1534 02ca 53       		.byte	0x53
 1535 02cb 00       		.byte	0
 1536 02cc 11       		.uleb128 0x11
 1537 02cd 48010000 		.4byte	.LASF35
 1538 02d1 01       		.byte	0x1
 1539 02d2 7A02     		.2byte	0x27a
 1540 02d4 77000000 		.4byte	0x77
 1541 02d8 00000000 		.4byte	.LFB10
 1542 02dc 12000000 		.4byte	.LFE10-.LFB10
 1543 02e0 01       		.uleb128 0x1
 1544 02e1 9C       		.byte	0x9c
 1545 02e2 F9020000 		.4byte	0x2f9
 1546 02e6 0D       		.uleb128 0xd
 1547 02e7 06000000 		.4byte	.LVL25
 1548 02eb 68020000 		.4byte	0x268
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 56


 1549 02ef 0D       		.uleb128 0xd
 1550 02f0 0C000000 		.4byte	.LVL26
 1551 02f4 3F020000 		.4byte	0x23f
 1552 02f8 00       		.byte	0
 1553 02f9 11       		.uleb128 0x11
 1554 02fa 09040000 		.4byte	.LASF36
 1555 02fe 01       		.byte	0x1
 1556 02ff AB02     		.2byte	0x2ab
 1557 0301 6B000000 		.4byte	0x6b
 1558 0305 00000000 		.4byte	.LFB11
 1559 0309 18000000 		.4byte	.LFE11-.LFB11
 1560 030d 01       		.uleb128 0x1
 1561 030e 9C       		.byte	0x9c
 1562 030f 22030000 		.4byte	0x322
 1563 0313 12       		.uleb128 0x12
 1564 0314 CA010000 		.4byte	.LASF37
 1565 0318 01       		.byte	0x1
 1566 0319 AE02     		.2byte	0x2ae
 1567 031b 6B000000 		.4byte	0x6b
 1568 031f 01       		.uleb128 0x1
 1569 0320 50       		.byte	0x50
 1570 0321 00       		.byte	0
 1571 0322 0F       		.uleb128 0xf
 1572 0323 EC040000 		.4byte	.LASF38
 1573 0327 01       		.byte	0x1
 1574 0328 F502     		.2byte	0x2f5
 1575 032a 00000000 		.4byte	.LFB12
 1576 032e 24000000 		.4byte	.LFE12-.LFB12
 1577 0332 01       		.uleb128 0x1
 1578 0333 9C       		.byte	0x9c
 1579 0334 5B030000 		.4byte	0x35b
 1580 0338 13       		.uleb128 0x13
 1581 0339 EB030000 		.4byte	.LASF24
 1582 033d 01       		.byte	0x1
 1583 033e F702     		.2byte	0x2f7
 1584 0340 6B000000 		.4byte	0x6b
 1585 0344 74000000 		.4byte	.LLST4
 1586 0348 0D       		.uleb128 0xd
 1587 0349 06000000 		.4byte	.LVL28
 1588 034d CA060000 		.4byte	0x6ca
 1589 0351 0D       		.uleb128 0xd
 1590 0352 1C000000 		.4byte	.LVL29
 1591 0356 DC060000 		.4byte	0x6dc
 1592 035a 00       		.byte	0
 1593 035b 0F       		.uleb128 0xf
 1594 035c E7020000 		.4byte	.LASF39
 1595 0360 01       		.byte	0x1
 1596 0361 2D03     		.2byte	0x32d
 1597 0363 00000000 		.4byte	.LFB13
 1598 0367 02000000 		.4byte	.LFE13-.LFB13
 1599 036b 01       		.uleb128 0x1
 1600 036c 9C       		.byte	0x9c
 1601 036d 80030000 		.4byte	0x380
 1602 0371 10       		.uleb128 0x10
 1603 0372 FD000000 		.4byte	.LASF40
 1604 0376 01       		.byte	0x1
 1605 0377 2D03     		.2byte	0x32d
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 57


 1606 0379 6B000000 		.4byte	0x6b
 1607 037d 01       		.uleb128 0x1
 1608 037e 50       		.byte	0x50
 1609 037f 00       		.byte	0
 1610 0380 0F       		.uleb128 0xf
 1611 0381 5C020000 		.4byte	.LASF41
 1612 0385 01       		.byte	0x1
 1613 0386 5903     		.2byte	0x359
 1614 0388 00000000 		.4byte	.LFB14
 1615 038c 0C000000 		.4byte	.LFE14-.LFB14
 1616 0390 01       		.uleb128 0x1
 1617 0391 9C       		.byte	0x9c
 1618 0392 A5030000 		.4byte	0x3a5
 1619 0396 10       		.uleb128 0x10
 1620 0397 54020000 		.4byte	.LASF42
 1621 039b 01       		.byte	0x1
 1622 039c 5903     		.2byte	0x359
 1623 039e 6B000000 		.4byte	0x6b
 1624 03a2 01       		.uleb128 0x1
 1625 03a3 50       		.byte	0x50
 1626 03a4 00       		.byte	0
 1627 03a5 0F       		.uleb128 0xf
 1628 03a6 6F020000 		.4byte	.LASF43
 1629 03aa 01       		.byte	0x1
 1630 03ab 6D03     		.2byte	0x36d
 1631 03ad 00000000 		.4byte	.LFB15
 1632 03b1 0C000000 		.4byte	.LFE15-.LFB15
 1633 03b5 01       		.uleb128 0x1
 1634 03b6 9C       		.byte	0x9c
 1635 03b7 CA030000 		.4byte	0x3ca
 1636 03bb 10       		.uleb128 0x10
 1637 03bc 54020000 		.4byte	.LASF42
 1638 03c0 01       		.byte	0x1
 1639 03c1 6D03     		.2byte	0x36d
 1640 03c3 6B000000 		.4byte	0x6b
 1641 03c7 01       		.uleb128 0x1
 1642 03c8 50       		.byte	0x50
 1643 03c9 00       		.byte	0
 1644 03ca 0F       		.uleb128 0xf
 1645 03cb 64000000 		.4byte	.LASF44
 1646 03cf 01       		.byte	0x1
 1647 03d0 8C03     		.2byte	0x38c
 1648 03d2 00000000 		.4byte	.LFB16
 1649 03d6 0C000000 		.4byte	.LFE16-.LFB16
 1650 03da 01       		.uleb128 0x1
 1651 03db 9C       		.byte	0x9c
 1652 03dc EF030000 		.4byte	0x3ef
 1653 03e0 10       		.uleb128 0x10
 1654 03e1 FA010000 		.4byte	.LASF28
 1655 03e5 01       		.byte	0x1
 1656 03e6 8C03     		.2byte	0x38c
 1657 03e8 6B000000 		.4byte	0x6b
 1658 03ec 01       		.uleb128 0x1
 1659 03ed 50       		.byte	0x50
 1660 03ee 00       		.byte	0
 1661 03ef 0F       		.uleb128 0xf
 1662 03f0 0B030000 		.4byte	.LASF45
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 58


 1663 03f4 01       		.byte	0x1
 1664 03f5 AE03     		.2byte	0x3ae
 1665 03f7 00000000 		.4byte	.LFB17
 1666 03fb 60000000 		.4byte	.LFE17-.LFB17
 1667 03ff 01       		.uleb128 0x1
 1668 0400 9C       		.byte	0x9c
 1669 0401 14040000 		.4byte	0x414
 1670 0405 10       		.uleb128 0x10
 1671 0406 1D000000 		.4byte	.LASF46
 1672 040a 01       		.byte	0x1
 1673 040b AE03     		.2byte	0x3ae
 1674 040d 6B000000 		.4byte	0x6b
 1675 0411 01       		.uleb128 0x1
 1676 0412 50       		.byte	0x50
 1677 0413 00       		.byte	0
 1678 0414 0E       		.uleb128 0xe
 1679 0415 17020000 		.4byte	.LASF48
 1680 0419 01       		.byte	0x1
 1681 041a EB03     		.2byte	0x3eb
 1682 041c 6B000000 		.4byte	0x6b
 1683 0420 00000000 		.4byte	.LFB18
 1684 0424 0C000000 		.4byte	.LFE18-.LFB18
 1685 0428 01       		.uleb128 0x1
 1686 0429 9C       		.byte	0x9c
 1687 042a 0F       		.uleb128 0xf
 1688 042b BA000000 		.4byte	.LASF49
 1689 042f 01       		.byte	0x1
 1690 0430 1104     		.2byte	0x411
 1691 0432 00000000 		.4byte	.LFB19
 1692 0436 70000000 		.4byte	.LFE19-.LFB19
 1693 043a 01       		.uleb128 0x1
 1694 043b 9C       		.byte	0x9c
 1695 043c 6D040000 		.4byte	0x46d
 1696 0440 10       		.uleb128 0x10
 1697 0441 1D000000 		.4byte	.LASF46
 1698 0445 01       		.byte	0x1
 1699 0446 1104     		.2byte	0x411
 1700 0448 6B000000 		.4byte	0x6b
 1701 044c 01       		.uleb128 0x1
 1702 044d 50       		.byte	0x50
 1703 044e 12       		.uleb128 0x12
 1704 044f 94010000 		.4byte	.LASF50
 1705 0453 01       		.byte	0x1
 1706 0454 1804     		.2byte	0x418
 1707 0456 6B000000 		.4byte	0x6b
 1708 045a 01       		.uleb128 0x1
 1709 045b 51       		.byte	0x51
 1710 045c 13       		.uleb128 0x13
 1711 045d 18010000 		.4byte	.LASF51
 1712 0461 01       		.byte	0x1
 1713 0462 1904     		.2byte	0x419
 1714 0464 6B000000 		.4byte	0x6b
 1715 0468 87000000 		.4byte	.LLST5
 1716 046c 00       		.byte	0
 1717 046d 0F       		.uleb128 0xf
 1718 046e C3040000 		.4byte	.LASF52
 1719 0472 01       		.byte	0x1
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 59


 1720 0473 7904     		.2byte	0x479
 1721 0475 00000000 		.4byte	.LFB20
 1722 0479 24000000 		.4byte	.LFE20-.LFB20
 1723 047d 01       		.uleb128 0x1
 1724 047e 9C       		.byte	0x9c
 1725 047f AD040000 		.4byte	0x4ad
 1726 0483 14       		.uleb128 0x14
 1727 0484 3B000000 		.4byte	.LASF53
 1728 0488 01       		.byte	0x1
 1729 0489 7904     		.2byte	0x479
 1730 048b AD040000 		.4byte	0x4ad
 1731 048f 9A000000 		.4byte	.LLST6
 1732 0493 13       		.uleb128 0x13
 1733 0494 F1010000 		.4byte	.LASF54
 1734 0498 01       		.byte	0x1
 1735 0499 7B04     		.2byte	0x47b
 1736 049b 77000000 		.4byte	0x77
 1737 049f DC000000 		.4byte	.LLST7
 1738 04a3 0D       		.uleb128 0xd
 1739 04a4 0E000000 		.4byte	.LVL44
 1740 04a8 2A040000 		.4byte	0x42a
 1741 04ac 00       		.byte	0
 1742 04ad 06       		.uleb128 0x6
 1743 04ae 04       		.byte	0x4
 1744 04af B3040000 		.4byte	0x4b3
 1745 04b3 15       		.uleb128 0x15
 1746 04b4 9D000000 		.4byte	0x9d
 1747 04b8 0F       		.uleb128 0xf
 1748 04b9 A5010000 		.4byte	.LASF55
 1749 04bd 01       		.byte	0x1
 1750 04be A704     		.2byte	0x4a7
 1751 04c0 00000000 		.4byte	.LFB21
 1752 04c4 28000000 		.4byte	.LFE21-.LFB21
 1753 04c8 01       		.uleb128 0x1
 1754 04c9 9C       		.byte	0x9c
 1755 04ca 08050000 		.4byte	0x508
 1756 04ce 14       		.uleb128 0x14
 1757 04cf 3B000000 		.4byte	.LASF53
 1758 04d3 01       		.byte	0x1
 1759 04d4 A704     		.2byte	0x4a7
 1760 04d6 08050000 		.4byte	0x508
 1761 04da 1D010000 		.4byte	.LLST8
 1762 04de 14       		.uleb128 0x14
 1763 04df 35030000 		.4byte	.LASF56
 1764 04e3 01       		.byte	0x1
 1765 04e4 A704     		.2byte	0x4a7
 1766 04e6 6B000000 		.4byte	0x6b
 1767 04ea 5F010000 		.4byte	.LLST9
 1768 04ee 13       		.uleb128 0x13
 1769 04ef F1010000 		.4byte	.LASF54
 1770 04f3 01       		.byte	0x1
 1771 04f4 AA04     		.2byte	0x4aa
 1772 04f6 6B000000 		.4byte	0x6b
 1773 04fa 99010000 		.4byte	.LLST10
 1774 04fe 0D       		.uleb128 0xd
 1775 04ff 0E000000 		.4byte	.LVL52
 1776 0503 2A040000 		.4byte	0x42a
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 60


 1777 0507 00       		.byte	0
 1778 0508 06       		.uleb128 0x6
 1779 0509 04       		.byte	0x4
 1780 050a 0E050000 		.4byte	0x50e
 1781 050e 15       		.uleb128 0x15
 1782 050f 6B000000 		.4byte	0x6b
 1783 0513 0F       		.uleb128 0xf
 1784 0514 75010000 		.4byte	.LASF57
 1785 0518 01       		.byte	0x1
 1786 0519 CE04     		.2byte	0x4ce
 1787 051b 00000000 		.4byte	.LFB22
 1788 051f 20000000 		.4byte	.LFE22-.LFB22
 1789 0523 01       		.uleb128 0x1
 1790 0524 9C       		.byte	0x9c
 1791 0525 65050000 		.4byte	0x565
 1792 0529 14       		.uleb128 0x14
 1793 052a 1D000000 		.4byte	.LASF46
 1794 052e 01       		.byte	0x1
 1795 052f CE04     		.2byte	0x4ce
 1796 0531 6B000000 		.4byte	0x6b
 1797 0535 DA010000 		.4byte	.LLST11
 1798 0539 0D       		.uleb128 0xd
 1799 053a 0C000000 		.4byte	.LVL59
 1800 053e 2A040000 		.4byte	0x42a
 1801 0542 09       		.uleb128 0x9
 1802 0543 12000000 		.4byte	.LVL60
 1803 0547 2A040000 		.4byte	0x42a
 1804 054b 55050000 		.4byte	0x555
 1805 054f 0A       		.uleb128 0xa
 1806 0550 01       		.uleb128 0x1
 1807 0551 50       		.byte	0x50
 1808 0552 01       		.uleb128 0x1
 1809 0553 3D       		.byte	0x3d
 1810 0554 00       		.byte	0
 1811 0555 0B       		.uleb128 0xb
 1812 0556 18000000 		.4byte	.LVL61
 1813 055a 2A040000 		.4byte	0x42a
 1814 055e 0A       		.uleb128 0xa
 1815 055f 01       		.uleb128 0x1
 1816 0560 50       		.byte	0x50
 1817 0561 01       		.uleb128 0x1
 1818 0562 3A       		.byte	0x3a
 1819 0563 00       		.byte	0
 1820 0564 00       		.byte	0
 1821 0565 11       		.uleb128 0x11
 1822 0566 CD020000 		.4byte	.LASF58
 1823 056a 01       		.byte	0x1
 1824 056b F904     		.2byte	0x4f9
 1825 056d 6B000000 		.4byte	0x6b
 1826 0571 00000000 		.4byte	.LFB23
 1827 0575 48000000 		.4byte	.LFE23-.LFB23
 1828 0579 01       		.uleb128 0x1
 1829 057a 9C       		.byte	0x9c
 1830 057b 90050000 		.4byte	0x590
 1831 057f 13       		.uleb128 0x13
 1832 0580 CA010000 		.4byte	.LASF37
 1833 0584 01       		.byte	0x1
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 61


 1834 0585 FC04     		.2byte	0x4fc
 1835 0587 6B000000 		.4byte	0x6b
 1836 058b FB010000 		.4byte	.LLST12
 1837 058f 00       		.byte	0
 1838 0590 0F       		.uleb128 0xf
 1839 0591 62010000 		.4byte	.LASF59
 1840 0595 01       		.byte	0x1
 1841 0596 4A05     		.2byte	0x54a
 1842 0598 00000000 		.4byte	.LFB24
 1843 059c 40000000 		.4byte	.LFE24-.LFB24
 1844 05a0 01       		.uleb128 0x1
 1845 05a1 9C       		.byte	0x9c
 1846 05a2 C9050000 		.4byte	0x5c9
 1847 05a6 13       		.uleb128 0x13
 1848 05a7 EB030000 		.4byte	.LASF24
 1849 05ab 01       		.byte	0x1
 1850 05ac 4C05     		.2byte	0x54c
 1851 05ae 6B000000 		.4byte	0x6b
 1852 05b2 24020000 		.4byte	.LLST13
 1853 05b6 0D       		.uleb128 0xd
 1854 05b7 06000000 		.4byte	.LVL67
 1855 05bb CA060000 		.4byte	0x6ca
 1856 05bf 0D       		.uleb128 0xd
 1857 05c0 1C000000 		.4byte	.LVL68
 1858 05c4 DC060000 		.4byte	0x6dc
 1859 05c8 00       		.byte	0
 1860 05c9 0F       		.uleb128 0xf
 1861 05ca 26030000 		.4byte	.LASF60
 1862 05ce 01       		.byte	0x1
 1863 05cf A005     		.2byte	0x5a0
 1864 05d1 00000000 		.4byte	.LFB25
 1865 05d5 58000000 		.4byte	.LFE25-.LFB25
 1866 05d9 01       		.uleb128 0x1
 1867 05da 9C       		.byte	0x9c
 1868 05db 1C060000 		.4byte	0x61c
 1869 05df 14       		.uleb128 0x14
 1870 05e0 40010000 		.4byte	.LASF61
 1871 05e4 01       		.byte	0x1
 1872 05e5 A005     		.2byte	0x5a0
 1873 05e7 6B000000 		.4byte	0x6b
 1874 05eb 37020000 		.4byte	.LLST14
 1875 05ef 16       		.uleb128 0x16
 1876 05f0 06000000 		.4byte	.LBB2
 1877 05f4 52000000 		.4byte	.LBE2-.LBB2
 1878 05f8 13       		.uleb128 0x13
 1879 05f9 43020000 		.4byte	.LASF62
 1880 05fd 01       		.byte	0x1
 1881 05fe A805     		.2byte	0x5a8
 1882 0600 6B000000 		.4byte	0x6b
 1883 0604 58020000 		.4byte	.LLST15
 1884 0608 12       		.uleb128 0x12
 1885 0609 A8000000 		.4byte	.LASF63
 1886 060d 01       		.byte	0x1
 1887 060e D005     		.2byte	0x5d0
 1888 0610 6B000000 		.4byte	0x6b
 1889 0614 05       		.uleb128 0x5
 1890 0615 03       		.byte	0x3
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 62


 1891 0616 03000000 		.4byte	txPeriod.5006
 1892 061a 00       		.byte	0
 1893 061b 00       		.byte	0
 1894 061c 0F       		.uleb128 0xf
 1895 061d 01020000 		.4byte	.LASF64
 1896 0621 01       		.byte	0x1
 1897 0622 2406     		.2byte	0x624
 1898 0624 00000000 		.4byte	.LFB26
 1899 0628 02000000 		.4byte	.LFE26-.LFB26
 1900 062c 01       		.uleb128 0x1
 1901 062d 9C       		.byte	0x9c
 1902 062e 41060000 		.4byte	0x641
 1903 0632 10       		.uleb128 0x10
 1904 0633 FD000000 		.4byte	.LASF40
 1905 0637 01       		.byte	0x1
 1906 0638 2406     		.2byte	0x624
 1907 063a 6B000000 		.4byte	0x6b
 1908 063e 01       		.uleb128 0x1
 1909 063f 50       		.byte	0x50
 1910 0640 00       		.byte	0
 1911 0641 17       		.uleb128 0x17
 1912 0642 FC030000 		.4byte	.LASF65
 1913 0646 01       		.byte	0x1
 1914 0647 1B       		.byte	0x1b
 1915 0648 6B000000 		.4byte	0x6b
 1916 064c 05       		.uleb128 0x5
 1917 064d 03       		.byte	0x3
 1918 064e 00000000 		.4byte	UART_initVar
 1919 0652 18       		.uleb128 0x18
 1920 0653 6B000000 		.4byte	0x6b
 1921 0657 62060000 		.4byte	0x662
 1922 065b 19       		.uleb128 0x19
 1923 065c E5000000 		.4byte	0xe5
 1924 0660 FE       		.byte	0xfe
 1925 0661 00       		.byte	0
 1926 0662 17       		.uleb128 0x17
 1927 0663 32010000 		.4byte	.LASF66
 1928 0667 01       		.byte	0x1
 1929 0668 1E       		.byte	0x1e
 1930 0669 73060000 		.4byte	0x673
 1931 066d 05       		.uleb128 0x5
 1932 066e 03       		.byte	0x3
 1933 066f 00000000 		.4byte	UART_txBuffer
 1934 0673 05       		.uleb128 0x5
 1935 0674 52060000 		.4byte	0x652
 1936 0678 17       		.uleb128 0x17
 1937 0679 7C000000 		.4byte	.LASF67
 1938 067d 01       		.byte	0x1
 1939 067e 1F       		.byte	0x1f
 1940 067f BC000000 		.4byte	0xbc
 1941 0683 05       		.uleb128 0x5
 1942 0684 03       		.byte	0x3
 1943 0685 00000000 		.4byte	UART_txBufferRead
 1944 0689 17       		.uleb128 0x17
 1945 068a 28000000 		.4byte	.LASF68
 1946 068e 01       		.byte	0x1
 1947 068f 20       		.byte	0x20
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 63


 1948 0690 6B000000 		.4byte	0x6b
 1949 0694 05       		.uleb128 0x5
 1950 0695 03       		.byte	0x3
 1951 0696 00000000 		.4byte	UART_txBufferWrite
 1952 069a 1A       		.uleb128 0x1a
 1953 069b E2010000 		.4byte	.LASF76
 1954 069f 03       		.byte	0x3
 1955 06a0 88       		.byte	0x88
 1956 06a1 D2000000 		.4byte	0xd2
 1957 06a5 B4060000 		.4byte	0x6b4
 1958 06a9 1B       		.uleb128 0x1b
 1959 06aa 6B000000 		.4byte	0x6b
 1960 06ae 1B       		.uleb128 0x1b
 1961 06af D2000000 		.4byte	0xd2
 1962 06b3 00       		.byte	0
 1963 06b4 1C       		.uleb128 0x1c
 1964 06b5 9E020000 		.4byte	.LASF69
 1965 06b9 03       		.byte	0x3
 1966 06ba 8B       		.byte	0x8b
 1967 06bb CA060000 		.4byte	0x6ca
 1968 06bf 1B       		.uleb128 0x1b
 1969 06c0 6B000000 		.4byte	0x6b
 1970 06c4 1B       		.uleb128 0x1b
 1971 06c5 6B000000 		.4byte	0x6b
 1972 06c9 00       		.byte	0
 1973 06ca 1D       		.uleb128 0x1d
 1974 06cb B3010000 		.4byte	.LASF77
 1975 06cf 03       		.byte	0x3
 1976 06d0 7D       		.byte	0x7d
 1977 06d1 6B000000 		.4byte	0x6b
 1978 06d5 1E       		.uleb128 0x1e
 1979 06d6 29020000 		.4byte	.LASF71
 1980 06da 04       		.byte	0x4
 1981 06db 27       		.byte	0x27
 1982 06dc 1C       		.uleb128 0x1c
 1983 06dd 07000000 		.4byte	.LASF70
 1984 06e1 03       		.byte	0x3
 1985 06e2 7E       		.byte	0x7e
 1986 06e3 ED060000 		.4byte	0x6ed
 1987 06e7 1B       		.uleb128 0x1b
 1988 06e8 6B000000 		.4byte	0x6b
 1989 06ec 00       		.byte	0
 1990 06ed 1E       		.uleb128 0x1e
 1991 06ee 8B020000 		.4byte	.LASF72
 1992 06f2 04       		.byte	0x4
 1993 06f3 28       		.byte	0x28
 1994 06f4 00       		.byte	0
 1995              		.section	.debug_abbrev,"",%progbits
 1996              	.Ldebug_abbrev0:
 1997 0000 01       		.uleb128 0x1
 1998 0001 11       		.uleb128 0x11
 1999 0002 01       		.byte	0x1
 2000 0003 25       		.uleb128 0x25
 2001 0004 0E       		.uleb128 0xe
 2002 0005 13       		.uleb128 0x13
 2003 0006 0B       		.uleb128 0xb
 2004 0007 03       		.uleb128 0x3
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 64


 2005 0008 0E       		.uleb128 0xe
 2006 0009 1B       		.uleb128 0x1b
 2007 000a 0E       		.uleb128 0xe
 2008 000b 55       		.uleb128 0x55
 2009 000c 17       		.uleb128 0x17
 2010 000d 11       		.uleb128 0x11
 2011 000e 01       		.uleb128 0x1
 2012 000f 10       		.uleb128 0x10
 2013 0010 17       		.uleb128 0x17
 2014 0011 00       		.byte	0
 2015 0012 00       		.byte	0
 2016 0013 02       		.uleb128 0x2
 2017 0014 24       		.uleb128 0x24
 2018 0015 00       		.byte	0
 2019 0016 0B       		.uleb128 0xb
 2020 0017 0B       		.uleb128 0xb
 2021 0018 3E       		.uleb128 0x3e
 2022 0019 0B       		.uleb128 0xb
 2023 001a 03       		.uleb128 0x3
 2024 001b 0E       		.uleb128 0xe
 2025 001c 00       		.byte	0
 2026 001d 00       		.byte	0
 2027 001e 03       		.uleb128 0x3
 2028 001f 24       		.uleb128 0x24
 2029 0020 00       		.byte	0
 2030 0021 0B       		.uleb128 0xb
 2031 0022 0B       		.uleb128 0xb
 2032 0023 3E       		.uleb128 0x3e
 2033 0024 0B       		.uleb128 0xb
 2034 0025 03       		.uleb128 0x3
 2035 0026 08       		.uleb128 0x8
 2036 0027 00       		.byte	0
 2037 0028 00       		.byte	0
 2038 0029 04       		.uleb128 0x4
 2039 002a 16       		.uleb128 0x16
 2040 002b 00       		.byte	0
 2041 002c 03       		.uleb128 0x3
 2042 002d 0E       		.uleb128 0xe
 2043 002e 3A       		.uleb128 0x3a
 2044 002f 0B       		.uleb128 0xb
 2045 0030 3B       		.uleb128 0x3b
 2046 0031 05       		.uleb128 0x5
 2047 0032 49       		.uleb128 0x49
 2048 0033 13       		.uleb128 0x13
 2049 0034 00       		.byte	0
 2050 0035 00       		.byte	0
 2051 0036 05       		.uleb128 0x5
 2052 0037 35       		.uleb128 0x35
 2053 0038 00       		.byte	0
 2054 0039 49       		.uleb128 0x49
 2055 003a 13       		.uleb128 0x13
 2056 003b 00       		.byte	0
 2057 003c 00       		.byte	0
 2058 003d 06       		.uleb128 0x6
 2059 003e 0F       		.uleb128 0xf
 2060 003f 00       		.byte	0
 2061 0040 0B       		.uleb128 0xb
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 65


 2062 0041 0B       		.uleb128 0xb
 2063 0042 49       		.uleb128 0x49
 2064 0043 13       		.uleb128 0x13
 2065 0044 00       		.byte	0
 2066 0045 00       		.byte	0
 2067 0046 07       		.uleb128 0x7
 2068 0047 15       		.uleb128 0x15
 2069 0048 00       		.byte	0
 2070 0049 27       		.uleb128 0x27
 2071 004a 19       		.uleb128 0x19
 2072 004b 00       		.byte	0
 2073 004c 00       		.byte	0
 2074 004d 08       		.uleb128 0x8
 2075 004e 2E       		.uleb128 0x2e
 2076 004f 01       		.byte	0x1
 2077 0050 3F       		.uleb128 0x3f
 2078 0051 19       		.uleb128 0x19
 2079 0052 03       		.uleb128 0x3
 2080 0053 0E       		.uleb128 0xe
 2081 0054 3A       		.uleb128 0x3a
 2082 0055 0B       		.uleb128 0xb
 2083 0056 3B       		.uleb128 0x3b
 2084 0057 0B       		.uleb128 0xb
 2085 0058 27       		.uleb128 0x27
 2086 0059 19       		.uleb128 0x19
 2087 005a 11       		.uleb128 0x11
 2088 005b 01       		.uleb128 0x1
 2089 005c 12       		.uleb128 0x12
 2090 005d 06       		.uleb128 0x6
 2091 005e 40       		.uleb128 0x40
 2092 005f 18       		.uleb128 0x18
 2093 0060 9742     		.uleb128 0x2117
 2094 0062 19       		.uleb128 0x19
 2095 0063 01       		.uleb128 0x1
 2096 0064 13       		.uleb128 0x13
 2097 0065 00       		.byte	0
 2098 0066 00       		.byte	0
 2099 0067 09       		.uleb128 0x9
 2100 0068 898201   		.uleb128 0x4109
 2101 006b 01       		.byte	0x1
 2102 006c 11       		.uleb128 0x11
 2103 006d 01       		.uleb128 0x1
 2104 006e 31       		.uleb128 0x31
 2105 006f 13       		.uleb128 0x13
 2106 0070 01       		.uleb128 0x1
 2107 0071 13       		.uleb128 0x13
 2108 0072 00       		.byte	0
 2109 0073 00       		.byte	0
 2110 0074 0A       		.uleb128 0xa
 2111 0075 8A8201   		.uleb128 0x410a
 2112 0078 00       		.byte	0
 2113 0079 02       		.uleb128 0x2
 2114 007a 18       		.uleb128 0x18
 2115 007b 9142     		.uleb128 0x2111
 2116 007d 18       		.uleb128 0x18
 2117 007e 00       		.byte	0
 2118 007f 00       		.byte	0
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 66


 2119 0080 0B       		.uleb128 0xb
 2120 0081 898201   		.uleb128 0x4109
 2121 0084 01       		.byte	0x1
 2122 0085 11       		.uleb128 0x11
 2123 0086 01       		.uleb128 0x1
 2124 0087 31       		.uleb128 0x31
 2125 0088 13       		.uleb128 0x13
 2126 0089 00       		.byte	0
 2127 008a 00       		.byte	0
 2128 008b 0C       		.uleb128 0xc
 2129 008c 34       		.uleb128 0x34
 2130 008d 00       		.byte	0
 2131 008e 03       		.uleb128 0x3
 2132 008f 0E       		.uleb128 0xe
 2133 0090 3A       		.uleb128 0x3a
 2134 0091 0B       		.uleb128 0xb
 2135 0092 3B       		.uleb128 0x3b
 2136 0093 0B       		.uleb128 0xb
 2137 0094 49       		.uleb128 0x49
 2138 0095 13       		.uleb128 0x13
 2139 0096 02       		.uleb128 0x2
 2140 0097 17       		.uleb128 0x17
 2141 0098 00       		.byte	0
 2142 0099 00       		.byte	0
 2143 009a 0D       		.uleb128 0xd
 2144 009b 898201   		.uleb128 0x4109
 2145 009e 00       		.byte	0
 2146 009f 11       		.uleb128 0x11
 2147 00a0 01       		.uleb128 0x1
 2148 00a1 31       		.uleb128 0x31
 2149 00a2 13       		.uleb128 0x13
 2150 00a3 00       		.byte	0
 2151 00a4 00       		.byte	0
 2152 00a5 0E       		.uleb128 0xe
 2153 00a6 2E       		.uleb128 0x2e
 2154 00a7 00       		.byte	0
 2155 00a8 3F       		.uleb128 0x3f
 2156 00a9 19       		.uleb128 0x19
 2157 00aa 03       		.uleb128 0x3
 2158 00ab 0E       		.uleb128 0xe
 2159 00ac 3A       		.uleb128 0x3a
 2160 00ad 0B       		.uleb128 0xb
 2161 00ae 3B       		.uleb128 0x3b
 2162 00af 05       		.uleb128 0x5
 2163 00b0 27       		.uleb128 0x27
 2164 00b1 19       		.uleb128 0x19
 2165 00b2 49       		.uleb128 0x49
 2166 00b3 13       		.uleb128 0x13
 2167 00b4 11       		.uleb128 0x11
 2168 00b5 01       		.uleb128 0x1
 2169 00b6 12       		.uleb128 0x12
 2170 00b7 06       		.uleb128 0x6
 2171 00b8 40       		.uleb128 0x40
 2172 00b9 18       		.uleb128 0x18
 2173 00ba 9742     		.uleb128 0x2117
 2174 00bc 19       		.uleb128 0x19
 2175 00bd 00       		.byte	0
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 67


 2176 00be 00       		.byte	0
 2177 00bf 0F       		.uleb128 0xf
 2178 00c0 2E       		.uleb128 0x2e
 2179 00c1 01       		.byte	0x1
 2180 00c2 3F       		.uleb128 0x3f
 2181 00c3 19       		.uleb128 0x19
 2182 00c4 03       		.uleb128 0x3
 2183 00c5 0E       		.uleb128 0xe
 2184 00c6 3A       		.uleb128 0x3a
 2185 00c7 0B       		.uleb128 0xb
 2186 00c8 3B       		.uleb128 0x3b
 2187 00c9 05       		.uleb128 0x5
 2188 00ca 27       		.uleb128 0x27
 2189 00cb 19       		.uleb128 0x19
 2190 00cc 11       		.uleb128 0x11
 2191 00cd 01       		.uleb128 0x1
 2192 00ce 12       		.uleb128 0x12
 2193 00cf 06       		.uleb128 0x6
 2194 00d0 40       		.uleb128 0x40
 2195 00d1 18       		.uleb128 0x18
 2196 00d2 9742     		.uleb128 0x2117
 2197 00d4 19       		.uleb128 0x19
 2198 00d5 01       		.uleb128 0x1
 2199 00d6 13       		.uleb128 0x13
 2200 00d7 00       		.byte	0
 2201 00d8 00       		.byte	0
 2202 00d9 10       		.uleb128 0x10
 2203 00da 05       		.uleb128 0x5
 2204 00db 00       		.byte	0
 2205 00dc 03       		.uleb128 0x3
 2206 00dd 0E       		.uleb128 0xe
 2207 00de 3A       		.uleb128 0x3a
 2208 00df 0B       		.uleb128 0xb
 2209 00e0 3B       		.uleb128 0x3b
 2210 00e1 05       		.uleb128 0x5
 2211 00e2 49       		.uleb128 0x49
 2212 00e3 13       		.uleb128 0x13
 2213 00e4 02       		.uleb128 0x2
 2214 00e5 18       		.uleb128 0x18
 2215 00e6 00       		.byte	0
 2216 00e7 00       		.byte	0
 2217 00e8 11       		.uleb128 0x11
 2218 00e9 2E       		.uleb128 0x2e
 2219 00ea 01       		.byte	0x1
 2220 00eb 3F       		.uleb128 0x3f
 2221 00ec 19       		.uleb128 0x19
 2222 00ed 03       		.uleb128 0x3
 2223 00ee 0E       		.uleb128 0xe
 2224 00ef 3A       		.uleb128 0x3a
 2225 00f0 0B       		.uleb128 0xb
 2226 00f1 3B       		.uleb128 0x3b
 2227 00f2 05       		.uleb128 0x5
 2228 00f3 27       		.uleb128 0x27
 2229 00f4 19       		.uleb128 0x19
 2230 00f5 49       		.uleb128 0x49
 2231 00f6 13       		.uleb128 0x13
 2232 00f7 11       		.uleb128 0x11
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 68


 2233 00f8 01       		.uleb128 0x1
 2234 00f9 12       		.uleb128 0x12
 2235 00fa 06       		.uleb128 0x6
 2236 00fb 40       		.uleb128 0x40
 2237 00fc 18       		.uleb128 0x18
 2238 00fd 9742     		.uleb128 0x2117
 2239 00ff 19       		.uleb128 0x19
 2240 0100 01       		.uleb128 0x1
 2241 0101 13       		.uleb128 0x13
 2242 0102 00       		.byte	0
 2243 0103 00       		.byte	0
 2244 0104 12       		.uleb128 0x12
 2245 0105 34       		.uleb128 0x34
 2246 0106 00       		.byte	0
 2247 0107 03       		.uleb128 0x3
 2248 0108 0E       		.uleb128 0xe
 2249 0109 3A       		.uleb128 0x3a
 2250 010a 0B       		.uleb128 0xb
 2251 010b 3B       		.uleb128 0x3b
 2252 010c 05       		.uleb128 0x5
 2253 010d 49       		.uleb128 0x49
 2254 010e 13       		.uleb128 0x13
 2255 010f 02       		.uleb128 0x2
 2256 0110 18       		.uleb128 0x18
 2257 0111 00       		.byte	0
 2258 0112 00       		.byte	0
 2259 0113 13       		.uleb128 0x13
 2260 0114 34       		.uleb128 0x34
 2261 0115 00       		.byte	0
 2262 0116 03       		.uleb128 0x3
 2263 0117 0E       		.uleb128 0xe
 2264 0118 3A       		.uleb128 0x3a
 2265 0119 0B       		.uleb128 0xb
 2266 011a 3B       		.uleb128 0x3b
 2267 011b 05       		.uleb128 0x5
 2268 011c 49       		.uleb128 0x49
 2269 011d 13       		.uleb128 0x13
 2270 011e 02       		.uleb128 0x2
 2271 011f 17       		.uleb128 0x17
 2272 0120 00       		.byte	0
 2273 0121 00       		.byte	0
 2274 0122 14       		.uleb128 0x14
 2275 0123 05       		.uleb128 0x5
 2276 0124 00       		.byte	0
 2277 0125 03       		.uleb128 0x3
 2278 0126 0E       		.uleb128 0xe
 2279 0127 3A       		.uleb128 0x3a
 2280 0128 0B       		.uleb128 0xb
 2281 0129 3B       		.uleb128 0x3b
 2282 012a 05       		.uleb128 0x5
 2283 012b 49       		.uleb128 0x49
 2284 012c 13       		.uleb128 0x13
 2285 012d 02       		.uleb128 0x2
 2286 012e 17       		.uleb128 0x17
 2287 012f 00       		.byte	0
 2288 0130 00       		.byte	0
 2289 0131 15       		.uleb128 0x15
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 69


 2290 0132 26       		.uleb128 0x26
 2291 0133 00       		.byte	0
 2292 0134 49       		.uleb128 0x49
 2293 0135 13       		.uleb128 0x13
 2294 0136 00       		.byte	0
 2295 0137 00       		.byte	0
 2296 0138 16       		.uleb128 0x16
 2297 0139 0B       		.uleb128 0xb
 2298 013a 01       		.byte	0x1
 2299 013b 11       		.uleb128 0x11
 2300 013c 01       		.uleb128 0x1
 2301 013d 12       		.uleb128 0x12
 2302 013e 06       		.uleb128 0x6
 2303 013f 00       		.byte	0
 2304 0140 00       		.byte	0
 2305 0141 17       		.uleb128 0x17
 2306 0142 34       		.uleb128 0x34
 2307 0143 00       		.byte	0
 2308 0144 03       		.uleb128 0x3
 2309 0145 0E       		.uleb128 0xe
 2310 0146 3A       		.uleb128 0x3a
 2311 0147 0B       		.uleb128 0xb
 2312 0148 3B       		.uleb128 0x3b
 2313 0149 0B       		.uleb128 0xb
 2314 014a 49       		.uleb128 0x49
 2315 014b 13       		.uleb128 0x13
 2316 014c 3F       		.uleb128 0x3f
 2317 014d 19       		.uleb128 0x19
 2318 014e 02       		.uleb128 0x2
 2319 014f 18       		.uleb128 0x18
 2320 0150 00       		.byte	0
 2321 0151 00       		.byte	0
 2322 0152 18       		.uleb128 0x18
 2323 0153 01       		.uleb128 0x1
 2324 0154 01       		.byte	0x1
 2325 0155 49       		.uleb128 0x49
 2326 0156 13       		.uleb128 0x13
 2327 0157 01       		.uleb128 0x1
 2328 0158 13       		.uleb128 0x13
 2329 0159 00       		.byte	0
 2330 015a 00       		.byte	0
 2331 015b 19       		.uleb128 0x19
 2332 015c 21       		.uleb128 0x21
 2333 015d 00       		.byte	0
 2334 015e 49       		.uleb128 0x49
 2335 015f 13       		.uleb128 0x13
 2336 0160 2F       		.uleb128 0x2f
 2337 0161 0B       		.uleb128 0xb
 2338 0162 00       		.byte	0
 2339 0163 00       		.byte	0
 2340 0164 1A       		.uleb128 0x1a
 2341 0165 2E       		.uleb128 0x2e
 2342 0166 01       		.byte	0x1
 2343 0167 3F       		.uleb128 0x3f
 2344 0168 19       		.uleb128 0x19
 2345 0169 03       		.uleb128 0x3
 2346 016a 0E       		.uleb128 0xe
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 70


 2347 016b 3A       		.uleb128 0x3a
 2348 016c 0B       		.uleb128 0xb
 2349 016d 3B       		.uleb128 0x3b
 2350 016e 0B       		.uleb128 0xb
 2351 016f 27       		.uleb128 0x27
 2352 0170 19       		.uleb128 0x19
 2353 0171 49       		.uleb128 0x49
 2354 0172 13       		.uleb128 0x13
 2355 0173 3C       		.uleb128 0x3c
 2356 0174 19       		.uleb128 0x19
 2357 0175 01       		.uleb128 0x1
 2358 0176 13       		.uleb128 0x13
 2359 0177 00       		.byte	0
 2360 0178 00       		.byte	0
 2361 0179 1B       		.uleb128 0x1b
 2362 017a 05       		.uleb128 0x5
 2363 017b 00       		.byte	0
 2364 017c 49       		.uleb128 0x49
 2365 017d 13       		.uleb128 0x13
 2366 017e 00       		.byte	0
 2367 017f 00       		.byte	0
 2368 0180 1C       		.uleb128 0x1c
 2369 0181 2E       		.uleb128 0x2e
 2370 0182 01       		.byte	0x1
 2371 0183 3F       		.uleb128 0x3f
 2372 0184 19       		.uleb128 0x19
 2373 0185 03       		.uleb128 0x3
 2374 0186 0E       		.uleb128 0xe
 2375 0187 3A       		.uleb128 0x3a
 2376 0188 0B       		.uleb128 0xb
 2377 0189 3B       		.uleb128 0x3b
 2378 018a 0B       		.uleb128 0xb
 2379 018b 27       		.uleb128 0x27
 2380 018c 19       		.uleb128 0x19
 2381 018d 3C       		.uleb128 0x3c
 2382 018e 19       		.uleb128 0x19
 2383 018f 01       		.uleb128 0x1
 2384 0190 13       		.uleb128 0x13
 2385 0191 00       		.byte	0
 2386 0192 00       		.byte	0
 2387 0193 1D       		.uleb128 0x1d
 2388 0194 2E       		.uleb128 0x2e
 2389 0195 00       		.byte	0
 2390 0196 3F       		.uleb128 0x3f
 2391 0197 19       		.uleb128 0x19
 2392 0198 03       		.uleb128 0x3
 2393 0199 0E       		.uleb128 0xe
 2394 019a 3A       		.uleb128 0x3a
 2395 019b 0B       		.uleb128 0xb
 2396 019c 3B       		.uleb128 0x3b
 2397 019d 0B       		.uleb128 0xb
 2398 019e 27       		.uleb128 0x27
 2399 019f 19       		.uleb128 0x19
 2400 01a0 49       		.uleb128 0x49
 2401 01a1 13       		.uleb128 0x13
 2402 01a2 3C       		.uleb128 0x3c
 2403 01a3 19       		.uleb128 0x19
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 71


 2404 01a4 00       		.byte	0
 2405 01a5 00       		.byte	0
 2406 01a6 1E       		.uleb128 0x1e
 2407 01a7 2E       		.uleb128 0x2e
 2408 01a8 00       		.byte	0
 2409 01a9 3F       		.uleb128 0x3f
 2410 01aa 19       		.uleb128 0x19
 2411 01ab 03       		.uleb128 0x3
 2412 01ac 0E       		.uleb128 0xe
 2413 01ad 3A       		.uleb128 0x3a
 2414 01ae 0B       		.uleb128 0xb
 2415 01af 3B       		.uleb128 0x3b
 2416 01b0 0B       		.uleb128 0xb
 2417 01b1 27       		.uleb128 0x27
 2418 01b2 19       		.uleb128 0x19
 2419 01b3 3C       		.uleb128 0x3c
 2420 01b4 19       		.uleb128 0x19
 2421 01b5 00       		.byte	0
 2422 01b6 00       		.byte	0
 2423 01b7 00       		.byte	0
 2424              		.section	.debug_loc,"",%progbits
 2425              	.Ldebug_loc0:
 2426              	.LLST0:
 2427 0000 08000000 		.4byte	.LVL3
 2428 0004 40000000 		.4byte	.LVL6
 2429 0008 0100     		.2byte	0x1
 2430 000a 54       		.byte	0x54
 2431 000b 00000000 		.4byte	0
 2432 000f 00000000 		.4byte	0
 2433              	.LLST1:
 2434 0013 08000000 		.4byte	.LVL10
 2435 0017 3A000000 		.4byte	.LVL13
 2436 001b 0100     		.2byte	0x1
 2437 001d 54       		.byte	0x54
 2438 001e 00000000 		.4byte	0
 2439 0022 00000000 		.4byte	0
 2440              	.LLST2:
 2441 0026 04000000 		.4byte	.LVL17
 2442 002a 08000000 		.4byte	.LVL18
 2443 002e 0600     		.2byte	0x6
 2444 0030 70       		.byte	0x70
 2445 0031 00       		.sleb128 0
 2446 0032 08       		.byte	0x8
 2447 0033 7F       		.byte	0x7f
 2448 0034 1A       		.byte	0x1a
 2449 0035 9F       		.byte	0x9f
 2450 0036 00000000 		.4byte	0
 2451 003a 00000000 		.4byte	0
 2452              	.LLST3:
 2453 003e 00000000 		.4byte	.LVL19
 2454 0042 12000000 		.4byte	.LVL21
 2455 0046 0200     		.2byte	0x2
 2456 0048 30       		.byte	0x30
 2457 0049 9F       		.byte	0x9f
 2458 004a 12000000 		.4byte	.LVL21
 2459 004e 1A000000 		.4byte	.LVL22
 2460 0052 0100     		.2byte	0x1
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 72


 2461 0054 50       		.byte	0x50
 2462 0055 1A000000 		.4byte	.LVL22
 2463 0059 1E000000 		.4byte	.LVL23
 2464 005d 0200     		.2byte	0x2
 2465 005f 30       		.byte	0x30
 2466 0060 9F       		.byte	0x9f
 2467 0061 1E000000 		.4byte	.LVL23
 2468 0065 2C000000 		.4byte	.LFE9
 2469 0069 0100     		.2byte	0x1
 2470 006b 50       		.byte	0x50
 2471 006c 00000000 		.4byte	0
 2472 0070 00000000 		.4byte	0
 2473              	.LLST4:
 2474 0074 06000000 		.4byte	.LVL28
 2475 0078 1B000000 		.4byte	.LVL29-1
 2476 007c 0100     		.2byte	0x1
 2477 007e 50       		.byte	0x50
 2478 007f 00000000 		.4byte	0
 2479 0083 00000000 		.4byte	0
 2480              	.LLST5:
 2481 0087 08000000 		.4byte	.LVL37
 2482 008b 2C000000 		.4byte	.LVL38
 2483 008f 0100     		.2byte	0x1
 2484 0091 53       		.byte	0x53
 2485 0092 00000000 		.4byte	0
 2486 0096 00000000 		.4byte	0
 2487              	.LLST6:
 2488 009a 00000000 		.4byte	.LVL41
 2489 009e 0A000000 		.4byte	.LVL43
 2490 00a2 0100     		.2byte	0x1
 2491 00a4 50       		.byte	0x50
 2492 00a5 0A000000 		.4byte	.LVL43
 2493 00a9 14000000 		.4byte	.LVL47
 2494 00ad 0100     		.2byte	0x1
 2495 00af 55       		.byte	0x55
 2496 00b0 14000000 		.4byte	.LVL47
 2497 00b4 18000000 		.4byte	.LVL48
 2498 00b8 0100     		.2byte	0x1
 2499 00ba 50       		.byte	0x50
 2500 00bb 18000000 		.4byte	.LVL48
 2501 00bf 20000000 		.4byte	.LVL49
 2502 00c3 0100     		.2byte	0x1
 2503 00c5 55       		.byte	0x55
 2504 00c6 20000000 		.4byte	.LVL49
 2505 00ca 24000000 		.4byte	.LFE20
 2506 00ce 0400     		.2byte	0x4
 2507 00d0 F3       		.byte	0xf3
 2508 00d1 01       		.uleb128 0x1
 2509 00d2 50       		.byte	0x50
 2510 00d3 9F       		.byte	0x9f
 2511 00d4 00000000 		.4byte	0
 2512 00d8 00000000 		.4byte	0
 2513              	.LLST7:
 2514 00dc 02000000 		.4byte	.LVL42
 2515 00e0 0A000000 		.4byte	.LVL43
 2516 00e4 0200     		.2byte	0x2
 2517 00e6 30       		.byte	0x30
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 73


 2518 00e7 9F       		.byte	0x9f
 2519 00e8 0A000000 		.4byte	.LVL43
 2520 00ec 10000000 		.4byte	.LVL45
 2521 00f0 0100     		.2byte	0x1
 2522 00f2 54       		.byte	0x54
 2523 00f3 12000000 		.4byte	.LVL46
 2524 00f7 14000000 		.4byte	.LVL47
 2525 00fb 0100     		.2byte	0x1
 2526 00fd 54       		.byte	0x54
 2527 00fe 14000000 		.4byte	.LVL47
 2528 0102 18000000 		.4byte	.LVL48
 2529 0106 0200     		.2byte	0x2
 2530 0108 30       		.byte	0x30
 2531 0109 9F       		.byte	0x9f
 2532 010a 18000000 		.4byte	.LVL48
 2533 010e 20000000 		.4byte	.LVL49
 2534 0112 0100     		.2byte	0x1
 2535 0114 54       		.byte	0x54
 2536 0115 00000000 		.4byte	0
 2537 0119 00000000 		.4byte	0
 2538              	.LLST8:
 2539 011d 00000000 		.4byte	.LVL50
 2540 0121 08000000 		.4byte	.LVL51
 2541 0125 0100     		.2byte	0x1
 2542 0127 50       		.byte	0x50
 2543 0128 08000000 		.4byte	.LVL51
 2544 012c 14000000 		.4byte	.LVL55
 2545 0130 0100     		.2byte	0x1
 2546 0132 56       		.byte	0x56
 2547 0133 14000000 		.4byte	.LVL55
 2548 0137 1C000000 		.4byte	.LVL56
 2549 013b 0100     		.2byte	0x1
 2550 013d 50       		.byte	0x50
 2551 013e 1C000000 		.4byte	.LVL56
 2552 0142 22000000 		.4byte	.LVL57
 2553 0146 0100     		.2byte	0x1
 2554 0148 56       		.byte	0x56
 2555 0149 22000000 		.4byte	.LVL57
 2556 014d 28000000 		.4byte	.LFE21
 2557 0151 0400     		.2byte	0x4
 2558 0153 F3       		.byte	0xf3
 2559 0154 01       		.uleb128 0x1
 2560 0155 50       		.byte	0x50
 2561 0156 9F       		.byte	0x9f
 2562 0157 00000000 		.4byte	0
 2563 015b 00000000 		.4byte	0
 2564              	.LLST9:
 2565 015f 00000000 		.4byte	.LVL50
 2566 0163 08000000 		.4byte	.LVL51
 2567 0167 0100     		.2byte	0x1
 2568 0169 51       		.byte	0x51
 2569 016a 08000000 		.4byte	.LVL51
 2570 016e 14000000 		.4byte	.LVL55
 2571 0172 0400     		.2byte	0x4
 2572 0174 F3       		.byte	0xf3
 2573 0175 01       		.uleb128 0x1
 2574 0176 51       		.byte	0x51
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 74


 2575 0177 9F       		.byte	0x9f
 2576 0178 14000000 		.4byte	.LVL55
 2577 017c 1C000000 		.4byte	.LVL56
 2578 0180 0100     		.2byte	0x1
 2579 0182 51       		.byte	0x51
 2580 0183 1C000000 		.4byte	.LVL56
 2581 0187 28000000 		.4byte	.LFE21
 2582 018b 0400     		.2byte	0x4
 2583 018d F3       		.byte	0xf3
 2584 018e 01       		.uleb128 0x1
 2585 018f 51       		.byte	0x51
 2586 0190 9F       		.byte	0x9f
 2587 0191 00000000 		.4byte	0
 2588 0195 00000000 		.4byte	0
 2589              	.LLST10:
 2590 0199 00000000 		.4byte	.LVL50
 2591 019d 08000000 		.4byte	.LVL51
 2592 01a1 0200     		.2byte	0x2
 2593 01a3 30       		.byte	0x30
 2594 01a4 9F       		.byte	0x9f
 2595 01a5 08000000 		.4byte	.LVL51
 2596 01a9 10000000 		.4byte	.LVL53
 2597 01ad 0100     		.2byte	0x1
 2598 01af 54       		.byte	0x54
 2599 01b0 12000000 		.4byte	.LVL54
 2600 01b4 14000000 		.4byte	.LVL55
 2601 01b8 0100     		.2byte	0x1
 2602 01ba 54       		.byte	0x54
 2603 01bb 14000000 		.4byte	.LVL55
 2604 01bf 1C000000 		.4byte	.LVL56
 2605 01c3 0200     		.2byte	0x2
 2606 01c5 30       		.byte	0x30
 2607 01c6 9F       		.byte	0x9f
 2608 01c7 1C000000 		.4byte	.LVL56
 2609 01cb 22000000 		.4byte	.LVL57
 2610 01cf 0100     		.2byte	0x1
 2611 01d1 54       		.byte	0x54
 2612 01d2 00000000 		.4byte	0
 2613 01d6 00000000 		.4byte	0
 2614              	.LLST11:
 2615 01da 00000000 		.4byte	.LVL58
 2616 01de 0B000000 		.4byte	.LVL59-1
 2617 01e2 0100     		.2byte	0x1
 2618 01e4 50       		.byte	0x50
 2619 01e5 0B000000 		.4byte	.LVL59-1
 2620 01e9 20000000 		.4byte	.LFE22
 2621 01ed 0400     		.2byte	0x4
 2622 01ef F3       		.byte	0xf3
 2623 01f0 01       		.uleb128 0x1
 2624 01f1 50       		.byte	0x50
 2625 01f2 9F       		.byte	0x9f
 2626 01f3 00000000 		.4byte	0
 2627 01f7 00000000 		.4byte	0
 2628              	.LLST12:
 2629 01fb 24000000 		.4byte	.LVL62
 2630 01ff 26000000 		.4byte	.LVL63
 2631 0203 0100     		.2byte	0x1
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 75


 2632 0205 50       		.byte	0x50
 2633 0206 30000000 		.4byte	.LVL64
 2634 020a 32000000 		.4byte	.LVL65
 2635 020e 0100     		.2byte	0x1
 2636 0210 50       		.byte	0x50
 2637 0211 34000000 		.4byte	.LVL66
 2638 0215 48000000 		.4byte	.LFE23
 2639 0219 0100     		.2byte	0x1
 2640 021b 50       		.byte	0x50
 2641 021c 00000000 		.4byte	0
 2642 0220 00000000 		.4byte	0
 2643              	.LLST13:
 2644 0224 06000000 		.4byte	.LVL67
 2645 0228 1B000000 		.4byte	.LVL68-1
 2646 022c 0100     		.2byte	0x1
 2647 022e 50       		.byte	0x50
 2648 022f 00000000 		.4byte	0
 2649 0233 00000000 		.4byte	0
 2650              	.LLST14:
 2651 0237 00000000 		.4byte	.LVL69
 2652 023b 3C000000 		.4byte	.LVL74
 2653 023f 0100     		.2byte	0x1
 2654 0241 50       		.byte	0x50
 2655 0242 3C000000 		.4byte	.LVL74
 2656 0246 58000000 		.4byte	.LFE25
 2657 024a 0400     		.2byte	0x4
 2658 024c F3       		.byte	0xf3
 2659 024d 01       		.uleb128 0x1
 2660 024e 50       		.byte	0x50
 2661 024f 9F       		.byte	0x9f
 2662 0250 00000000 		.4byte	0
 2663 0254 00000000 		.4byte	0
 2664              	.LLST15:
 2665 0258 22000000 		.4byte	.LVL70
 2666 025c 28000000 		.4byte	.LVL71
 2667 0260 0100     		.2byte	0x1
 2668 0262 53       		.byte	0x53
 2669 0263 34000000 		.4byte	.LVL72
 2670 0267 3A000000 		.4byte	.LVL73
 2671 026b 0100     		.2byte	0x1
 2672 026d 53       		.byte	0x53
 2673 026e 00000000 		.4byte	0
 2674 0272 00000000 		.4byte	0
 2675              		.section	.debug_aranges,"",%progbits
 2676 0000 EC000000 		.4byte	0xec
 2677 0004 0200     		.2byte	0x2
 2678 0006 00000000 		.4byte	.Ldebug_info0
 2679 000a 04       		.byte	0x4
 2680 000b 00       		.byte	0
 2681 000c 0000     		.2byte	0
 2682 000e 0000     		.2byte	0
 2683 0010 00000000 		.4byte	.LFB1
 2684 0014 40000000 		.4byte	.LFE1-.LFB1
 2685 0018 00000000 		.4byte	.LFB2
 2686 001c 48000000 		.4byte	.LFE2-.LFB2
 2687 0020 00000000 		.4byte	.LFB0
 2688 0024 1C000000 		.4byte	.LFE0-.LFB0
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 76


 2689 0028 00000000 		.4byte	.LFB3
 2690 002c 48000000 		.4byte	.LFE3-.LFB3
 2691 0030 00000000 		.4byte	.LFB4
 2692 0034 04000000 		.4byte	.LFE4-.LFB4
 2693 0038 00000000 		.4byte	.LFB5
 2694 003c 02000000 		.4byte	.LFE5-.LFB5
 2695 0040 00000000 		.4byte	.LFB6
 2696 0044 0C000000 		.4byte	.LFE6-.LFB6
 2697 0048 00000000 		.4byte	.LFB7
 2698 004c 0C000000 		.4byte	.LFE7-.LFB7
 2699 0050 00000000 		.4byte	.LFB8
 2700 0054 10000000 		.4byte	.LFE8-.LFB8
 2701 0058 00000000 		.4byte	.LFB9
 2702 005c 2C000000 		.4byte	.LFE9-.LFB9
 2703 0060 00000000 		.4byte	.LFB10
 2704 0064 12000000 		.4byte	.LFE10-.LFB10
 2705 0068 00000000 		.4byte	.LFB11
 2706 006c 18000000 		.4byte	.LFE11-.LFB11
 2707 0070 00000000 		.4byte	.LFB12
 2708 0074 24000000 		.4byte	.LFE12-.LFB12
 2709 0078 00000000 		.4byte	.LFB13
 2710 007c 02000000 		.4byte	.LFE13-.LFB13
 2711 0080 00000000 		.4byte	.LFB14
 2712 0084 0C000000 		.4byte	.LFE14-.LFB14
 2713 0088 00000000 		.4byte	.LFB15
 2714 008c 0C000000 		.4byte	.LFE15-.LFB15
 2715 0090 00000000 		.4byte	.LFB16
 2716 0094 0C000000 		.4byte	.LFE16-.LFB16
 2717 0098 00000000 		.4byte	.LFB17
 2718 009c 60000000 		.4byte	.LFE17-.LFB17
 2719 00a0 00000000 		.4byte	.LFB18
 2720 00a4 0C000000 		.4byte	.LFE18-.LFB18
 2721 00a8 00000000 		.4byte	.LFB19
 2722 00ac 70000000 		.4byte	.LFE19-.LFB19
 2723 00b0 00000000 		.4byte	.LFB20
 2724 00b4 24000000 		.4byte	.LFE20-.LFB20
 2725 00b8 00000000 		.4byte	.LFB21
 2726 00bc 28000000 		.4byte	.LFE21-.LFB21
 2727 00c0 00000000 		.4byte	.LFB22
 2728 00c4 20000000 		.4byte	.LFE22-.LFB22
 2729 00c8 00000000 		.4byte	.LFB23
 2730 00cc 48000000 		.4byte	.LFE23-.LFB23
 2731 00d0 00000000 		.4byte	.LFB24
 2732 00d4 40000000 		.4byte	.LFE24-.LFB24
 2733 00d8 00000000 		.4byte	.LFB25
 2734 00dc 58000000 		.4byte	.LFE25-.LFB25
 2735 00e0 00000000 		.4byte	.LFB26
 2736 00e4 02000000 		.4byte	.LFE26-.LFB26
 2737 00e8 00000000 		.4byte	0
 2738 00ec 00000000 		.4byte	0
 2739              		.section	.debug_ranges,"",%progbits
 2740              	.Ldebug_ranges0:
 2741 0000 00000000 		.4byte	.LFB1
 2742 0004 40000000 		.4byte	.LFE1
 2743 0008 00000000 		.4byte	.LFB2
 2744 000c 48000000 		.4byte	.LFE2
 2745 0010 00000000 		.4byte	.LFB0
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 77


 2746 0014 1C000000 		.4byte	.LFE0
 2747 0018 00000000 		.4byte	.LFB3
 2748 001c 48000000 		.4byte	.LFE3
 2749 0020 00000000 		.4byte	.LFB4
 2750 0024 04000000 		.4byte	.LFE4
 2751 0028 00000000 		.4byte	.LFB5
 2752 002c 02000000 		.4byte	.LFE5
 2753 0030 00000000 		.4byte	.LFB6
 2754 0034 0C000000 		.4byte	.LFE6
 2755 0038 00000000 		.4byte	.LFB7
 2756 003c 0C000000 		.4byte	.LFE7
 2757 0040 00000000 		.4byte	.LFB8
 2758 0044 10000000 		.4byte	.LFE8
 2759 0048 00000000 		.4byte	.LFB9
 2760 004c 2C000000 		.4byte	.LFE9
 2761 0050 00000000 		.4byte	.LFB10
 2762 0054 12000000 		.4byte	.LFE10
 2763 0058 00000000 		.4byte	.LFB11
 2764 005c 18000000 		.4byte	.LFE11
 2765 0060 00000000 		.4byte	.LFB12
 2766 0064 24000000 		.4byte	.LFE12
 2767 0068 00000000 		.4byte	.LFB13
 2768 006c 02000000 		.4byte	.LFE13
 2769 0070 00000000 		.4byte	.LFB14
 2770 0074 0C000000 		.4byte	.LFE14
 2771 0078 00000000 		.4byte	.LFB15
 2772 007c 0C000000 		.4byte	.LFE15
 2773 0080 00000000 		.4byte	.LFB16
 2774 0084 0C000000 		.4byte	.LFE16
 2775 0088 00000000 		.4byte	.LFB17
 2776 008c 60000000 		.4byte	.LFE17
 2777 0090 00000000 		.4byte	.LFB18
 2778 0094 0C000000 		.4byte	.LFE18
 2779 0098 00000000 		.4byte	.LFB19
 2780 009c 70000000 		.4byte	.LFE19
 2781 00a0 00000000 		.4byte	.LFB20
 2782 00a4 24000000 		.4byte	.LFE20
 2783 00a8 00000000 		.4byte	.LFB21
 2784 00ac 28000000 		.4byte	.LFE21
 2785 00b0 00000000 		.4byte	.LFB22
 2786 00b4 20000000 		.4byte	.LFE22
 2787 00b8 00000000 		.4byte	.LFB23
 2788 00bc 48000000 		.4byte	.LFE23
 2789 00c0 00000000 		.4byte	.LFB24
 2790 00c4 40000000 		.4byte	.LFE24
 2791 00c8 00000000 		.4byte	.LFB25
 2792 00cc 58000000 		.4byte	.LFE25
 2793 00d0 00000000 		.4byte	.LFB26
 2794 00d4 02000000 		.4byte	.LFE26
 2795 00d8 00000000 		.4byte	0
 2796 00dc 00000000 		.4byte	0
 2797              		.section	.debug_line,"",%progbits
 2798              	.Ldebug_line0:
 2799 0000 F1020000 		.section	.debug_str,"MS",%progbits,1
 2799      02005F00 
 2799      00000201 
 2799      FB0E0D00 
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 78


 2799      01010101 
 2800              	.LASF10:
 2801 0000 75696E74 		.ascii	"uint16\000"
 2801      313600
 2802              	.LASF70:
 2803 0007 43794578 		.ascii	"CyExitCriticalSection\000"
 2803      69744372 
 2803      69746963 
 2803      616C5365 
 2803      6374696F 
 2804              	.LASF46:
 2805 001d 74784461 		.ascii	"txDataByte\000"
 2805      74614279 
 2805      746500
 2806              	.LASF68:
 2807 0028 55415254 		.ascii	"UART_txBufferWrite\000"
 2807      5F747842 
 2807      75666665 
 2807      72577269 
 2807      746500
 2808              	.LASF53:
 2809 003b 73747269 		.ascii	"string\000"
 2809      6E6700
 2810              	.LASF7:
 2811 0042 6C6F6E67 		.ascii	"long long unsigned int\000"
 2811      206C6F6E 
 2811      6720756E 
 2811      7369676E 
 2811      65642069 
 2812              	.LASF22:
 2813 0059 55415254 		.ascii	"UART_Start\000"
 2813      5F537461 
 2813      727400
 2814              	.LASF44:
 2815 0064 55415254 		.ascii	"UART_SetTxInterruptMode\000"
 2815      5F536574 
 2815      5478496E 
 2815      74657272 
 2815      7570744D 
 2816              	.LASF67:
 2817 007c 55415254 		.ascii	"UART_txBufferRead\000"
 2817      5F747842 
 2817      75666665 
 2817      72526561 
 2817      6400
 2818              	.LASF6:
 2819 008e 6C6F6E67 		.ascii	"long long int\000"
 2819      206C6F6E 
 2819      6720696E 
 2819      7400
 2820              	.LASF0:
 2821 009c 7369676E 		.ascii	"signed char\000"
 2821      65642063 
 2821      68617200 
 2822              	.LASF63:
 2823 00a8 74785065 		.ascii	"txPeriod\000"
 2823      72696F64 
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 79


 2823      00
 2824              	.LASF4:
 2825 00b1 6C6F6E67 		.ascii	"long int\000"
 2825      20696E74 
 2825      00
 2826              	.LASF49:
 2827 00ba 55415254 		.ascii	"UART_PutChar\000"
 2827      5F507574 
 2827      43686172 
 2827      00
 2828              	.LASF30:
 2829 00c7 55415254 		.ascii	"UART_ReadRxData\000"
 2829      5F526561 
 2829      64527844 
 2829      61746100 
 2830              	.LASF9:
 2831 00d7 75696E74 		.ascii	"uint8\000"
 2831      3800
 2832              	.LASF47:
 2833 00dd 55415254 		.ascii	"UART_ReadControlRegister\000"
 2833      5F526561 
 2833      64436F6E 
 2833      74726F6C 
 2833      52656769 
 2834              	.LASF13:
 2835 00f6 646F7562 		.ascii	"double\000"
 2835      6C6500
 2836              	.LASF40:
 2837 00fd 61646472 		.ascii	"addressMode\000"
 2837      6573734D 
 2837      6F646500 
 2838              	.LASF11:
 2839 0109 75696E74 		.ascii	"uint32\000"
 2839      333200
 2840              	.LASF27:
 2841 0110 636F6E74 		.ascii	"control\000"
 2841      726F6C00 
 2842              	.LASF51:
 2843 0118 6C6F6354 		.ascii	"locTxBufferRead\000"
 2843      78427566 
 2843      66657252 
 2843      65616400 
 2844              	.LASF20:
 2845 0128 55415254 		.ascii	"UART_Init\000"
 2845      5F496E69 
 2845      7400
 2846              	.LASF66:
 2847 0132 55415254 		.ascii	"UART_txBuffer\000"
 2847      5F747842 
 2847      75666665 
 2847      7200
 2848              	.LASF61:
 2849 0140 7265744D 		.ascii	"retMode\000"
 2849      6F646500 
 2850              	.LASF35:
 2851 0148 55415254 		.ascii	"UART_GetByte\000"
 2851      5F476574 
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 80


 2851      42797465 
 2851      00
 2852              	.LASF8:
 2853 0155 756E7369 		.ascii	"unsigned int\000"
 2853      676E6564 
 2853      20696E74 
 2853      00
 2854              	.LASF59:
 2855 0162 55415254 		.ascii	"UART_ClearTxBuffer\000"
 2855      5F436C65 
 2855      61725478 
 2855      42756666 
 2855      657200
 2856              	.LASF57:
 2857 0175 55415254 		.ascii	"UART_PutCRLF\000"
 2857      5F507574 
 2857      43524C46 
 2857      00
 2858              	.LASF5:
 2859 0182 6C6F6E67 		.ascii	"long unsigned int\000"
 2859      20756E73 
 2859      69676E65 
 2859      6420696E 
 2859      7400
 2860              	.LASF50:
 2861 0194 6C6F6354 		.ascii	"locTxBufferWrite\000"
 2861      78427566 
 2861      66657257 
 2861      72697465 
 2861      00
 2862              	.LASF55:
 2863 01a5 55415254 		.ascii	"UART_PutArray\000"
 2863      5F507574 
 2863      41727261 
 2863      7900
 2864              	.LASF77:
 2865 01b3 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2865      74657243 
 2865      72697469 
 2865      63616C53 
 2865      65637469 
 2866              	.LASF37:
 2867 01ca 73697A65 		.ascii	"size\000"
 2867      00
 2868              	.LASF3:
 2869 01cf 73686F72 		.ascii	"short unsigned int\000"
 2869      7420756E 
 2869      7369676E 
 2869      65642069 
 2869      6E7400
 2870              	.LASF76:
 2871 01e2 4379496E 		.ascii	"CyIntSetVector\000"
 2871      74536574 
 2871      56656374 
 2871      6F7200
 2872              	.LASF54:
 2873 01f1 62756649 		.ascii	"bufIndex\000"
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 81


 2873      6E646578 
 2873      00
 2874              	.LASF28:
 2875 01fa 696E7453 		.ascii	"intSrc\000"
 2875      726300
 2876              	.LASF64:
 2877 0201 55415254 		.ascii	"UART_SetTxAddressMode\000"
 2877      5F536574 
 2877      54784164 
 2877      64726573 
 2877      734D6F64 
 2878              	.LASF48:
 2879 0217 55415254 		.ascii	"UART_ReadTxStatus\000"
 2879      5F526561 
 2879      64547853 
 2879      74617475 
 2879      7300
 2880              	.LASF71:
 2881 0229 55415254 		.ascii	"UART_IntClock_Start\000"
 2881      5F496E74 
 2881      436C6F63 
 2881      6B5F5374 
 2881      61727400 
 2882              	.LASF17:
 2883 023d 72656733 		.ascii	"reg32\000"
 2883      3200
 2884              	.LASF62:
 2885 0243 746D7053 		.ascii	"tmpStat\000"
 2885      74617400 
 2886              	.LASF19:
 2887 024b 73697A65 		.ascii	"sizetype\000"
 2887      74797065 
 2887      00
 2888              	.LASF42:
 2889 0254 61646472 		.ascii	"address\000"
 2889      65737300 
 2890              	.LASF41:
 2891 025c 55415254 		.ascii	"UART_SetRxAddress1\000"
 2891      5F536574 
 2891      52784164 
 2891      64726573 
 2891      733100
 2892              	.LASF43:
 2893 026f 55415254 		.ascii	"UART_SetRxAddress2\000"
 2893      5F536574 
 2893      52784164 
 2893      64726573 
 2893      733200
 2894              	.LASF34:
 2895 0282 72785374 		.ascii	"rxStatus\000"
 2895      61747573 
 2895      00
 2896              	.LASF72:
 2897 028b 55415254 		.ascii	"UART_IntClock_Stop\000"
 2897      5F496E74 
 2897      436C6F63 
 2897      6B5F5374 
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 82


 2897      6F7000
 2898              	.LASF69:
 2899 029e 4379496E 		.ascii	"CyIntSetPriority\000"
 2899      74536574 
 2899      5072696F 
 2899      72697479 
 2899      00
 2900              	.LASF74:
 2901 02af 47656E65 		.ascii	"Generated_Source\\PSoC5\\UART.c\000"
 2901      72617465 
 2901      645F536F 
 2901      75726365 
 2901      5C50536F 
 2902              	.LASF58:
 2903 02cd 55415254 		.ascii	"UART_GetTxBufferSize\000"
 2903      5F476574 
 2903      54784275 
 2903      66666572 
 2903      53697A65 
 2904              	.LASF16:
 2905 02e2 72656738 		.ascii	"reg8\000"
 2905      00
 2906              	.LASF39:
 2907 02e7 55415254 		.ascii	"UART_SetRxAddressMode\000"
 2907      5F536574 
 2907      52784164 
 2907      64726573 
 2907      734D6F64 
 2908              	.LASF1:
 2909 02fd 756E7369 		.ascii	"unsigned char\000"
 2909      676E6564 
 2909      20636861 
 2909      7200
 2910              	.LASF45:
 2911 030b 55415254 		.ascii	"UART_WriteTxData\000"
 2911      5F577269 
 2911      74655478 
 2911      44617461 
 2911      00
 2912              	.LASF2:
 2913 031c 73686F72 		.ascii	"short int\000"
 2913      7420696E 
 2913      7400
 2914              	.LASF60:
 2915 0326 55415254 		.ascii	"UART_SendBreak\000"
 2915      5F53656E 
 2915      64427265 
 2915      616B00
 2916              	.LASF56:
 2917 0335 62797465 		.ascii	"byteCount\000"
 2917      436F756E 
 2917      7400
 2918              	.LASF29:
 2919 033f 72784461 		.ascii	"rxData\000"
 2919      746100
 2920              	.LASF21:
 2921 0346 55415254 		.ascii	"UART_Enable\000"
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 83


 2921      5F456E61 
 2921      626C6500 
 2922              	.LASF31:
 2923 0352 55415254 		.ascii	"UART_ReadRxStatus\000"
 2923      5F526561 
 2923      64527853 
 2923      74617475 
 2923      7300
 2924              	.LASF15:
 2925 0364 63686172 		.ascii	"char\000"
 2925      00
 2926              	.LASF75:
 2927 0369 433A5C55 		.ascii	"C:\\Users\\miker\\Documents\\My Libraries\\Code_Rep"
 2927      73657273 
 2927      5C6D696B 
 2927      65725C44 
 2927      6F63756D 
 2928 0397 6F5C5053 		.ascii	"o\\PSoC_Grbl\\PSoC_Grbl.cydsn\000"
 2928      6F435F47 
 2928      72626C5C 
 2928      50536F43 
 2928      5F477262 
 2929              	.LASF18:
 2930 03b3 63796973 		.ascii	"cyisraddress\000"
 2930      72616464 
 2930      72657373 
 2930      00
 2931              	.LASF14:
 2932 03c0 63686172 		.ascii	"char8\000"
 2932      3800
 2933              	.LASF26:
 2934 03c6 55415254 		.ascii	"UART_SetRxInterruptMode\000"
 2934      5F536574 
 2934      5278496E 
 2934      74657272 
 2934      7570744D 
 2935              	.LASF33:
 2936 03de 55415254 		.ascii	"UART_GetChar\000"
 2936      5F476574 
 2936      43686172 
 2936      00
 2937              	.LASF24:
 2938 03eb 656E6162 		.ascii	"enableInterrupts\000"
 2938      6C65496E 
 2938      74657272 
 2938      75707473 
 2938      00
 2939              	.LASF65:
 2940 03fc 55415254 		.ascii	"UART_initVar\000"
 2940      5F696E69 
 2940      74566172 
 2940      00
 2941              	.LASF36:
 2942 0409 55415254 		.ascii	"UART_GetRxBufferSize\000"
 2942      5F476574 
 2942      52784275 
 2942      66666572 
ARM GAS  C:\Users\miker\AppData\Local\Temp\cc50rwpb.s 			page 84


 2942      53697A65 
 2943              	.LASF32:
 2944 041e 73746174 		.ascii	"status\000"
 2944      757300
 2945              	.LASF73:
 2946 0425 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2946      4320342E 
 2946      392E3320 
 2946      32303135 
 2946      30333033 
 2947 0458 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 2947      20726576 
 2947      6973696F 
 2947      6E203232 
 2947      31323230 
 2948 048b 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2948      66756E63 
 2948      74696F6E 
 2948      2D736563 
 2948      74696F6E 
 2949              	.LASF23:
 2950 04b3 55415254 		.ascii	"UART_Stop\000"
 2950      5F53746F 
 2950      7000
 2951              	.LASF12:
 2952 04bd 666C6F61 		.ascii	"float\000"
 2952      7400
 2953              	.LASF52:
 2954 04c3 55415254 		.ascii	"UART_PutString\000"
 2954      5F507574 
 2954      53747269 
 2954      6E6700
 2955              	.LASF25:
 2956 04d2 55415254 		.ascii	"UART_WriteControlRegister\000"
 2956      5F577269 
 2956      7465436F 
 2956      6E74726F 
 2956      6C526567 
 2957              	.LASF38:
 2958 04ec 55415254 		.ascii	"UART_ClearRxBuffer\000"
 2958      5F436C65 
 2958      61725278 
 2958      42756666 
 2958      657200
 2959              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
