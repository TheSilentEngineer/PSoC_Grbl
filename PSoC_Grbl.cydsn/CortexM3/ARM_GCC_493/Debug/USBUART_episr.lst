ARM GAS  C:\Users\miker\AppData\Local\Temp\ccYmYQkI.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"USBUART_episr.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.USBUART_EP_1_ISR,"ax",%progbits
  19              		.align	2
  20              		.global	USBUART_EP_1_ISR
  21              		.thumb
  22              		.thumb_func
  23              		.type	USBUART_EP_1_ISR, %function
  24              	USBUART_EP_1_ISR:
  25              	.LFB0:
  26              		.file 1 "Generated_Source\\PSoC5\\USBUART_episr.c"
   1:Generated_Source\PSoC5/USBUART_episr.c **** /***************************************************************************//**
   2:Generated_Source\PSoC5/USBUART_episr.c **** * \file USBUART_episr.c
   3:Generated_Source\PSoC5/USBUART_episr.c **** * \version 3.10
   4:Generated_Source\PSoC5/USBUART_episr.c **** *
   5:Generated_Source\PSoC5/USBUART_episr.c **** * \brief
   6:Generated_Source\PSoC5/USBUART_episr.c **** *  This file contains the Data endpoint Interrupt Service Routines.
   7:Generated_Source\PSoC5/USBUART_episr.c **** *
   8:Generated_Source\PSoC5/USBUART_episr.c **** ********************************************************************************
   9:Generated_Source\PSoC5/USBUART_episr.c **** * \copyright
  10:Generated_Source\PSoC5/USBUART_episr.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC5/USBUART_episr.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC5/USBUART_episr.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC5/USBUART_episr.c **** * the software package with which this file was provided.
  14:Generated_Source\PSoC5/USBUART_episr.c **** *******************************************************************************/
  15:Generated_Source\PSoC5/USBUART_episr.c **** 
  16:Generated_Source\PSoC5/USBUART_episr.c **** #include "USBUART_pvt.h"
  17:Generated_Source\PSoC5/USBUART_episr.c **** #include "USBUART_cydmac.h"
  18:Generated_Source\PSoC5/USBUART_episr.c **** #include "cyapicallbacks.h"
  19:Generated_Source\PSoC5/USBUART_episr.c **** 
  20:Generated_Source\PSoC5/USBUART_episr.c **** 
  21:Generated_Source\PSoC5/USBUART_episr.c **** /***************************************
  22:Generated_Source\PSoC5/USBUART_episr.c **** * Custom Declarations
  23:Generated_Source\PSoC5/USBUART_episr.c **** ***************************************/
  24:Generated_Source\PSoC5/USBUART_episr.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  25:Generated_Source\PSoC5/USBUART_episr.c **** extern void USBUART_RX_ISR(void);
  26:Generated_Source\PSoC5/USBUART_episr.c **** /* `#END` */
  27:Generated_Source\PSoC5/USBUART_episr.c **** 
  28:Generated_Source\PSoC5/USBUART_episr.c **** 
  29:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP1_ISR_ACTIVE)
  30:Generated_Source\PSoC5/USBUART_episr.c ****     /******************************************************************************
  31:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_1_ISR
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccYmYQkI.s 			page 2


  32:Generated_Source\PSoC5/USBUART_episr.c ****     ***************************************************************************//**
  33:Generated_Source\PSoC5/USBUART_episr.c ****     *
  34:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 1 Interrupt Service Routine
  35:Generated_Source\PSoC5/USBUART_episr.c ****     *
  36:Generated_Source\PSoC5/USBUART_episr.c ****     ******************************************************************************/
  37:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_1_ISR)
  38:Generated_Source\PSoC5/USBUART_episr.c ****     {
  27              		.loc 1 38 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  39:Generated_Source\PSoC5/USBUART_episr.c **** 
  40:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_1_ISR_ENTRY_CALLBACK
  41:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_1_ISR_EntryCallback();
  42:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_1_ISR_ENTRY_CALLBACK) */
  43:Generated_Source\PSoC5/USBUART_episr.c **** 
  44:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP1_USER_CODE` Place your code here */
  45:Generated_Source\PSoC5/USBUART_episr.c **** 
  46:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
  47:Generated_Source\PSoC5/USBUART_episr.c **** 
  48:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
  49:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
  50:Generated_Source\PSoC5/USBUART_episr.c ****         {
  51:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
  52:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
  53:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
  54:Generated_Source\PSoC5/USBUART_episr.c ****     
  55:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP1_INTR);
  32              		.loc 1 55 0
  33 0000 0122     		movs	r2, #1
  34 0002 094B     		ldr	r3, .L3
  35 0004 1A70     		strb	r2, [r3]
  56:Generated_Source\PSoC5/USBUART_episr.c ****             
  57:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
  58:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
  59:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
  60:Generated_Source\PSoC5/USBUART_episr.c ****         */
  61:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
  62:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP1].addr & USBUART_DIR_IN))
  63:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO) */
  64:Generated_Source\PSoC5/USBUART_episr.c ****         {
  65:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
  66:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP1].epCr0;
  36              		.loc 1 66 0
  37 0006 0F3B     		subs	r3, r3, #15
  38 0008 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
  67:Generated_Source\PSoC5/USBUART_episr.c ****             
  68:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
  69:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP1) != USBUART_EP_TYPE_ISOC)
  39              		.loc 1 69 0
  40 000a 084B     		ldr	r3, .L3+4
  41 000c 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
  42 000e 03F00303 		and	r3, r3, #3
  43 0012 9342     		cmp	r3, r2
  44 0014 04D0     		beq	.L2
  70:Generated_Source\PSoC5/USBUART_episr.c ****             {
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccYmYQkI.s 			page 3


  71:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP1].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
  45              		.loc 1 71 0
  46 0016 054A     		ldr	r2, .L3+4
  47 0018 D37B     		ldrb	r3, [r2, #15]	@ zero_extendqisi2
  48 001a 83F08003 		eor	r3, r3, #128
  49 001e D373     		strb	r3, [r2, #15]
  50              	.L2:
  72:Generated_Source\PSoC5/USBUART_episr.c ****             }
  73:Generated_Source\PSoC5/USBUART_episr.c **** 
  74:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
  75:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
  76:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
  77:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
  78:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
  79:Generated_Source\PSoC5/USBUART_episr.c ****             */
  80:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP1].apiEpState = USBUART_EVENT_PENDING;
  51              		.loc 1 80 0
  52 0020 0122     		movs	r2, #1
  53 0022 024B     		ldr	r3, .L3+4
  54 0024 5A73     		strb	r2, [r3, #13]
  55 0026 7047     		bx	lr
  56              	.L4:
  57              		.align	2
  58              	.L3:
  59 0028 0B600040 		.word	1073766411
  60 002c 00000000 		.word	USBUART_EP
  61              		.cfi_endproc
  62              	.LFE0:
  63              		.size	USBUART_EP_1_ISR, .-USBUART_EP_1_ISR
  64              		.section	.text.USBUART_EP_2_ISR,"ax",%progbits
  65              		.align	2
  66              		.global	USBUART_EP_2_ISR
  67              		.thumb
  68              		.thumb_func
  69              		.type	USBUART_EP_2_ISR, %function
  70              	USBUART_EP_2_ISR:
  71              	.LFB1:
  81:Generated_Source\PSoC5/USBUART_episr.c ****         }
  82:Generated_Source\PSoC5/USBUART_episr.c **** 
  83:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
  84:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
  85:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
  86:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP1)
  87:Generated_Source\PSoC5/USBUART_episr.c ****             {
  88:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
  89:Generated_Source\PSoC5/USBUART_episr.c ****             }
  90:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
  91:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
  92:Generated_Source\PSoC5/USBUART_episr.c ****     
  93:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP1_END_USER_CODE` Place your code here */
  94:Generated_Source\PSoC5/USBUART_episr.c **** 
  95:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
  96:Generated_Source\PSoC5/USBUART_episr.c **** 
  97:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_1_ISR_EXIT_CALLBACK
  98:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_1_ISR_ExitCallback();
  99:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_1_ISR_EXIT_CALLBACK) */
 100:Generated_Source\PSoC5/USBUART_episr.c **** 
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccYmYQkI.s 			page 4


 101:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 102:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 103:Generated_Source\PSoC5/USBUART_episr.c ****         
 104:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 105:Generated_Source\PSoC5/USBUART_episr.c ****         }
 106:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 107:Generated_Source\PSoC5/USBUART_episr.c ****     }
 108:Generated_Source\PSoC5/USBUART_episr.c **** 
 109:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP1_ISR_ACTIVE) */
 110:Generated_Source\PSoC5/USBUART_episr.c **** 
 111:Generated_Source\PSoC5/USBUART_episr.c **** 
 112:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP2_ISR_ACTIVE)
 113:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 114:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_2_ISR
 115:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 116:Generated_Source\PSoC5/USBUART_episr.c ****     *
 117:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 2 Interrupt Service Routine.
 118:Generated_Source\PSoC5/USBUART_episr.c ****     *
 119:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 120:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_2_ISR)
 121:Generated_Source\PSoC5/USBUART_episr.c ****     {
  72              		.loc 1 121 0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		@ link register save eliminated.
 122:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_2_ISR_ENTRY_CALLBACK
 123:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_2_ISR_EntryCallback();
 124:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_2_ISR_ENTRY_CALLBACK) */
 125:Generated_Source\PSoC5/USBUART_episr.c **** 
 126:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP2_USER_CODE` Place your code here */
 127:Generated_Source\PSoC5/USBUART_episr.c **** 
 128:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 129:Generated_Source\PSoC5/USBUART_episr.c **** 
 130:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 131:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 132:Generated_Source\PSoC5/USBUART_episr.c ****         {
 133:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 134:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 135:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 136:Generated_Source\PSoC5/USBUART_episr.c **** 
 137:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP2_INTR);
  77              		.loc 1 137 0
  78 0000 0222     		movs	r2, #2
  79 0002 0A4B     		ldr	r3, .L7
  80 0004 1A70     		strb	r2, [r3]
 138:Generated_Source\PSoC5/USBUART_episr.c **** 
 139:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 140:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 141:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 142:Generated_Source\PSoC5/USBUART_episr.c ****         */
 143:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 144:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP2].addr & USBUART_DIR_IN))
 145:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO) */
 146:Generated_Source\PSoC5/USBUART_episr.c ****         {            
 147:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 148:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP2].epCr0;
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccYmYQkI.s 			page 5


  81              		.loc 1 148 0
  82 0006 0F3B     		subs	r3, r3, #15
  83 0008 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 149:Generated_Source\PSoC5/USBUART_episr.c ****             
 150:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 151:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP2) != USBUART_EP_TYPE_ISOC)
  84              		.loc 1 151 0
  85 000c 084B     		ldr	r3, .L7+4
  86 000e 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
  87 0010 03F00303 		and	r3, r3, #3
  88 0014 012B     		cmp	r3, #1
  89 0016 04D0     		beq	.L6
 152:Generated_Source\PSoC5/USBUART_episr.c ****             {
 153:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP2].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
  90              		.loc 1 153 0
  91 0018 054A     		ldr	r2, .L7+4
  92 001a D37E     		ldrb	r3, [r2, #27]	@ zero_extendqisi2
  93 001c 83F08003 		eor	r3, r3, #128
  94 0020 D376     		strb	r3, [r2, #27]
  95              	.L6:
 154:Generated_Source\PSoC5/USBUART_episr.c ****             }
 155:Generated_Source\PSoC5/USBUART_episr.c **** 
 156:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 157:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 158:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 159:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 160:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 161:Generated_Source\PSoC5/USBUART_episr.c ****             */
 162:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP2].apiEpState = USBUART_EVENT_PENDING;
  96              		.loc 1 162 0
  97 0022 0122     		movs	r2, #1
  98 0024 024B     		ldr	r3, .L7+4
  99 0026 5A76     		strb	r2, [r3, #25]
 100 0028 7047     		bx	lr
 101              	.L8:
 102 002a 00BF     		.align	2
 103              	.L7:
 104 002c 0B600040 		.word	1073766411
 105 0030 00000000 		.word	USBUART_EP
 106              		.cfi_endproc
 107              	.LFE1:
 108              		.size	USBUART_EP_2_ISR, .-USBUART_EP_2_ISR
 109              		.section	.text.USBUART_EP_3_ISR,"ax",%progbits
 110              		.align	2
 111              		.global	USBUART_EP_3_ISR
 112              		.thumb
 113              		.thumb_func
 114              		.type	USBUART_EP_3_ISR, %function
 115              	USBUART_EP_3_ISR:
 116              	.LFB2:
 163:Generated_Source\PSoC5/USBUART_episr.c ****         }
 164:Generated_Source\PSoC5/USBUART_episr.c **** 
 165:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 166:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 167:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 168:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP2)
 169:Generated_Source\PSoC5/USBUART_episr.c ****             {
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccYmYQkI.s 			page 6


 170:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 171:Generated_Source\PSoC5/USBUART_episr.c ****             }
 172:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 173:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */        
 174:Generated_Source\PSoC5/USBUART_episr.c ****     
 175:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP2_END_USER_CODE` Place your code here */
 176:Generated_Source\PSoC5/USBUART_episr.c **** 
 177:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 178:Generated_Source\PSoC5/USBUART_episr.c **** 
 179:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_2_ISR_EXIT_CALLBACK
 180:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_2_ISR_ExitCallback();
 181:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_2_ISR_EXIT_CALLBACK) */
 182:Generated_Source\PSoC5/USBUART_episr.c **** 
 183:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 184:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 185:Generated_Source\PSoC5/USBUART_episr.c ****         
 186:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 187:Generated_Source\PSoC5/USBUART_episr.c ****         }
 188:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 189:Generated_Source\PSoC5/USBUART_episr.c ****     }
 190:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP2_ISR_ACTIVE) */
 191:Generated_Source\PSoC5/USBUART_episr.c **** 
 192:Generated_Source\PSoC5/USBUART_episr.c **** 
 193:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP3_ISR_ACTIVE)
 194:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 195:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_3_ISR
 196:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 197:Generated_Source\PSoC5/USBUART_episr.c ****     *
 198:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 3 Interrupt Service Routine.
 199:Generated_Source\PSoC5/USBUART_episr.c ****     *
 200:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 201:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_3_ISR)
 202:Generated_Source\PSoC5/USBUART_episr.c ****     {
 117              		.loc 1 202 0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121 0000 08B5     		push	{r3, lr}
 122              		.cfi_def_cfa_offset 8
 123              		.cfi_offset 3, -8
 124              		.cfi_offset 14, -4
 203:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_3_ISR_ENTRY_CALLBACK
 204:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_3_ISR_EntryCallback();
 205:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_3_ISR_ENTRY_CALLBACK) */
 206:Generated_Source\PSoC5/USBUART_episr.c **** 
 207:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP3_USER_CODE` Place your code here */
 208:Generated_Source\PSoC5/USBUART_episr.c ****     USBUART_RX_ISR();
 125              		.loc 1 208 0
 126 0002 FFF7FEFF 		bl	USBUART_RX_ISR
 127              	.LVL0:
 209:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 210:Generated_Source\PSoC5/USBUART_episr.c **** 
 211:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 212:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 213:Generated_Source\PSoC5/USBUART_episr.c ****         {
 214:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 215:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccYmYQkI.s 			page 7


 216:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 217:Generated_Source\PSoC5/USBUART_episr.c **** 
 218:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP3_INTR);    
 128              		.loc 1 218 0
 129 0006 0422     		movs	r2, #4
 130 0008 0B4B     		ldr	r3, .L12
 131 000a 1A70     		strb	r2, [r3]
 219:Generated_Source\PSoC5/USBUART_episr.c **** 
 220:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 221:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 222:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 223:Generated_Source\PSoC5/USBUART_episr.c ****         */
 224:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 225:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP3].addr & USBUART_DIR_IN))
 226:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 227:Generated_Source\PSoC5/USBUART_episr.c ****         {            
 228:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 229:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP3].epCr0;
 132              		.loc 1 229 0
 133 000c 0F3B     		subs	r3, r3, #15
 134 000e 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 230:Generated_Source\PSoC5/USBUART_episr.c **** 
 231:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 232:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP3) != USBUART_EP_TYPE_ISOC)
 135              		.loc 1 232 0
 136 0012 0A4B     		ldr	r3, .L12+4
 137 0014 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 138 0018 03F00303 		and	r3, r3, #3
 139 001c 012B     		cmp	r3, #1
 140 001e 06D0     		beq	.L10
 233:Generated_Source\PSoC5/USBUART_episr.c ****             {
 234:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP3].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 141              		.loc 1 234 0
 142 0020 064A     		ldr	r2, .L12+4
 143 0022 92F82730 		ldrb	r3, [r2, #39]	@ zero_extendqisi2
 144 0026 83F08003 		eor	r3, r3, #128
 145 002a 82F82730 		strb	r3, [r2, #39]
 146              	.L10:
 235:Generated_Source\PSoC5/USBUART_episr.c ****             }
 236:Generated_Source\PSoC5/USBUART_episr.c **** 
 237:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 238:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 239:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 240:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 241:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 242:Generated_Source\PSoC5/USBUART_episr.c ****             */
 243:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP3].apiEpState = USBUART_EVENT_PENDING;
 147              		.loc 1 243 0
 148 002e 0122     		movs	r2, #1
 149 0030 024B     		ldr	r3, .L12+4
 150 0032 83F82520 		strb	r2, [r3, #37]
 151 0036 08BD     		pop	{r3, pc}
 152              	.L13:
 153              		.align	2
 154              	.L12:
 155 0038 0B600040 		.word	1073766411
 156 003c 00000000 		.word	USBUART_EP
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccYmYQkI.s 			page 8


 157              		.cfi_endproc
 158              	.LFE2:
 159              		.size	USBUART_EP_3_ISR, .-USBUART_EP_3_ISR
 160              		.section	.text.USBUART_SOF_ISR,"ax",%progbits
 161              		.align	2
 162              		.global	USBUART_SOF_ISR
 163              		.thumb
 164              		.thumb_func
 165              		.type	USBUART_SOF_ISR, %function
 166              	USBUART_SOF_ISR:
 167              	.LFB3:
 244:Generated_Source\PSoC5/USBUART_episr.c ****         }
 245:Generated_Source\PSoC5/USBUART_episr.c **** 
 246:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 247:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 248:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 249:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP3)
 250:Generated_Source\PSoC5/USBUART_episr.c ****             {
 251:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 252:Generated_Source\PSoC5/USBUART_episr.c ****             }
 253:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 254:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */        
 255:Generated_Source\PSoC5/USBUART_episr.c **** 
 256:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP3_END_USER_CODE` Place your code here */
 257:Generated_Source\PSoC5/USBUART_episr.c **** 
 258:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 259:Generated_Source\PSoC5/USBUART_episr.c **** 
 260:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_3_ISR_EXIT_CALLBACK
 261:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_3_ISR_ExitCallback();
 262:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_3_ISR_EXIT_CALLBACK) */
 263:Generated_Source\PSoC5/USBUART_episr.c **** 
 264:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 265:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 266:Generated_Source\PSoC5/USBUART_episr.c ****         
 267:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 268:Generated_Source\PSoC5/USBUART_episr.c ****         }
 269:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 270:Generated_Source\PSoC5/USBUART_episr.c ****     }
 271:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP3_ISR_ACTIVE) */
 272:Generated_Source\PSoC5/USBUART_episr.c **** 
 273:Generated_Source\PSoC5/USBUART_episr.c **** 
 274:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP4_ISR_ACTIVE)
 275:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 276:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_4_ISR
 277:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 278:Generated_Source\PSoC5/USBUART_episr.c ****     *
 279:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 4 Interrupt Service Routine.
 280:Generated_Source\PSoC5/USBUART_episr.c ****     *
 281:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 282:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_4_ISR)
 283:Generated_Source\PSoC5/USBUART_episr.c ****     {
 284:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_4_ISR_ENTRY_CALLBACK
 285:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_4_ISR_EntryCallback();
 286:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_4_ISR_ENTRY_CALLBACK) */
 287:Generated_Source\PSoC5/USBUART_episr.c **** 
 288:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP4_USER_CODE` Place your code here */
 289:Generated_Source\PSoC5/USBUART_episr.c **** 
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccYmYQkI.s 			page 9


 290:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 291:Generated_Source\PSoC5/USBUART_episr.c **** 
 292:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 293:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 294:Generated_Source\PSoC5/USBUART_episr.c ****         {
 295:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 296:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 297:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 298:Generated_Source\PSoC5/USBUART_episr.c **** 
 299:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP4_INTR);
 300:Generated_Source\PSoC5/USBUART_episr.c ****         
 301:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 302:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 303:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 304:Generated_Source\PSoC5/USBUART_episr.c ****         */
 305:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 306:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP4].addr & USBUART_DIR_IN))
 307:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 308:Generated_Source\PSoC5/USBUART_episr.c ****         {
 309:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 310:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP4].epCr0;
 311:Generated_Source\PSoC5/USBUART_episr.c **** 
 312:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 313:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP4) != USBUART_EP_TYPE_ISOC)
 314:Generated_Source\PSoC5/USBUART_episr.c ****             {
 315:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP4].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 316:Generated_Source\PSoC5/USBUART_episr.c ****             }
 317:Generated_Source\PSoC5/USBUART_episr.c **** 
 318:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 319:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 320:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 321:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 322:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 323:Generated_Source\PSoC5/USBUART_episr.c ****             */
 324:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP4].apiEpState = USBUART_EVENT_PENDING;
 325:Generated_Source\PSoC5/USBUART_episr.c ****         }
 326:Generated_Source\PSoC5/USBUART_episr.c **** 
 327:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 328:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 329:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 330:Generated_Source\PSoC5/USBUART_episr.c ****             if(USBUART_midi_out_ep == USBUART_EP4)
 331:Generated_Source\PSoC5/USBUART_episr.c ****             {
 332:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 333:Generated_Source\PSoC5/USBUART_episr.c ****             }
 334:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 335:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */        
 336:Generated_Source\PSoC5/USBUART_episr.c **** 
 337:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP4_END_USER_CODE` Place your code here */
 338:Generated_Source\PSoC5/USBUART_episr.c **** 
 339:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 340:Generated_Source\PSoC5/USBUART_episr.c **** 
 341:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_4_ISR_EXIT_CALLBACK
 342:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_4_ISR_ExitCallback();
 343:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_4_ISR_EXIT_CALLBACK) */
 344:Generated_Source\PSoC5/USBUART_episr.c **** 
 345:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 346:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccYmYQkI.s 			page 10


 347:Generated_Source\PSoC5/USBUART_episr.c ****         
 348:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 349:Generated_Source\PSoC5/USBUART_episr.c ****         }
 350:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 351:Generated_Source\PSoC5/USBUART_episr.c ****     }
 352:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP4_ISR_ACTIVE) */
 353:Generated_Source\PSoC5/USBUART_episr.c **** 
 354:Generated_Source\PSoC5/USBUART_episr.c **** 
 355:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP5_ISR_ACTIVE)
 356:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 357:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_5_ISR
 358:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 359:Generated_Source\PSoC5/USBUART_episr.c ****     *
 360:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 5 Interrupt Service Routine
 361:Generated_Source\PSoC5/USBUART_episr.c ****     *
 362:Generated_Source\PSoC5/USBUART_episr.c ****     *
 363:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 364:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_5_ISR)
 365:Generated_Source\PSoC5/USBUART_episr.c ****     {
 366:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_5_ISR_ENTRY_CALLBACK
 367:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_5_ISR_EntryCallback();
 368:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_5_ISR_ENTRY_CALLBACK) */
 369:Generated_Source\PSoC5/USBUART_episr.c **** 
 370:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP5_USER_CODE` Place your code here */
 371:Generated_Source\PSoC5/USBUART_episr.c **** 
 372:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 373:Generated_Source\PSoC5/USBUART_episr.c **** 
 374:Generated_Source\PSoC5/USBUART_episr.c ****     #if (defined(USBUART_ENABLE_MIDI_STREAMING) && !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && \
 375:Generated_Source\PSoC5/USBUART_episr.c ****                  USBUART_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 376:Generated_Source\PSoC5/USBUART_episr.c ****         {
 377:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 378:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 379:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 380:Generated_Source\PSoC5/USBUART_episr.c **** 
 381:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP5_INTR);
 382:Generated_Source\PSoC5/USBUART_episr.c ****     
 383:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 384:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 385:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 386:Generated_Source\PSoC5/USBUART_episr.c ****         */
 387:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 388:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP5].addr & USBUART_DIR_IN))
 389:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 390:Generated_Source\PSoC5/USBUART_episr.c ****         {            
 391:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 392:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP5].epCr0;
 393:Generated_Source\PSoC5/USBUART_episr.c **** 
 394:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 395:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP5) != USBUART_EP_TYPE_ISOC)
 396:Generated_Source\PSoC5/USBUART_episr.c ****             {
 397:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP5].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 398:Generated_Source\PSoC5/USBUART_episr.c ****             }
 399:Generated_Source\PSoC5/USBUART_episr.c **** 
 400:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 401:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 402:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 403:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccYmYQkI.s 			page 11


 404:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 405:Generated_Source\PSoC5/USBUART_episr.c ****             */
 406:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP5].apiEpState = USBUART_EVENT_PENDING;
 407:Generated_Source\PSoC5/USBUART_episr.c ****         }
 408:Generated_Source\PSoC5/USBUART_episr.c **** 
 409:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))        
 410:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 411:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 412:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP5)
 413:Generated_Source\PSoC5/USBUART_episr.c ****             {
 414:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 415:Generated_Source\PSoC5/USBUART_episr.c ****             }
 416:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 417:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
 418:Generated_Source\PSoC5/USBUART_episr.c **** 
 419:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP5_END_USER_CODE` Place your code here */
 420:Generated_Source\PSoC5/USBUART_episr.c **** 
 421:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 422:Generated_Source\PSoC5/USBUART_episr.c **** 
 423:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_5_ISR_EXIT_CALLBACK
 424:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_5_ISR_ExitCallback();
 425:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_5_ISR_EXIT_CALLBACK) */
 426:Generated_Source\PSoC5/USBUART_episr.c **** 
 427:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 428:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 429:Generated_Source\PSoC5/USBUART_episr.c ****         
 430:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 431:Generated_Source\PSoC5/USBUART_episr.c ****         }
 432:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 433:Generated_Source\PSoC5/USBUART_episr.c ****     }
 434:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP5_ISR_ACTIVE) */
 435:Generated_Source\PSoC5/USBUART_episr.c **** 
 436:Generated_Source\PSoC5/USBUART_episr.c **** 
 437:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP6_ISR_ACTIVE)
 438:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 439:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_6_ISR
 440:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 441:Generated_Source\PSoC5/USBUART_episr.c ****     *
 442:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 6 Interrupt Service Routine.
 443:Generated_Source\PSoC5/USBUART_episr.c ****     *
 444:Generated_Source\PSoC5/USBUART_episr.c ****     *
 445:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 446:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_6_ISR)
 447:Generated_Source\PSoC5/USBUART_episr.c ****     {
 448:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_6_ISR_ENTRY_CALLBACK
 449:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_6_ISR_EntryCallback();
 450:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_6_ISR_ENTRY_CALLBACK) */
 451:Generated_Source\PSoC5/USBUART_episr.c **** 
 452:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP6_USER_CODE` Place your code here */
 453:Generated_Source\PSoC5/USBUART_episr.c **** 
 454:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 455:Generated_Source\PSoC5/USBUART_episr.c **** 
 456:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 457:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 458:Generated_Source\PSoC5/USBUART_episr.c ****         {
 459:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 460:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccYmYQkI.s 			page 12


 461:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 462:Generated_Source\PSoC5/USBUART_episr.c **** 
 463:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP6_INTR);
 464:Generated_Source\PSoC5/USBUART_episr.c ****         
 465:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 466:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 467:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 468:Generated_Source\PSoC5/USBUART_episr.c ****         */
 469:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 470:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP6].addr & USBUART_DIR_IN))
 471:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 472:Generated_Source\PSoC5/USBUART_episr.c ****         {
 473:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 474:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP6].epCr0;
 475:Generated_Source\PSoC5/USBUART_episr.c **** 
 476:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 477:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP6) != USBUART_EP_TYPE_ISOC)
 478:Generated_Source\PSoC5/USBUART_episr.c ****             {
 479:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP6].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 480:Generated_Source\PSoC5/USBUART_episr.c ****             }
 481:Generated_Source\PSoC5/USBUART_episr.c ****             
 482:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 483:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 484:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 485:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 486:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 487:Generated_Source\PSoC5/USBUART_episr.c ****             */
 488:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP6].apiEpState = USBUART_EVENT_PENDING;
 489:Generated_Source\PSoC5/USBUART_episr.c ****         }
 490:Generated_Source\PSoC5/USBUART_episr.c **** 
 491:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 492:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 493:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 494:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP6)
 495:Generated_Source\PSoC5/USBUART_episr.c ****             {
 496:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 497:Generated_Source\PSoC5/USBUART_episr.c ****             }
 498:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 499:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
 500:Generated_Source\PSoC5/USBUART_episr.c **** 
 501:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP6_END_USER_CODE` Place your code here */
 502:Generated_Source\PSoC5/USBUART_episr.c **** 
 503:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 504:Generated_Source\PSoC5/USBUART_episr.c **** 
 505:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_6_ISR_EXIT_CALLBACK
 506:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_6_ISR_ExitCallback();
 507:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_6_ISR_EXIT_CALLBACK) */
 508:Generated_Source\PSoC5/USBUART_episr.c **** 
 509:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 510:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 511:Generated_Source\PSoC5/USBUART_episr.c ****         
 512:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 513:Generated_Source\PSoC5/USBUART_episr.c ****         }
 514:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 515:Generated_Source\PSoC5/USBUART_episr.c ****     }
 516:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP6_ISR_ACTIVE) */
 517:Generated_Source\PSoC5/USBUART_episr.c **** 
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccYmYQkI.s 			page 13


 518:Generated_Source\PSoC5/USBUART_episr.c **** 
 519:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP7_ISR_ACTIVE)
 520:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 521:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_7_ISR
 522:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 523:Generated_Source\PSoC5/USBUART_episr.c ****     *
 524:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 7 Interrupt Service Routine.
 525:Generated_Source\PSoC5/USBUART_episr.c ****     *
 526:Generated_Source\PSoC5/USBUART_episr.c ****     *
 527:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 528:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_7_ISR)
 529:Generated_Source\PSoC5/USBUART_episr.c ****     {
 530:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_7_ISR_ENTRY_CALLBACK
 531:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_7_ISR_EntryCallback();
 532:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_7_ISR_ENTRY_CALLBACK) */
 533:Generated_Source\PSoC5/USBUART_episr.c **** 
 534:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP7_USER_CODE` Place your code here */
 535:Generated_Source\PSoC5/USBUART_episr.c **** 
 536:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 537:Generated_Source\PSoC5/USBUART_episr.c **** 
 538:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 539:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 540:Generated_Source\PSoC5/USBUART_episr.c ****         {
 541:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 542:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 543:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 544:Generated_Source\PSoC5/USBUART_episr.c ****     
 545:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP7_INTR);
 546:Generated_Source\PSoC5/USBUART_episr.c ****         
 547:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 548:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 549:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 550:Generated_Source\PSoC5/USBUART_episr.c ****         */
 551:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 552:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP7].addr & USBUART_DIR_IN))
 553:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 554:Generated_Source\PSoC5/USBUART_episr.c ****         {           
 555:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 556:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP7].epCr0;
 557:Generated_Source\PSoC5/USBUART_episr.c **** 
 558:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 559:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP7) != USBUART_EP_TYPE_ISOC)
 560:Generated_Source\PSoC5/USBUART_episr.c ****             {
 561:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP7].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 562:Generated_Source\PSoC5/USBUART_episr.c ****             }
 563:Generated_Source\PSoC5/USBUART_episr.c ****             
 564:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 565:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 566:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 567:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 568:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 569:Generated_Source\PSoC5/USBUART_episr.c ****             */
 570:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP7].apiEpState = USBUART_EVENT_PENDING;
 571:Generated_Source\PSoC5/USBUART_episr.c ****         }
 572:Generated_Source\PSoC5/USBUART_episr.c **** 
 573:Generated_Source\PSoC5/USBUART_episr.c **** 
 574:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccYmYQkI.s 			page 14


 575:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 576:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 577:Generated_Source\PSoC5/USBUART_episr.c ****             if(USBUART_midi_out_ep == USBUART_EP7)
 578:Generated_Source\PSoC5/USBUART_episr.c ****             {
 579:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 580:Generated_Source\PSoC5/USBUART_episr.c ****             }
 581:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 582:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
 583:Generated_Source\PSoC5/USBUART_episr.c **** 
 584:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP7_END_USER_CODE` Place your code here */
 585:Generated_Source\PSoC5/USBUART_episr.c **** 
 586:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 587:Generated_Source\PSoC5/USBUART_episr.c **** 
 588:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_7_ISR_EXIT_CALLBACK
 589:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_7_ISR_ExitCallback();
 590:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_7_ISR_EXIT_CALLBACK) */
 591:Generated_Source\PSoC5/USBUART_episr.c **** 
 592:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 593:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 594:Generated_Source\PSoC5/USBUART_episr.c ****         
 595:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 596:Generated_Source\PSoC5/USBUART_episr.c ****         }
 597:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 598:Generated_Source\PSoC5/USBUART_episr.c ****     }
 599:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP7_ISR_ACTIVE) */
 600:Generated_Source\PSoC5/USBUART_episr.c **** 
 601:Generated_Source\PSoC5/USBUART_episr.c **** 
 602:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP8_ISR_ACTIVE)
 603:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 604:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_8_ISR
 605:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 606:Generated_Source\PSoC5/USBUART_episr.c ****     *
 607:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 8 Interrupt Service Routine
 608:Generated_Source\PSoC5/USBUART_episr.c ****     *
 609:Generated_Source\PSoC5/USBUART_episr.c ****     *
 610:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 611:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_8_ISR)
 612:Generated_Source\PSoC5/USBUART_episr.c ****     {
 613:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_8_ISR_ENTRY_CALLBACK
 614:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_8_ISR_EntryCallback();
 615:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_8_ISR_ENTRY_CALLBACK) */
 616:Generated_Source\PSoC5/USBUART_episr.c **** 
 617:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP8_USER_CODE` Place your code here */
 618:Generated_Source\PSoC5/USBUART_episr.c **** 
 619:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 620:Generated_Source\PSoC5/USBUART_episr.c **** 
 621:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 622:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 623:Generated_Source\PSoC5/USBUART_episr.c ****         {
 624:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 625:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 626:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 627:Generated_Source\PSoC5/USBUART_episr.c **** 
 628:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP8_INTR);
 629:Generated_Source\PSoC5/USBUART_episr.c ****         
 630:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 631:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccYmYQkI.s 			page 15


 632:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 633:Generated_Source\PSoC5/USBUART_episr.c ****         */
 634:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 635:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP8].addr & USBUART_DIR_IN))
 636:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 637:Generated_Source\PSoC5/USBUART_episr.c ****         {
 638:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 639:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP8].epCr0;
 640:Generated_Source\PSoC5/USBUART_episr.c **** 
 641:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 642:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP8) != USBUART_EP_TYPE_ISOC)
 643:Generated_Source\PSoC5/USBUART_episr.c ****             {
 644:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP8].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 645:Generated_Source\PSoC5/USBUART_episr.c ****             }
 646:Generated_Source\PSoC5/USBUART_episr.c **** 
 647:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 648:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 649:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 650:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 651:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 652:Generated_Source\PSoC5/USBUART_episr.c ****             */
 653:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP8].apiEpState = USBUART_EVENT_PENDING;
 654:Generated_Source\PSoC5/USBUART_episr.c ****         }
 655:Generated_Source\PSoC5/USBUART_episr.c **** 
 656:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 657:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 658:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 659:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP8)
 660:Generated_Source\PSoC5/USBUART_episr.c ****             {
 661:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 662:Generated_Source\PSoC5/USBUART_episr.c ****             }
 663:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 664:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
 665:Generated_Source\PSoC5/USBUART_episr.c **** 
 666:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP8_END_USER_CODE` Place your code here */
 667:Generated_Source\PSoC5/USBUART_episr.c **** 
 668:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 669:Generated_Source\PSoC5/USBUART_episr.c **** 
 670:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_8_ISR_EXIT_CALLBACK
 671:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_8_ISR_ExitCallback();
 672:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_8_ISR_EXIT_CALLBACK) */
 673:Generated_Source\PSoC5/USBUART_episr.c **** 
 674:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 675:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 676:Generated_Source\PSoC5/USBUART_episr.c ****         
 677:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 678:Generated_Source\PSoC5/USBUART_episr.c ****         }
 679:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 680:Generated_Source\PSoC5/USBUART_episr.c ****     }
 681:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP8_ISR_ACTIVE) */
 682:Generated_Source\PSoC5/USBUART_episr.c **** 
 683:Generated_Source\PSoC5/USBUART_episr.c **** 
 684:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_SOF_ISR_ACTIVE)
 685:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 686:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_SOF_ISR
 687:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 688:Generated_Source\PSoC5/USBUART_episr.c ****     *
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccYmYQkI.s 			page 16


 689:Generated_Source\PSoC5/USBUART_episr.c ****     *  Start of Frame Interrupt Service Routine.
 690:Generated_Source\PSoC5/USBUART_episr.c ****     *
 691:Generated_Source\PSoC5/USBUART_episr.c ****     *
 692:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 693:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_SOF_ISR)
 694:Generated_Source\PSoC5/USBUART_episr.c ****     {
 168              		.loc 1 694 0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172              		@ link register save eliminated.
 173 0000 7047     		bx	lr
 174              		.cfi_endproc
 175              	.LFE3:
 176              		.size	USBUART_SOF_ISR, .-USBUART_SOF_ISR
 177 0002 00BF     		.section	.text.USBUART_BUS_RESET_ISR,"ax",%progbits
 178              		.align	2
 179              		.global	USBUART_BUS_RESET_ISR
 180              		.thumb
 181              		.thumb_func
 182              		.type	USBUART_BUS_RESET_ISR, %function
 183              	USBUART_BUS_RESET_ISR:
 184              	.LFB4:
 695:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_SOF_ISR_ENTRY_CALLBACK
 696:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_SOF_ISR_EntryCallback();
 697:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_SOF_ISR_ENTRY_CALLBACK) */
 698:Generated_Source\PSoC5/USBUART_episr.c **** 
 699:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START SOF_USER_CODE` Place your code here */
 700:Generated_Source\PSoC5/USBUART_episr.c **** 
 701:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 702:Generated_Source\PSoC5/USBUART_episr.c **** 
 703:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieInterruptSource(USBUART_INTR_SIE_SOF_INTR);
 704:Generated_Source\PSoC5/USBUART_episr.c **** 
 705:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_SOF_ISR_EXIT_CALLBACK
 706:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_SOF_ISR_ExitCallback();
 707:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_SOF_ISR_EXIT_CALLBACK) */
 708:Generated_Source\PSoC5/USBUART_episr.c ****     }
 709:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_SOF_ISR_ACTIVE) */
 710:Generated_Source\PSoC5/USBUART_episr.c **** 
 711:Generated_Source\PSoC5/USBUART_episr.c **** 
 712:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_BUS_RESET_ISR_ACTIVE)
 713:Generated_Source\PSoC5/USBUART_episr.c **** /*******************************************************************************
 714:Generated_Source\PSoC5/USBUART_episr.c **** * Function Name: USBUART_BUS_RESET_ISR
 715:Generated_Source\PSoC5/USBUART_episr.c **** ****************************************************************************//**
 716:Generated_Source\PSoC5/USBUART_episr.c **** *
 717:Generated_Source\PSoC5/USBUART_episr.c **** *  USB Bus Reset Interrupt Service Routine.  Calls _Start with the same
 718:Generated_Source\PSoC5/USBUART_episr.c **** *  parameters as the last USER call to _Start
 719:Generated_Source\PSoC5/USBUART_episr.c **** *
 720:Generated_Source\PSoC5/USBUART_episr.c **** *
 721:Generated_Source\PSoC5/USBUART_episr.c **** *******************************************************************************/
 722:Generated_Source\PSoC5/USBUART_episr.c **** CY_ISR(USBUART_BUS_RESET_ISR)
 723:Generated_Source\PSoC5/USBUART_episr.c **** {
 185              		.loc 1 723 0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189              		.loc 1 723 0
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccYmYQkI.s 			page 17


 190 0000 08B5     		push	{r3, lr}
 191              		.cfi_def_cfa_offset 8
 192              		.cfi_offset 3, -8
 193              		.cfi_offset 14, -4
 724:Generated_Source\PSoC5/USBUART_episr.c **** #ifdef USBUART_BUS_RESET_ISR_ENTRY_CALLBACK
 725:Generated_Source\PSoC5/USBUART_episr.c ****     USBUART_BUS_RESET_ISR_EntryCallback();
 726:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_BUS_RESET_ISR_ENTRY_CALLBACK) */
 727:Generated_Source\PSoC5/USBUART_episr.c **** 
 728:Generated_Source\PSoC5/USBUART_episr.c ****     /* `#START BUS_RESET_USER_CODE` Place your code here */
 729:Generated_Source\PSoC5/USBUART_episr.c **** 
 730:Generated_Source\PSoC5/USBUART_episr.c ****     /* `#END` */
 731:Generated_Source\PSoC5/USBUART_episr.c **** 
 732:Generated_Source\PSoC5/USBUART_episr.c ****     USBUART_ClearSieInterruptSource(USBUART_INTR_SIE_BUS_RESET_INTR);
 733:Generated_Source\PSoC5/USBUART_episr.c **** 
 734:Generated_Source\PSoC5/USBUART_episr.c ****     USBUART_ReInitComponent();
 194              		.loc 1 734 0
 195 0002 FFF7FEFF 		bl	USBUART_ReInitComponent
 196              	.LVL1:
 197 0006 08BD     		pop	{r3, pc}
 198              		.cfi_endproc
 199              	.LFE4:
 200              		.size	USBUART_BUS_RESET_ISR, .-USBUART_BUS_RESET_ISR
 201              		.text
 202              	.Letext0:
 203              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 204              		.file 3 "Generated_Source\\PSoC5\\USBUART.h"
 205              		.file 4 "Generated_Source\\PSoC5\\USBUART_pvt.h"
 206              		.section	.debug_info,"",%progbits
 207              	.Ldebug_info0:
 208 0000 55020000 		.4byte	0x255
 209 0004 0400     		.2byte	0x4
 210 0006 00000000 		.4byte	.Ldebug_abbrev0
 211 000a 04       		.byte	0x4
 212 000b 01       		.uleb128 0x1
 213 000c 61010000 		.4byte	.LASF39
 214 0010 01       		.byte	0x1
 215 0011 D2000000 		.4byte	.LASF40
 216 0015 33020000 		.4byte	.LASF41
 217 0019 00000000 		.4byte	.Ldebug_ranges0+0
 218 001d 00000000 		.4byte	0
 219 0021 00000000 		.4byte	.Ldebug_line0
 220 0025 02       		.uleb128 0x2
 221 0026 01       		.byte	0x1
 222 0027 06       		.byte	0x6
 223 0028 CD020000 		.4byte	.LASF0
 224 002c 02       		.uleb128 0x2
 225 002d 01       		.byte	0x1
 226 002e 08       		.byte	0x8
 227 002f C4000000 		.4byte	.LASF1
 228 0033 02       		.uleb128 0x2
 229 0034 02       		.byte	0x2
 230 0035 05       		.byte	0x5
 231 0036 7D020000 		.4byte	.LASF2
 232 003a 02       		.uleb128 0x2
 233 003b 02       		.byte	0x2
 234 003c 07       		.byte	0x7
 235 003d 35000000 		.4byte	.LASF3
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccYmYQkI.s 			page 18


 236 0041 02       		.uleb128 0x2
 237 0042 04       		.byte	0x4
 238 0043 05       		.byte	0x5
 239 0044 AD020000 		.4byte	.LASF4
 240 0048 02       		.uleb128 0x2
 241 0049 04       		.byte	0x4
 242 004a 07       		.byte	0x7
 243 004b 90000000 		.4byte	.LASF5
 244 004f 02       		.uleb128 0x2
 245 0050 08       		.byte	0x8
 246 0051 05       		.byte	0x5
 247 0052 15020000 		.4byte	.LASF6
 248 0056 02       		.uleb128 0x2
 249 0057 08       		.byte	0x8
 250 0058 07       		.byte	0x7
 251 0059 40010000 		.4byte	.LASF7
 252 005d 03       		.uleb128 0x3
 253 005e 04       		.byte	0x4
 254 005f 05       		.byte	0x5
 255 0060 696E7400 		.ascii	"int\000"
 256 0064 02       		.uleb128 0x2
 257 0065 04       		.byte	0x4
 258 0066 07       		.byte	0x7
 259 0067 33010000 		.4byte	.LASF8
 260 006b 04       		.uleb128 0x4
 261 006c 9D020000 		.4byte	.LASF9
 262 0070 02       		.byte	0x2
 263 0071 9201     		.2byte	0x192
 264 0073 2C000000 		.4byte	0x2c
 265 0077 04       		.uleb128 0x4
 266 0078 12010000 		.4byte	.LASF10
 267 007c 02       		.byte	0x2
 268 007d 9301     		.2byte	0x193
 269 007f 3A000000 		.4byte	0x3a
 270 0083 02       		.uleb128 0x2
 271 0084 04       		.byte	0x4
 272 0085 04       		.byte	0x4
 273 0086 2F000000 		.4byte	.LASF11
 274 008a 02       		.uleb128 0x2
 275 008b 08       		.byte	0x8
 276 008c 04       		.byte	0x4
 277 008d F9000000 		.4byte	.LASF12
 278 0091 02       		.uleb128 0x2
 279 0092 01       		.byte	0x1
 280 0093 08       		.byte	0x8
 281 0094 23020000 		.4byte	.LASF13
 282 0098 04       		.uleb128 0x4
 283 0099 8B000000 		.4byte	.LASF14
 284 009d 02       		.byte	0x2
 285 009e 3C02     		.2byte	0x23c
 286 00a0 A4000000 		.4byte	0xa4
 287 00a4 05       		.uleb128 0x5
 288 00a5 6B000000 		.4byte	0x6b
 289 00a9 02       		.uleb128 0x2
 290 00aa 04       		.byte	0x4
 291 00ab 07       		.byte	0x7
 292 00ac 05020000 		.4byte	.LASF15
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccYmYQkI.s 			page 19


 293 00b0 06       		.uleb128 0x6
 294 00b1 0C       		.byte	0xc
 295 00b2 03       		.byte	0x3
 296 00b3 91       		.byte	0x91
 297 00b4 25010000 		.4byte	0x125
 298 00b8 07       		.uleb128 0x7
 299 00b9 00010000 		.4byte	.LASF16
 300 00bd 03       		.byte	0x3
 301 00be 93       		.byte	0x93
 302 00bf 6B000000 		.4byte	0x6b
 303 00c3 00       		.byte	0
 304 00c4 07       		.uleb128 0x7
 305 00c5 19010000 		.4byte	.LASF17
 306 00c9 03       		.byte	0x3
 307 00ca 94       		.byte	0x94
 308 00cb 6B000000 		.4byte	0x6b
 309 00cf 01       		.byte	0x1
 310 00d0 07       		.uleb128 0x7
 311 00d1 57010000 		.4byte	.LASF18
 312 00d5 03       		.byte	0x3
 313 00d6 95       		.byte	0x95
 314 00d7 6B000000 		.4byte	0x6b
 315 00db 02       		.byte	0x2
 316 00dc 07       		.uleb128 0x7
 317 00dd 77000000 		.4byte	.LASF19
 318 00e1 03       		.byte	0x3
 319 00e2 96       		.byte	0x96
 320 00e3 6B000000 		.4byte	0x6b
 321 00e7 03       		.byte	0x3
 322 00e8 07       		.uleb128 0x7
 323 00e9 A2000000 		.4byte	.LASF20
 324 00ed 03       		.byte	0x3
 325 00ee 97       		.byte	0x97
 326 00ef 6B000000 		.4byte	0x6b
 327 00f3 04       		.byte	0x4
 328 00f4 07       		.uleb128 0x7
 329 00f5 0E020000 		.4byte	.LASF21
 330 00f9 03       		.byte	0x3
 331 00fa 98       		.byte	0x98
 332 00fb 6B000000 		.4byte	0x6b
 333 00ff 05       		.byte	0x5
 334 0100 07       		.uleb128 0x7
 335 0101 07010000 		.4byte	.LASF22
 336 0105 03       		.byte	0x3
 337 0106 99       		.byte	0x99
 338 0107 77000000 		.4byte	0x77
 339 010b 06       		.byte	0x6
 340 010c 07       		.uleb128 0x7
 341 010d 28020000 		.4byte	.LASF23
 342 0111 03       		.byte	0x3
 343 0112 9A       		.byte	0x9a
 344 0113 77000000 		.4byte	0x77
 345 0117 08       		.byte	0x8
 346 0118 07       		.uleb128 0x7
 347 0119 A3020000 		.4byte	.LASF24
 348 011d 03       		.byte	0x3
 349 011e 9B       		.byte	0x9b
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccYmYQkI.s 			page 20


 350 011f 6B000000 		.4byte	0x6b
 351 0123 0A       		.byte	0xa
 352 0124 00       		.byte	0
 353 0125 08       		.uleb128 0x8
 354 0126 B6020000 		.4byte	.LASF25
 355 012a 03       		.byte	0x3
 356 012b 9C       		.byte	0x9c
 357 012c B0000000 		.4byte	0xb0
 358 0130 06       		.uleb128 0x6
 359 0131 10       		.byte	0x10
 360 0132 03       		.byte	0x3
 361 0133 D8       		.byte	0xd8
 362 0134 69010000 		.4byte	0x169
 363 0138 07       		.uleb128 0x7
 364 0139 69000000 		.4byte	.LASF26
 365 013d 03       		.byte	0x3
 366 013e DA       		.byte	0xda
 367 013f 6B000000 		.4byte	0x6b
 368 0143 00       		.byte	0
 369 0144 07       		.uleb128 0x7
 370 0145 70000000 		.4byte	.LASF27
 371 0149 03       		.byte	0x3
 372 014a DB       		.byte	0xdb
 373 014b 6B000000 		.4byte	0x6b
 374 014f 01       		.byte	0x1
 375 0150 07       		.uleb128 0x7
 376 0151 29000000 		.4byte	.LASF28
 377 0155 03       		.byte	0x3
 378 0156 DC       		.byte	0xdc
 379 0157 6B000000 		.4byte	0x6b
 380 015b 02       		.byte	0x2
 381 015c 09       		.uleb128 0x9
 382 015d 67617000 		.ascii	"gap\000"
 383 0161 03       		.byte	0x3
 384 0162 DD       		.byte	0xdd
 385 0163 69010000 		.4byte	0x169
 386 0167 03       		.byte	0x3
 387 0168 00       		.byte	0
 388 0169 0A       		.uleb128 0xa
 389 016a 6B000000 		.4byte	0x6b
 390 016e 79010000 		.4byte	0x179
 391 0172 0B       		.uleb128 0xb
 392 0173 A9000000 		.4byte	0xa9
 393 0177 0C       		.byte	0xc
 394 0178 00       		.byte	0
 395 0179 08       		.uleb128 0x8
 396 017a EF010000 		.4byte	.LASF29
 397 017e 03       		.byte	0x3
 398 017f DE       		.byte	0xde
 399 0180 30010000 		.4byte	0x130
 400 0184 0C       		.uleb128 0xc
 401 0185 90       		.byte	0x90
 402 0186 03       		.byte	0x3
 403 0187 1201     		.2byte	0x112
 404 0189 9B010000 		.4byte	0x19b
 405 018d 0D       		.uleb128 0xd
 406 018e A7000000 		.4byte	.LASF30
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccYmYQkI.s 			page 21


 407 0192 03       		.byte	0x3
 408 0193 1401     		.2byte	0x114
 409 0195 9B010000 		.4byte	0x19b
 410 0199 00       		.byte	0
 411 019a 00       		.byte	0
 412 019b 0A       		.uleb128 0xa
 413 019c 79010000 		.4byte	0x179
 414 01a0 AB010000 		.4byte	0x1ab
 415 01a4 0B       		.uleb128 0xb
 416 01a5 A9000000 		.4byte	0xa9
 417 01a9 08       		.byte	0x8
 418 01aa 00       		.byte	0
 419 01ab 04       		.uleb128 0x4
 420 01ac AD000000 		.4byte	.LASF31
 421 01b0 03       		.byte	0x3
 422 01b1 1501     		.2byte	0x115
 423 01b3 84010000 		.4byte	0x184
 424 01b7 0E       		.uleb128 0xe
 425 01b8 D9020000 		.4byte	.LASF32
 426 01bc 01       		.byte	0x1
 427 01bd 25       		.byte	0x25
 428 01be 00000000 		.4byte	.LFB0
 429 01c2 30000000 		.4byte	.LFE0-.LFB0
 430 01c6 01       		.uleb128 0x1
 431 01c7 9C       		.byte	0x9c
 432 01c8 0E       		.uleb128 0xe
 433 01c9 48000000 		.4byte	.LASF33
 434 01cd 01       		.byte	0x1
 435 01ce 78       		.byte	0x78
 436 01cf 00000000 		.4byte	.LFB1
 437 01d3 34000000 		.4byte	.LFE1-.LFB1
 438 01d7 01       		.uleb128 0x1
 439 01d8 9C       		.byte	0x9c
 440 01d9 0F       		.uleb128 0xf
 441 01da 00000000 		.4byte	.LASF35
 442 01de 01       		.byte	0x1
 443 01df C9       		.byte	0xc9
 444 01e0 00000000 		.4byte	.LFB2
 445 01e4 40000000 		.4byte	.LFE2-.LFB2
 446 01e8 01       		.uleb128 0x1
 447 01e9 9C       		.byte	0x9c
 448 01ea F8010000 		.4byte	0x1f8
 449 01ee 10       		.uleb128 0x10
 450 01ef 06000000 		.4byte	.LVL0
 451 01f3 4A020000 		.4byte	0x24a
 452 01f7 00       		.byte	0
 453 01f8 11       		.uleb128 0x11
 454 01f9 59000000 		.4byte	.LASF34
 455 01fd 01       		.byte	0x1
 456 01fe B502     		.2byte	0x2b5
 457 0200 00000000 		.4byte	.LFB3
 458 0204 02000000 		.4byte	.LFE3-.LFB3
 459 0208 01       		.uleb128 0x1
 460 0209 9C       		.byte	0x9c
 461 020a 12       		.uleb128 0x12
 462 020b 87020000 		.4byte	.LASF36
 463 020f 01       		.byte	0x1
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccYmYQkI.s 			page 22


 464 0210 D202     		.2byte	0x2d2
 465 0212 00000000 		.4byte	.LFB4
 466 0216 08000000 		.4byte	.LFE4-.LFB4
 467 021a 01       		.uleb128 0x1
 468 021b 9C       		.byte	0x9c
 469 021c 2A020000 		.4byte	0x22a
 470 0220 10       		.uleb128 0x10
 471 0221 06000000 		.4byte	.LVL1
 472 0225 51020000 		.4byte	0x251
 473 0229 00       		.byte	0
 474 022a 0A       		.uleb128 0xa
 475 022b 25010000 		.4byte	0x125
 476 022f 3A020000 		.4byte	0x23a
 477 0233 0B       		.uleb128 0xb
 478 0234 A9000000 		.4byte	0xa9
 479 0238 08       		.byte	0x8
 480 0239 00       		.byte	0
 481 023a 13       		.uleb128 0x13
 482 023b 80000000 		.4byte	.LASF42
 483 023f 04       		.byte	0x4
 484 0240 7A       		.byte	0x7a
 485 0241 45020000 		.4byte	0x245
 486 0245 05       		.uleb128 0x5
 487 0246 2A020000 		.4byte	0x22a
 488 024a 14       		.uleb128 0x14
 489 024b 24010000 		.4byte	.LASF37
 490 024f 01       		.byte	0x1
 491 0250 19       		.byte	0x19
 492 0251 14       		.uleb128 0x14
 493 0252 11000000 		.4byte	.LASF38
 494 0256 04       		.byte	0x4
 495 0257 A5       		.byte	0xa5
 496 0258 00       		.byte	0
 497              		.section	.debug_abbrev,"",%progbits
 498              	.Ldebug_abbrev0:
 499 0000 01       		.uleb128 0x1
 500 0001 11       		.uleb128 0x11
 501 0002 01       		.byte	0x1
 502 0003 25       		.uleb128 0x25
 503 0004 0E       		.uleb128 0xe
 504 0005 13       		.uleb128 0x13
 505 0006 0B       		.uleb128 0xb
 506 0007 03       		.uleb128 0x3
 507 0008 0E       		.uleb128 0xe
 508 0009 1B       		.uleb128 0x1b
 509 000a 0E       		.uleb128 0xe
 510 000b 55       		.uleb128 0x55
 511 000c 17       		.uleb128 0x17
 512 000d 11       		.uleb128 0x11
 513 000e 01       		.uleb128 0x1
 514 000f 10       		.uleb128 0x10
 515 0010 17       		.uleb128 0x17
 516 0011 00       		.byte	0
 517 0012 00       		.byte	0
 518 0013 02       		.uleb128 0x2
 519 0014 24       		.uleb128 0x24
 520 0015 00       		.byte	0
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccYmYQkI.s 			page 23


 521 0016 0B       		.uleb128 0xb
 522 0017 0B       		.uleb128 0xb
 523 0018 3E       		.uleb128 0x3e
 524 0019 0B       		.uleb128 0xb
 525 001a 03       		.uleb128 0x3
 526 001b 0E       		.uleb128 0xe
 527 001c 00       		.byte	0
 528 001d 00       		.byte	0
 529 001e 03       		.uleb128 0x3
 530 001f 24       		.uleb128 0x24
 531 0020 00       		.byte	0
 532 0021 0B       		.uleb128 0xb
 533 0022 0B       		.uleb128 0xb
 534 0023 3E       		.uleb128 0x3e
 535 0024 0B       		.uleb128 0xb
 536 0025 03       		.uleb128 0x3
 537 0026 08       		.uleb128 0x8
 538 0027 00       		.byte	0
 539 0028 00       		.byte	0
 540 0029 04       		.uleb128 0x4
 541 002a 16       		.uleb128 0x16
 542 002b 00       		.byte	0
 543 002c 03       		.uleb128 0x3
 544 002d 0E       		.uleb128 0xe
 545 002e 3A       		.uleb128 0x3a
 546 002f 0B       		.uleb128 0xb
 547 0030 3B       		.uleb128 0x3b
 548 0031 05       		.uleb128 0x5
 549 0032 49       		.uleb128 0x49
 550 0033 13       		.uleb128 0x13
 551 0034 00       		.byte	0
 552 0035 00       		.byte	0
 553 0036 05       		.uleb128 0x5
 554 0037 35       		.uleb128 0x35
 555 0038 00       		.byte	0
 556 0039 49       		.uleb128 0x49
 557 003a 13       		.uleb128 0x13
 558 003b 00       		.byte	0
 559 003c 00       		.byte	0
 560 003d 06       		.uleb128 0x6
 561 003e 13       		.uleb128 0x13
 562 003f 01       		.byte	0x1
 563 0040 0B       		.uleb128 0xb
 564 0041 0B       		.uleb128 0xb
 565 0042 3A       		.uleb128 0x3a
 566 0043 0B       		.uleb128 0xb
 567 0044 3B       		.uleb128 0x3b
 568 0045 0B       		.uleb128 0xb
 569 0046 01       		.uleb128 0x1
 570 0047 13       		.uleb128 0x13
 571 0048 00       		.byte	0
 572 0049 00       		.byte	0
 573 004a 07       		.uleb128 0x7
 574 004b 0D       		.uleb128 0xd
 575 004c 00       		.byte	0
 576 004d 03       		.uleb128 0x3
 577 004e 0E       		.uleb128 0xe
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccYmYQkI.s 			page 24


 578 004f 3A       		.uleb128 0x3a
 579 0050 0B       		.uleb128 0xb
 580 0051 3B       		.uleb128 0x3b
 581 0052 0B       		.uleb128 0xb
 582 0053 49       		.uleb128 0x49
 583 0054 13       		.uleb128 0x13
 584 0055 38       		.uleb128 0x38
 585 0056 0B       		.uleb128 0xb
 586 0057 00       		.byte	0
 587 0058 00       		.byte	0
 588 0059 08       		.uleb128 0x8
 589 005a 16       		.uleb128 0x16
 590 005b 00       		.byte	0
 591 005c 03       		.uleb128 0x3
 592 005d 0E       		.uleb128 0xe
 593 005e 3A       		.uleb128 0x3a
 594 005f 0B       		.uleb128 0xb
 595 0060 3B       		.uleb128 0x3b
 596 0061 0B       		.uleb128 0xb
 597 0062 49       		.uleb128 0x49
 598 0063 13       		.uleb128 0x13
 599 0064 00       		.byte	0
 600 0065 00       		.byte	0
 601 0066 09       		.uleb128 0x9
 602 0067 0D       		.uleb128 0xd
 603 0068 00       		.byte	0
 604 0069 03       		.uleb128 0x3
 605 006a 08       		.uleb128 0x8
 606 006b 3A       		.uleb128 0x3a
 607 006c 0B       		.uleb128 0xb
 608 006d 3B       		.uleb128 0x3b
 609 006e 0B       		.uleb128 0xb
 610 006f 49       		.uleb128 0x49
 611 0070 13       		.uleb128 0x13
 612 0071 38       		.uleb128 0x38
 613 0072 0B       		.uleb128 0xb
 614 0073 00       		.byte	0
 615 0074 00       		.byte	0
 616 0075 0A       		.uleb128 0xa
 617 0076 01       		.uleb128 0x1
 618 0077 01       		.byte	0x1
 619 0078 49       		.uleb128 0x49
 620 0079 13       		.uleb128 0x13
 621 007a 01       		.uleb128 0x1
 622 007b 13       		.uleb128 0x13
 623 007c 00       		.byte	0
 624 007d 00       		.byte	0
 625 007e 0B       		.uleb128 0xb
 626 007f 21       		.uleb128 0x21
 627 0080 00       		.byte	0
 628 0081 49       		.uleb128 0x49
 629 0082 13       		.uleb128 0x13
 630 0083 2F       		.uleb128 0x2f
 631 0084 0B       		.uleb128 0xb
 632 0085 00       		.byte	0
 633 0086 00       		.byte	0
 634 0087 0C       		.uleb128 0xc
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccYmYQkI.s 			page 25


 635 0088 13       		.uleb128 0x13
 636 0089 01       		.byte	0x1
 637 008a 0B       		.uleb128 0xb
 638 008b 0B       		.uleb128 0xb
 639 008c 3A       		.uleb128 0x3a
 640 008d 0B       		.uleb128 0xb
 641 008e 3B       		.uleb128 0x3b
 642 008f 05       		.uleb128 0x5
 643 0090 01       		.uleb128 0x1
 644 0091 13       		.uleb128 0x13
 645 0092 00       		.byte	0
 646 0093 00       		.byte	0
 647 0094 0D       		.uleb128 0xd
 648 0095 0D       		.uleb128 0xd
 649 0096 00       		.byte	0
 650 0097 03       		.uleb128 0x3
 651 0098 0E       		.uleb128 0xe
 652 0099 3A       		.uleb128 0x3a
 653 009a 0B       		.uleb128 0xb
 654 009b 3B       		.uleb128 0x3b
 655 009c 05       		.uleb128 0x5
 656 009d 49       		.uleb128 0x49
 657 009e 13       		.uleb128 0x13
 658 009f 38       		.uleb128 0x38
 659 00a0 0B       		.uleb128 0xb
 660 00a1 00       		.byte	0
 661 00a2 00       		.byte	0
 662 00a3 0E       		.uleb128 0xe
 663 00a4 2E       		.uleb128 0x2e
 664 00a5 00       		.byte	0
 665 00a6 3F       		.uleb128 0x3f
 666 00a7 19       		.uleb128 0x19
 667 00a8 03       		.uleb128 0x3
 668 00a9 0E       		.uleb128 0xe
 669 00aa 3A       		.uleb128 0x3a
 670 00ab 0B       		.uleb128 0xb
 671 00ac 3B       		.uleb128 0x3b
 672 00ad 0B       		.uleb128 0xb
 673 00ae 27       		.uleb128 0x27
 674 00af 19       		.uleb128 0x19
 675 00b0 11       		.uleb128 0x11
 676 00b1 01       		.uleb128 0x1
 677 00b2 12       		.uleb128 0x12
 678 00b3 06       		.uleb128 0x6
 679 00b4 40       		.uleb128 0x40
 680 00b5 18       		.uleb128 0x18
 681 00b6 9742     		.uleb128 0x2117
 682 00b8 19       		.uleb128 0x19
 683 00b9 00       		.byte	0
 684 00ba 00       		.byte	0
 685 00bb 0F       		.uleb128 0xf
 686 00bc 2E       		.uleb128 0x2e
 687 00bd 01       		.byte	0x1
 688 00be 3F       		.uleb128 0x3f
 689 00bf 19       		.uleb128 0x19
 690 00c0 03       		.uleb128 0x3
 691 00c1 0E       		.uleb128 0xe
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccYmYQkI.s 			page 26


 692 00c2 3A       		.uleb128 0x3a
 693 00c3 0B       		.uleb128 0xb
 694 00c4 3B       		.uleb128 0x3b
 695 00c5 0B       		.uleb128 0xb
 696 00c6 27       		.uleb128 0x27
 697 00c7 19       		.uleb128 0x19
 698 00c8 11       		.uleb128 0x11
 699 00c9 01       		.uleb128 0x1
 700 00ca 12       		.uleb128 0x12
 701 00cb 06       		.uleb128 0x6
 702 00cc 40       		.uleb128 0x40
 703 00cd 18       		.uleb128 0x18
 704 00ce 9742     		.uleb128 0x2117
 705 00d0 19       		.uleb128 0x19
 706 00d1 01       		.uleb128 0x1
 707 00d2 13       		.uleb128 0x13
 708 00d3 00       		.byte	0
 709 00d4 00       		.byte	0
 710 00d5 10       		.uleb128 0x10
 711 00d6 898201   		.uleb128 0x4109
 712 00d9 00       		.byte	0
 713 00da 11       		.uleb128 0x11
 714 00db 01       		.uleb128 0x1
 715 00dc 31       		.uleb128 0x31
 716 00dd 13       		.uleb128 0x13
 717 00de 00       		.byte	0
 718 00df 00       		.byte	0
 719 00e0 11       		.uleb128 0x11
 720 00e1 2E       		.uleb128 0x2e
 721 00e2 00       		.byte	0
 722 00e3 3F       		.uleb128 0x3f
 723 00e4 19       		.uleb128 0x19
 724 00e5 03       		.uleb128 0x3
 725 00e6 0E       		.uleb128 0xe
 726 00e7 3A       		.uleb128 0x3a
 727 00e8 0B       		.uleb128 0xb
 728 00e9 3B       		.uleb128 0x3b
 729 00ea 05       		.uleb128 0x5
 730 00eb 27       		.uleb128 0x27
 731 00ec 19       		.uleb128 0x19
 732 00ed 11       		.uleb128 0x11
 733 00ee 01       		.uleb128 0x1
 734 00ef 12       		.uleb128 0x12
 735 00f0 06       		.uleb128 0x6
 736 00f1 40       		.uleb128 0x40
 737 00f2 18       		.uleb128 0x18
 738 00f3 9742     		.uleb128 0x2117
 739 00f5 19       		.uleb128 0x19
 740 00f6 00       		.byte	0
 741 00f7 00       		.byte	0
 742 00f8 12       		.uleb128 0x12
 743 00f9 2E       		.uleb128 0x2e
 744 00fa 01       		.byte	0x1
 745 00fb 3F       		.uleb128 0x3f
 746 00fc 19       		.uleb128 0x19
 747 00fd 03       		.uleb128 0x3
 748 00fe 0E       		.uleb128 0xe
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccYmYQkI.s 			page 27


 749 00ff 3A       		.uleb128 0x3a
 750 0100 0B       		.uleb128 0xb
 751 0101 3B       		.uleb128 0x3b
 752 0102 05       		.uleb128 0x5
 753 0103 27       		.uleb128 0x27
 754 0104 19       		.uleb128 0x19
 755 0105 11       		.uleb128 0x11
 756 0106 01       		.uleb128 0x1
 757 0107 12       		.uleb128 0x12
 758 0108 06       		.uleb128 0x6
 759 0109 40       		.uleb128 0x40
 760 010a 18       		.uleb128 0x18
 761 010b 9742     		.uleb128 0x2117
 762 010d 19       		.uleb128 0x19
 763 010e 01       		.uleb128 0x1
 764 010f 13       		.uleb128 0x13
 765 0110 00       		.byte	0
 766 0111 00       		.byte	0
 767 0112 13       		.uleb128 0x13
 768 0113 34       		.uleb128 0x34
 769 0114 00       		.byte	0
 770 0115 03       		.uleb128 0x3
 771 0116 0E       		.uleb128 0xe
 772 0117 3A       		.uleb128 0x3a
 773 0118 0B       		.uleb128 0xb
 774 0119 3B       		.uleb128 0x3b
 775 011a 0B       		.uleb128 0xb
 776 011b 49       		.uleb128 0x49
 777 011c 13       		.uleb128 0x13
 778 011d 3F       		.uleb128 0x3f
 779 011e 19       		.uleb128 0x19
 780 011f 3C       		.uleb128 0x3c
 781 0120 19       		.uleb128 0x19
 782 0121 00       		.byte	0
 783 0122 00       		.byte	0
 784 0123 14       		.uleb128 0x14
 785 0124 2E       		.uleb128 0x2e
 786 0125 00       		.byte	0
 787 0126 3F       		.uleb128 0x3f
 788 0127 19       		.uleb128 0x19
 789 0128 03       		.uleb128 0x3
 790 0129 0E       		.uleb128 0xe
 791 012a 3A       		.uleb128 0x3a
 792 012b 0B       		.uleb128 0xb
 793 012c 3B       		.uleb128 0x3b
 794 012d 0B       		.uleb128 0xb
 795 012e 27       		.uleb128 0x27
 796 012f 19       		.uleb128 0x19
 797 0130 3C       		.uleb128 0x3c
 798 0131 19       		.uleb128 0x19
 799 0132 00       		.byte	0
 800 0133 00       		.byte	0
 801 0134 00       		.byte	0
 802              		.section	.debug_aranges,"",%progbits
 803 0000 3C000000 		.4byte	0x3c
 804 0004 0200     		.2byte	0x2
 805 0006 00000000 		.4byte	.Ldebug_info0
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccYmYQkI.s 			page 28


 806 000a 04       		.byte	0x4
 807 000b 00       		.byte	0
 808 000c 0000     		.2byte	0
 809 000e 0000     		.2byte	0
 810 0010 00000000 		.4byte	.LFB0
 811 0014 30000000 		.4byte	.LFE0-.LFB0
 812 0018 00000000 		.4byte	.LFB1
 813 001c 34000000 		.4byte	.LFE1-.LFB1
 814 0020 00000000 		.4byte	.LFB2
 815 0024 40000000 		.4byte	.LFE2-.LFB2
 816 0028 00000000 		.4byte	.LFB3
 817 002c 02000000 		.4byte	.LFE3-.LFB3
 818 0030 00000000 		.4byte	.LFB4
 819 0034 08000000 		.4byte	.LFE4-.LFB4
 820 0038 00000000 		.4byte	0
 821 003c 00000000 		.4byte	0
 822              		.section	.debug_ranges,"",%progbits
 823              	.Ldebug_ranges0:
 824 0000 00000000 		.4byte	.LFB0
 825 0004 30000000 		.4byte	.LFE0
 826 0008 00000000 		.4byte	.LFB1
 827 000c 34000000 		.4byte	.LFE1
 828 0010 00000000 		.4byte	.LFB2
 829 0014 40000000 		.4byte	.LFE2
 830 0018 00000000 		.4byte	.LFB3
 831 001c 02000000 		.4byte	.LFE3
 832 0020 00000000 		.4byte	.LFB4
 833 0024 08000000 		.4byte	.LFE4
 834 0028 00000000 		.4byte	0
 835 002c 00000000 		.4byte	0
 836              		.section	.debug_line,"",%progbits
 837              	.Ldebug_line0:
 838 0000 E3000000 		.section	.debug_str,"MS",%progbits,1
 838      02006800 
 838      00000201 
 838      FB0E0D00 
 838      01010101 
 839              	.LASF35:
 840 0000 55534255 		.ascii	"USBUART_EP_3_ISR\000"
 840      4152545F 
 840      45505F33 
 840      5F495352 
 840      00
 841              	.LASF38:
 842 0011 55534255 		.ascii	"USBUART_ReInitComponent\000"
 842      4152545F 
 842      5265496E 
 842      6974436F 
 842      6D706F6E 
 843              	.LASF28:
 844 0029 65704372 		.ascii	"epCr0\000"
 844      3000
 845              	.LASF11:
 846 002f 666C6F61 		.ascii	"float\000"
 846      7400
 847              	.LASF3:
 848 0035 73686F72 		.ascii	"short unsigned int\000"
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccYmYQkI.s 			page 29


 848      7420756E 
 848      7369676E 
 848      65642069 
 848      6E7400
 849              	.LASF33:
 850 0048 55534255 		.ascii	"USBUART_EP_2_ISR\000"
 850      4152545F 
 850      45505F32 
 850      5F495352 
 850      00
 851              	.LASF34:
 852 0059 55534255 		.ascii	"USBUART_SOF_ISR\000"
 852      4152545F 
 852      534F465F 
 852      49535200 
 853              	.LASF26:
 854 0069 6570436E 		.ascii	"epCnt0\000"
 854      743000
 855              	.LASF27:
 856 0070 6570436E 		.ascii	"epCnt1\000"
 856      743100
 857              	.LASF19:
 858 0077 6570546F 		.ascii	"epToggle\000"
 858      67676C65 
 858      00
 859              	.LASF42:
 860 0080 55534255 		.ascii	"USBUART_EP\000"
 860      4152545F 
 860      455000
 861              	.LASF14:
 862 008b 72656738 		.ascii	"reg8\000"
 862      00
 863              	.LASF5:
 864 0090 6C6F6E67 		.ascii	"long unsigned int\000"
 864      20756E73 
 864      69676E65 
 864      6420696E 
 864      7400
 865              	.LASF20:
 866 00a2 61646472 		.ascii	"addr\000"
 866      00
 867              	.LASF30:
 868 00a7 73696545 		.ascii	"sieEp\000"
 868      7000
 869              	.LASF31:
 870 00ad 55534255 		.ascii	"USBUART_sie_eps_struct\000"
 870      4152545F 
 870      7369655F 
 870      6570735F 
 870      73747275 
 871              	.LASF1:
 872 00c4 756E7369 		.ascii	"unsigned char\000"
 872      676E6564 
 872      20636861 
 872      7200
 873              	.LASF40:
 874 00d2 47656E65 		.ascii	"Generated_Source\\PSoC5\\USBUART_episr.c\000"
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccYmYQkI.s 			page 30


 874      72617465 
 874      645F536F 
 874      75726365 
 874      5C50536F 
 875              	.LASF12:
 876 00f9 646F7562 		.ascii	"double\000"
 876      6C6500
 877              	.LASF16:
 878 0100 61747472 		.ascii	"attrib\000"
 878      696200
 879              	.LASF22:
 880 0107 62756666 		.ascii	"buffOffset\000"
 880      4F666673 
 880      657400
 881              	.LASF10:
 882 0112 75696E74 		.ascii	"uint16\000"
 882      313600
 883              	.LASF17:
 884 0119 61706945 		.ascii	"apiEpState\000"
 884      70537461 
 884      746500
 885              	.LASF37:
 886 0124 55534255 		.ascii	"USBUART_RX_ISR\000"
 886      4152545F 
 886      52585F49 
 886      535200
 887              	.LASF8:
 888 0133 756E7369 		.ascii	"unsigned int\000"
 888      676E6564 
 888      20696E74 
 888      00
 889              	.LASF7:
 890 0140 6C6F6E67 		.ascii	"long long unsigned int\000"
 890      206C6F6E 
 890      6720756E 
 890      7369676E 
 890      65642069 
 891              	.LASF18:
 892 0157 68774570 		.ascii	"hwEpState\000"
 892      53746174 
 892      6500
 893              	.LASF39:
 894 0161 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 894      4320342E 
 894      392E3320 
 894      32303135 
 894      30333033 
 895 0194 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 895      20726576 
 895      6973696F 
 895      6E203232 
 895      31323230 
 896 01c7 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 896      66756E63 
 896      74696F6E 
 896      2D736563 
 896      74696F6E 
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccYmYQkI.s 			page 31


 897              	.LASF29:
 898 01ef 55534255 		.ascii	"USBUART_sie_ep_struct\000"
 898      4152545F 
 898      7369655F 
 898      65705F73 
 898      74727563 
 899              	.LASF15:
 900 0205 73697A65 		.ascii	"sizetype\000"
 900      74797065 
 900      00
 901              	.LASF21:
 902 020e 65704D6F 		.ascii	"epMode\000"
 902      646500
 903              	.LASF6:
 904 0215 6C6F6E67 		.ascii	"long long int\000"
 904      206C6F6E 
 904      6720696E 
 904      7400
 905              	.LASF13:
 906 0223 63686172 		.ascii	"char\000"
 906      00
 907              	.LASF23:
 908 0228 62756666 		.ascii	"bufferSize\000"
 908      65725369 
 908      7A6500
 909              	.LASF41:
 910 0233 433A5C55 		.ascii	"C:\\Users\\miker\\Documents\\My Libraries\\Code_Rep"
 910      73657273 
 910      5C6D696B 
 910      65725C44 
 910      6F63756D 
 911 0261 6F5C5053 		.ascii	"o\\PSoC_Grbl\\PSoC_Grbl.cydsn\000"
 911      6F435F47 
 911      72626C5C 
 911      50536F43 
 911      5F477262 
 912              	.LASF2:
 913 027d 73686F72 		.ascii	"short int\000"
 913      7420696E 
 913      7400
 914              	.LASF36:
 915 0287 55534255 		.ascii	"USBUART_BUS_RESET_ISR\000"
 915      4152545F 
 915      4255535F 
 915      52455345 
 915      545F4953 
 916              	.LASF9:
 917 029d 75696E74 		.ascii	"uint8\000"
 917      3800
 918              	.LASF24:
 919 02a3 696E7465 		.ascii	"interface\000"
 919      72666163 
 919      6500
 920              	.LASF4:
 921 02ad 6C6F6E67 		.ascii	"long int\000"
 921      20696E74 
 921      00
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccYmYQkI.s 			page 32


 922              	.LASF25:
 923 02b6 545F5553 		.ascii	"T_USBUART_EP_CTL_BLOCK\000"
 923      42554152 
 923      545F4550 
 923      5F43544C 
 923      5F424C4F 
 924              	.LASF0:
 925 02cd 7369676E 		.ascii	"signed char\000"
 925      65642063 
 925      68617200 
 926              	.LASF32:
 927 02d9 55534255 		.ascii	"USBUART_EP_1_ISR\000"
 927      4152545F 
 927      45505F31 
 927      5F495352 
 927      00
 928              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
