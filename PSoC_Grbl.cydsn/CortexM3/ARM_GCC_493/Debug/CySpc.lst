ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"CySpc.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.CySpcStart,"ax",%progbits
  19              		.align	2
  20              		.global	CySpcStart
  21              		.thumb
  22              		.thumb_func
  23              		.type	CySpcStart, %function
  24              	CySpcStart:
  25              	.LFB0:
  26              		.file 1 "Generated_Source\\PSoC5\\CySpc.c"
   1:Generated_Source\PSoC5/CySpc.c **** /***************************************************************************//**
   2:Generated_Source\PSoC5/CySpc.c **** * \file CySpc.c
   3:Generated_Source\PSoC5/CySpc.c **** * \version 5.50
   4:Generated_Source\PSoC5/CySpc.c **** *
   5:Generated_Source\PSoC5/CySpc.c **** * \brief Provides an API for the System Performance Component.
   6:Generated_Source\PSoC5/CySpc.c **** * The SPC functions are not meant to be called directly by the user
   7:Generated_Source\PSoC5/CySpc.c **** * application.
   8:Generated_Source\PSoC5/CySpc.c **** *
   9:Generated_Source\PSoC5/CySpc.c **** ********************************************************************************
  10:Generated_Source\PSoC5/CySpc.c **** * \copyright
  11:Generated_Source\PSoC5/CySpc.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/CySpc.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:Generated_Source\PSoC5/CySpc.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:Generated_Source\PSoC5/CySpc.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/CySpc.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/CySpc.c **** 
  17:Generated_Source\PSoC5/CySpc.c **** #include "CySpc.h"
  18:Generated_Source\PSoC5/CySpc.c **** 
  19:Generated_Source\PSoC5/CySpc.c **** #define CY_SPC_KEY_ONE                      (0xB6u)
  20:Generated_Source\PSoC5/CySpc.c **** #define CY_SPC_KEY_TWO(x)                   ((uint8) (((uint16) 0xD3u) + ((uint16) (x))))
  21:Generated_Source\PSoC5/CySpc.c **** 
  22:Generated_Source\PSoC5/CySpc.c **** /* Command Codes */
  23:Generated_Source\PSoC5/CySpc.c **** #define CY_SPC_CMD_LD_BYTE                  (0x00u)
  24:Generated_Source\PSoC5/CySpc.c **** #define CY_SPC_CMD_LD_MULTI_BYTE            (0x01u)
  25:Generated_Source\PSoC5/CySpc.c **** #define CY_SPC_CMD_LD_ROW                   (0x02u)
  26:Generated_Source\PSoC5/CySpc.c **** #define CY_SPC_CMD_RD_BYTE                  (0x03u)
  27:Generated_Source\PSoC5/CySpc.c **** #define CY_SPC_CMD_RD_MULTI_BYTE            (0x04u)
  28:Generated_Source\PSoC5/CySpc.c **** #define CY_SPC_CMD_WR_ROW                   (0x05u)
  29:Generated_Source\PSoC5/CySpc.c **** #define CY_SPC_CMD_WR_USER_NVL              (0x06u)
  30:Generated_Source\PSoC5/CySpc.c **** #define CY_SPC_CMD_PRG_ROW                  (0x07u)
  31:Generated_Source\PSoC5/CySpc.c **** #define CY_SPC_CMD_ER_SECTOR                (0x08u)
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 2


  32:Generated_Source\PSoC5/CySpc.c **** #define CY_SPC_CMD_ER_ALL                   (0x09u)
  33:Generated_Source\PSoC5/CySpc.c **** #define CY_SPC_CMD_RD_HIDDEN                (0x0Au)
  34:Generated_Source\PSoC5/CySpc.c **** #define CY_SPC_CMD_PRG_PROTECT              (0x0Bu)
  35:Generated_Source\PSoC5/CySpc.c **** #define CY_SPC_CMD_CHECKSUM                 (0x0Cu)
  36:Generated_Source\PSoC5/CySpc.c **** #define CY_SPC_CMD_DWNLD_ALGORITHM          (0x0Du)
  37:Generated_Source\PSoC5/CySpc.c **** #define CY_SPC_CMD_GET_TEMP                 (0x0Eu)
  38:Generated_Source\PSoC5/CySpc.c **** #define CY_SPC_CMD_GET_ADC                  (0x0Fu)
  39:Generated_Source\PSoC5/CySpc.c **** #define CY_SPC_CMD_RD_NVL_VOLATILE          (0x10u)
  40:Generated_Source\PSoC5/CySpc.c **** #define CY_SPC_CMD_SETUP_TS                 (0x11u)
  41:Generated_Source\PSoC5/CySpc.c **** #define CY_SPC_CMD_DISABLE_TS               (0x12u)
  42:Generated_Source\PSoC5/CySpc.c **** #define CY_SPC_CMD_ER_ROW                   (0x13u)
  43:Generated_Source\PSoC5/CySpc.c **** 
  44:Generated_Source\PSoC5/CySpc.c **** /* Enable bit in Active and Alternate Active mode templates */
  45:Generated_Source\PSoC5/CySpc.c **** #define PM_SPC_PM_EN                        (0x08u)
  46:Generated_Source\PSoC5/CySpc.c **** 
  47:Generated_Source\PSoC5/CySpc.c **** /* Gate calls to the SPC. */
  48:Generated_Source\PSoC5/CySpc.c **** uint8 SpcLockState = CY_SPC_UNLOCKED;
  49:Generated_Source\PSoC5/CySpc.c **** 
  50:Generated_Source\PSoC5/CySpc.c **** 
  51:Generated_Source\PSoC5/CySpc.c **** #if(CY_PSOC5)
  52:Generated_Source\PSoC5/CySpc.c **** 
  53:Generated_Source\PSoC5/CySpc.c ****     /***************************************************************************
  54:Generated_Source\PSoC5/CySpc.c ****     * The wait-state pipeline must be enabled prior to accessing the SPC
  55:Generated_Source\PSoC5/CySpc.c ****     * register interface regardless of CPU frequency. The CySpcLock() saves
  56:Generated_Source\PSoC5/CySpc.c ****     * current wait-state pipeline state and enables it. The CySpcUnlock()
  57:Generated_Source\PSoC5/CySpc.c ****     * function, which must be called after SPC transaction, restores original
  58:Generated_Source\PSoC5/CySpc.c ****     * state.
  59:Generated_Source\PSoC5/CySpc.c ****     ***************************************************************************/
  60:Generated_Source\PSoC5/CySpc.c ****     static uint32 spcWaitPipeBypass = 0u;
  61:Generated_Source\PSoC5/CySpc.c **** 
  62:Generated_Source\PSoC5/CySpc.c **** #endif  /* (CY_PSOC5) */
  63:Generated_Source\PSoC5/CySpc.c **** 
  64:Generated_Source\PSoC5/CySpc.c **** 
  65:Generated_Source\PSoC5/CySpc.c **** /*******************************************************************************
  66:Generated_Source\PSoC5/CySpc.c **** * Function Name: CySpcStart
  67:Generated_Source\PSoC5/CySpc.c **** ****************************************************************************//**
  68:Generated_Source\PSoC5/CySpc.c **** *  Starts the SPC.
  69:Generated_Source\PSoC5/CySpc.c **** *
  70:Generated_Source\PSoC5/CySpc.c **** *******************************************************************************/
  71:Generated_Source\PSoC5/CySpc.c **** void CySpcStart(void) 
  72:Generated_Source\PSoC5/CySpc.c **** {
  27              		.loc 1 72 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 08B5     		push	{r3, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
  34              		.cfi_offset 14, -4
  73:Generated_Source\PSoC5/CySpc.c ****     /* Save current global interrupt enable and disable it */
  74:Generated_Source\PSoC5/CySpc.c ****     uint8 interruptState = CyEnterCriticalSection();
  35              		.loc 1 74 0
  36 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  37              	.LVL0:
  75:Generated_Source\PSoC5/CySpc.c **** 
  76:Generated_Source\PSoC5/CySpc.c ****     CY_SPC_PM_ACT_REG  |= PM_SPC_PM_EN;
  38              		.loc 1 76 0
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 3


  39 0006 064A     		ldr	r2, .L3
  40 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  41 000a 43F00803 		orr	r3, r3, #8
  42 000e 1370     		strb	r3, [r2]
  77:Generated_Source\PSoC5/CySpc.c ****     CY_SPC_PM_STBY_REG |= PM_SPC_PM_EN;
  43              		.loc 1 77 0
  44 0010 1032     		adds	r2, r2, #16
  45 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  46 0014 43F00803 		orr	r3, r3, #8
  47 0018 1370     		strb	r3, [r2]
  78:Generated_Source\PSoC5/CySpc.c **** 
  79:Generated_Source\PSoC5/CySpc.c ****     /* Restore global interrupt enable state */
  80:Generated_Source\PSoC5/CySpc.c ****     CyExitCriticalSection(interruptState);
  48              		.loc 1 80 0
  49 001a FFF7FEFF 		bl	CyExitCriticalSection
  50              	.LVL1:
  51 001e 08BD     		pop	{r3, pc}
  52              	.L4:
  53              		.align	2
  54              	.L3:
  55 0020 A0430040 		.word	1073759136
  56              		.cfi_endproc
  57              	.LFE0:
  58              		.size	CySpcStart, .-CySpcStart
  59              		.section	.text.CySpcStop,"ax",%progbits
  60              		.align	2
  61              		.global	CySpcStop
  62              		.thumb
  63              		.thumb_func
  64              		.type	CySpcStop, %function
  65              	CySpcStop:
  66              	.LFB1:
  81:Generated_Source\PSoC5/CySpc.c **** }
  82:Generated_Source\PSoC5/CySpc.c **** 
  83:Generated_Source\PSoC5/CySpc.c **** 
  84:Generated_Source\PSoC5/CySpc.c **** /*******************************************************************************
  85:Generated_Source\PSoC5/CySpc.c **** * Function Name: CySpcStop
  86:Generated_Source\PSoC5/CySpc.c **** ****************************************************************************//**
  87:Generated_Source\PSoC5/CySpc.c **** *  Stops the SPC.
  88:Generated_Source\PSoC5/CySpc.c **** *
  89:Generated_Source\PSoC5/CySpc.c **** *******************************************************************************/
  90:Generated_Source\PSoC5/CySpc.c **** void CySpcStop(void) 
  91:Generated_Source\PSoC5/CySpc.c **** {
  67              		.loc 1 91 0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 0
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71 0000 08B5     		push	{r3, lr}
  72              		.cfi_def_cfa_offset 8
  73              		.cfi_offset 3, -8
  74              		.cfi_offset 14, -4
  92:Generated_Source\PSoC5/CySpc.c ****     /* Save current global interrupt enable and disable it */
  93:Generated_Source\PSoC5/CySpc.c ****     uint8 interruptState = CyEnterCriticalSection();
  75              		.loc 1 93 0
  76 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  77              	.LVL2:
  94:Generated_Source\PSoC5/CySpc.c **** 
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 4


  95:Generated_Source\PSoC5/CySpc.c ****     CY_SPC_PM_ACT_REG  &= ((uint8)(~PM_SPC_PM_EN));
  78              		.loc 1 95 0
  79 0006 064A     		ldr	r2, .L7
  80 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  81 000a 03F0F703 		and	r3, r3, #247
  82 000e 1370     		strb	r3, [r2]
  96:Generated_Source\PSoC5/CySpc.c ****     CY_SPC_PM_STBY_REG &= ((uint8)(~PM_SPC_PM_EN));
  83              		.loc 1 96 0
  84 0010 1032     		adds	r2, r2, #16
  85 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  86 0014 03F0F703 		and	r3, r3, #247
  87 0018 1370     		strb	r3, [r2]
  97:Generated_Source\PSoC5/CySpc.c **** 
  98:Generated_Source\PSoC5/CySpc.c ****     /* Restore global interrupt enable state */
  99:Generated_Source\PSoC5/CySpc.c ****     CyExitCriticalSection(interruptState);
  88              		.loc 1 99 0
  89 001a FFF7FEFF 		bl	CyExitCriticalSection
  90              	.LVL3:
  91 001e 08BD     		pop	{r3, pc}
  92              	.L8:
  93              		.align	2
  94              	.L7:
  95 0020 A0430040 		.word	1073759136
  96              		.cfi_endproc
  97              	.LFE1:
  98              		.size	CySpcStop, .-CySpcStop
  99              		.section	.text.CySpcReadData,"ax",%progbits
 100              		.align	2
 101              		.global	CySpcReadData
 102              		.thumb
 103              		.thumb_func
 104              		.type	CySpcReadData, %function
 105              	CySpcReadData:
 106              	.LFB2:
 100:Generated_Source\PSoC5/CySpc.c **** }
 101:Generated_Source\PSoC5/CySpc.c **** 
 102:Generated_Source\PSoC5/CySpc.c **** 
 103:Generated_Source\PSoC5/CySpc.c **** /*******************************************************************************
 104:Generated_Source\PSoC5/CySpc.c **** * Function Name: CySpcReadData
 105:Generated_Source\PSoC5/CySpc.c **** ****************************************************************************//**
 106:Generated_Source\PSoC5/CySpc.c **** *  Reads data from the SPC.
 107:Generated_Source\PSoC5/CySpc.c **** *
 108:Generated_Source\PSoC5/CySpc.c **** *  \param uint8 buffer:
 109:Generated_Source\PSoC5/CySpc.c **** *   Address to store data read.
 110:Generated_Source\PSoC5/CySpc.c **** *
 111:Generated_Source\PSoC5/CySpc.c **** *  \param uint8 size:
 112:Generated_Source\PSoC5/CySpc.c **** *   Number of bytes to read from the SPC.
 113:Generated_Source\PSoC5/CySpc.c **** *
 114:Generated_Source\PSoC5/CySpc.c **** * \return
 115:Generated_Source\PSoC5/CySpc.c **** *  uint8:
 116:Generated_Source\PSoC5/CySpc.c **** *   The number of bytes read from the SPC.
 117:Generated_Source\PSoC5/CySpc.c **** *
 118:Generated_Source\PSoC5/CySpc.c **** *******************************************************************************/
 119:Generated_Source\PSoC5/CySpc.c **** uint8 CySpcReadData(uint8 buffer[], uint8 size) 
 120:Generated_Source\PSoC5/CySpc.c **** {
 107              		.loc 1 120 0
 108              		.cfi_startproc
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 5


 109              		@ args = 0, pretend = 0, frame = 0
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111              	.LVL4:
 112 0000 70B5     		push	{r4, r5, r6, lr}
 113              		.cfi_def_cfa_offset 16
 114              		.cfi_offset 4, -16
 115              		.cfi_offset 5, -12
 116              		.cfi_offset 6, -8
 117              		.cfi_offset 14, -4
 118 0002 0646     		mov	r6, r0
 119 0004 0D46     		mov	r5, r1
 120              	.LVL5:
 121:Generated_Source\PSoC5/CySpc.c ****     uint8 i;
 122:Generated_Source\PSoC5/CySpc.c **** 
 123:Generated_Source\PSoC5/CySpc.c ****     for(i = 0u; i < size; i++)
 121              		.loc 1 123 0
 122 0006 0024     		movs	r4, #0
 123 0008 0CE0     		b	.L10
 124              	.LVL6:
 125              	.L11:
 124:Generated_Source\PSoC5/CySpc.c ****     {
 125:Generated_Source\PSoC5/CySpc.c ****         while(!CY_SPC_DATA_READY)
 126:Generated_Source\PSoC5/CySpc.c ****         {
 127:Generated_Source\PSoC5/CySpc.c ****             CyDelayUs(1u);
 126              		.loc 1 127 0
 127 000a 0120     		movs	r0, #1
 128 000c FFF7FEFF 		bl	CyDelayUs
 129              	.LVL7:
 130              	.L12:
 125:Generated_Source\PSoC5/CySpc.c ****         {
 131              		.loc 1 125 0
 132 0010 064B     		ldr	r3, .L14
 133 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 134 0014 13F0010F 		tst	r3, #1
 135 0018 F7D0     		beq	.L11
 128:Generated_Source\PSoC5/CySpc.c ****         }
 129:Generated_Source\PSoC5/CySpc.c ****         buffer[i] = CY_SPC_CPU_DATA_REG;
 136              		.loc 1 129 0 discriminator 2
 137 001a 054B     		ldr	r3, .L14+4
 138 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 139 001e 3355     		strb	r3, [r6, r4]
 123:Generated_Source\PSoC5/CySpc.c ****     {
 140              		.loc 1 123 0 discriminator 2
 141 0020 0134     		adds	r4, r4, #1
 142              	.LVL8:
 143 0022 E4B2     		uxtb	r4, r4
 144              	.LVL9:
 145              	.L10:
 123:Generated_Source\PSoC5/CySpc.c ****     {
 146              		.loc 1 123 0 is_stmt 0 discriminator 1
 147 0024 AC42     		cmp	r4, r5
 148 0026 F3D3     		bcc	.L12
 130:Generated_Source\PSoC5/CySpc.c ****     }
 131:Generated_Source\PSoC5/CySpc.c **** 
 132:Generated_Source\PSoC5/CySpc.c ****     return(i);
 133:Generated_Source\PSoC5/CySpc.c **** }
 149              		.loc 1 133 0 is_stmt 1
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 6


 150 0028 2046     		mov	r0, r4
 151 002a 70BD     		pop	{r4, r5, r6, pc}
 152              	.LVL10:
 153              	.L15:
 154              		.align	2
 155              	.L14:
 156 002c 22470040 		.word	1073760034
 157 0030 20470040 		.word	1073760032
 158              		.cfi_endproc
 159              	.LFE2:
 160              		.size	CySpcReadData, .-CySpcReadData
 161              		.section	.text.CySpcLoadMultiByte,"ax",%progbits
 162              		.align	2
 163              		.global	CySpcLoadMultiByte
 164              		.thumb
 165              		.thumb_func
 166              		.type	CySpcLoadMultiByte, %function
 167              	CySpcLoadMultiByte:
 168              	.LFB3:
 134:Generated_Source\PSoC5/CySpc.c **** 
 135:Generated_Source\PSoC5/CySpc.c **** 
 136:Generated_Source\PSoC5/CySpc.c **** /*******************************************************************************
 137:Generated_Source\PSoC5/CySpc.c **** * Function Name: CySpcLoadMultiByte
 138:Generated_Source\PSoC5/CySpc.c **** ****************************************************************************//**
 139:Generated_Source\PSoC5/CySpc.c **** *  Loads 1 to 32 bytes of data into the row latch of a Flash/EEPROM array.
 140:Generated_Source\PSoC5/CySpc.c **** *
 141:Generated_Source\PSoC5/CySpc.c **** *  \param uint8 array:
 142:Generated_Source\PSoC5/CySpc.c **** *   Id of the array.
 143:Generated_Source\PSoC5/CySpc.c **** *
 144:Generated_Source\PSoC5/CySpc.c **** *  \param uint16 address:
 145:Generated_Source\PSoC5/CySpc.c **** *   Flash/eeprom addrress
 146:Generated_Source\PSoC5/CySpc.c **** *
 147:Generated_Source\PSoC5/CySpc.c **** *  \param uint8* buffer:
 148:Generated_Source\PSoC5/CySpc.c **** *   Data to load to the row latch
 149:Generated_Source\PSoC5/CySpc.c **** *
 150:Generated_Source\PSoC5/CySpc.c **** *  \param uint16 number:
 151:Generated_Source\PSoC5/CySpc.c **** *   Number bytes to load.
 152:Generated_Source\PSoC5/CySpc.c **** *
 153:Generated_Source\PSoC5/CySpc.c **** * \return
 154:Generated_Source\PSoC5/CySpc.c **** *  CYRET_STARTED
 155:Generated_Source\PSoC5/CySpc.c **** *  CYRET_CANCELED
 156:Generated_Source\PSoC5/CySpc.c **** *  CYRET_LOCKED
 157:Generated_Source\PSoC5/CySpc.c **** *  CYRET_BAD_PARAM
 158:Generated_Source\PSoC5/CySpc.c **** *
 159:Generated_Source\PSoC5/CySpc.c **** *******************************************************************************/
 160:Generated_Source\PSoC5/CySpc.c **** cystatus CySpcLoadMultiByte(uint8 array, uint16 address, const uint8 buffer[], uint8 size)\
 161:Generated_Source\PSoC5/CySpc.c **** 
 162:Generated_Source\PSoC5/CySpc.c **** {
 169              		.loc 1 162 0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173              		@ link register save eliminated.
 174              	.LVL11:
 175 0000 30B4     		push	{r4, r5}
 176              		.cfi_def_cfa_offset 8
 177              		.cfi_offset 4, -8
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 7


 178              		.cfi_offset 5, -4
 179              	.LVL12:
 163:Generated_Source\PSoC5/CySpc.c ****     cystatus status = CYRET_STARTED;
 164:Generated_Source\PSoC5/CySpc.c ****     uint8 i;
 165:Generated_Source\PSoC5/CySpc.c **** 
 166:Generated_Source\PSoC5/CySpc.c ****     /***************************************************************************
 167:Generated_Source\PSoC5/CySpc.c ****     * Check if number is correct for array. Number must be less than
 168:Generated_Source\PSoC5/CySpc.c ****     * 32 for Flash or less than 16 for EEPROM.
 169:Generated_Source\PSoC5/CySpc.c ****     ***************************************************************************/
 170:Generated_Source\PSoC5/CySpc.c ****     if(((array < CY_SPC_LAST_FLASH_ARRAYID) && (size < 32u)) ||
 180              		.loc 1 170 0
 181 0002 3E28     		cmp	r0, #62
 182 0004 01D8     		bhi	.L17
 183              		.loc 1 170 0 is_stmt 0 discriminator 1
 184 0006 1F2B     		cmp	r3, #31
 185 0008 03D9     		bls	.L18
 186              	.L17:
 187              		.loc 1 170 0 discriminator 3
 188 000a 3F28     		cmp	r0, #63
 189 000c 27D9     		bls	.L22
 171:Generated_Source\PSoC5/CySpc.c ****        ((array > CY_SPC_LAST_FLASH_ARRAYID) && (size < 16u)))
 190              		.loc 1 171 0 is_stmt 1
 191 000e 0F2B     		cmp	r3, #15
 192 0010 27D8     		bhi	.L23
 193              	.L18:
 172:Generated_Source\PSoC5/CySpc.c ****     {
 173:Generated_Source\PSoC5/CySpc.c ****         if(CY_SPC_IDLE)
 194              		.loc 1 173 0
 195 0012 174C     		ldr	r4, .L27
 196 0014 2478     		ldrb	r4, [r4]	@ zero_extendqisi2
 197 0016 14F0020F 		tst	r4, #2
 198 001a 24D0     		beq	.L24
 174:Generated_Source\PSoC5/CySpc.c ****         {
 175:Generated_Source\PSoC5/CySpc.c ****             CY_SPC_CPU_DATA_REG = CY_SPC_KEY_ONE;
 199              		.loc 1 175 0
 200 001c 154C     		ldr	r4, .L27+4
 201 001e B625     		movs	r5, #182
 202 0020 2570     		strb	r5, [r4]
 176:Generated_Source\PSoC5/CySpc.c ****             CY_SPC_CPU_DATA_REG = CY_SPC_KEY_TWO(CY_SPC_CMD_LD_MULTI_BYTE);
 203              		.loc 1 176 0
 204 0022 D425     		movs	r5, #212
 205 0024 2570     		strb	r5, [r4]
 177:Generated_Source\PSoC5/CySpc.c ****             CY_SPC_CPU_DATA_REG = CY_SPC_CMD_LD_MULTI_BYTE;
 206              		.loc 1 177 0
 207 0026 0125     		movs	r5, #1
 208 0028 2570     		strb	r5, [r4]
 178:Generated_Source\PSoC5/CySpc.c **** 
 179:Generated_Source\PSoC5/CySpc.c ****             if(CY_SPC_BUSY)
 209              		.loc 1 179 0
 210 002a 0234     		adds	r4, r4, #2
 211 002c 2478     		ldrb	r4, [r4]	@ zero_extendqisi2
 212 002e 14F0020F 		tst	r4, #2
 213 0032 1AD1     		bne	.L25
 180:Generated_Source\PSoC5/CySpc.c ****             {
 181:Generated_Source\PSoC5/CySpc.c ****                 CY_SPC_CPU_DATA_REG = array;
 214              		.loc 1 181 0
 215 0034 0F4C     		ldr	r4, .L27+4
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 8


 216 0036 2070     		strb	r0, [r4]
 182:Generated_Source\PSoC5/CySpc.c ****                 CY_SPC_CPU_DATA_REG = 1u & HI8(address);
 217              		.loc 1 182 0
 218 0038 C1F30020 		ubfx	r0, r1, #8, #1
 219              	.LVL13:
 220 003c 2070     		strb	r0, [r4]
 221              	.LVL14:
 183:Generated_Source\PSoC5/CySpc.c ****                 CY_SPC_CPU_DATA_REG = LO8(address);
 222              		.loc 1 183 0
 223 003e C9B2     		uxtb	r1, r1
 224              	.LVL15:
 225 0040 2170     		strb	r1, [r4]
 184:Generated_Source\PSoC5/CySpc.c ****                 CY_SPC_CPU_DATA_REG = ((uint8)(size - 1u));
 226              		.loc 1 184 0
 227 0042 591E     		subs	r1, r3, #1
 228 0044 C9B2     		uxtb	r1, r1
 229 0046 2170     		strb	r1, [r4]
 230              	.LVL16:
 185:Generated_Source\PSoC5/CySpc.c **** 
 186:Generated_Source\PSoC5/CySpc.c ****                 for(i = 0u; i < size; i++)
 231              		.loc 1 186 0
 232 0048 0021     		movs	r1, #0
 233 004a 04E0     		b	.L20
 234              	.LVL17:
 235              	.L21:
 187:Generated_Source\PSoC5/CySpc.c ****                 {
 188:Generated_Source\PSoC5/CySpc.c ****                     CY_SPC_CPU_DATA_REG = buffer[i];
 236              		.loc 1 188 0 discriminator 3
 237 004c 545C     		ldrb	r4, [r2, r1]	@ zero_extendqisi2
 238 004e 0948     		ldr	r0, .L27+4
 239 0050 0470     		strb	r4, [r0]
 186:Generated_Source\PSoC5/CySpc.c ****                 {
 240              		.loc 1 186 0 discriminator 3
 241 0052 0131     		adds	r1, r1, #1
 242              	.LVL18:
 243 0054 C9B2     		uxtb	r1, r1
 244              	.LVL19:
 245              	.L20:
 186:Generated_Source\PSoC5/CySpc.c ****                 {
 246              		.loc 1 186 0 is_stmt 0 discriminator 1
 247 0056 9942     		cmp	r1, r3
 248 0058 F8D3     		bcc	.L21
 163:Generated_Source\PSoC5/CySpc.c ****     uint8 i;
 249              		.loc 1 163 0 is_stmt 1
 250 005a 0720     		movs	r0, #7
 251 005c 06E0     		b	.L19
 252              	.LVL20:
 253              	.L22:
 189:Generated_Source\PSoC5/CySpc.c ****                 }
 190:Generated_Source\PSoC5/CySpc.c ****             }
 191:Generated_Source\PSoC5/CySpc.c ****             else
 192:Generated_Source\PSoC5/CySpc.c ****             {
 193:Generated_Source\PSoC5/CySpc.c ****                 status = CYRET_CANCELED;
 194:Generated_Source\PSoC5/CySpc.c ****             }
 195:Generated_Source\PSoC5/CySpc.c ****         }
 196:Generated_Source\PSoC5/CySpc.c ****         else
 197:Generated_Source\PSoC5/CySpc.c ****         {
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 9


 198:Generated_Source\PSoC5/CySpc.c ****             status = CYRET_LOCKED;
 199:Generated_Source\PSoC5/CySpc.c ****         }
 200:Generated_Source\PSoC5/CySpc.c ****     }
 201:Generated_Source\PSoC5/CySpc.c ****     else
 202:Generated_Source\PSoC5/CySpc.c ****     {
 203:Generated_Source\PSoC5/CySpc.c ****         status = CYRET_BAD_PARAM;
 254              		.loc 1 203 0
 255 005e 0120     		movs	r0, #1
 256              	.LVL21:
 257 0060 04E0     		b	.L19
 258              	.LVL22:
 259              	.L23:
 260 0062 0120     		movs	r0, #1
 261              	.LVL23:
 262 0064 02E0     		b	.L19
 263              	.LVL24:
 264              	.L24:
 198:Generated_Source\PSoC5/CySpc.c ****         }
 265              		.loc 1 198 0
 266 0066 0420     		movs	r0, #4
 267              	.LVL25:
 268 0068 00E0     		b	.L19
 269              	.LVL26:
 270              	.L25:
 193:Generated_Source\PSoC5/CySpc.c ****             }
 271              		.loc 1 193 0
 272 006a 0920     		movs	r0, #9
 273              	.LVL27:
 274              	.L19:
 204:Generated_Source\PSoC5/CySpc.c ****     }
 205:Generated_Source\PSoC5/CySpc.c **** 
 206:Generated_Source\PSoC5/CySpc.c ****     return(status);
 207:Generated_Source\PSoC5/CySpc.c **** }
 275              		.loc 1 207 0
 276 006c 30BC     		pop	{r4, r5}
 277              		.cfi_restore 5
 278              		.cfi_restore 4
 279              		.cfi_def_cfa_offset 0
 280 006e 7047     		bx	lr
 281              	.L28:
 282              		.align	2
 283              	.L27:
 284 0070 22470040 		.word	1073760034
 285 0074 20470040 		.word	1073760032
 286              		.cfi_endproc
 287              	.LFE3:
 288              		.size	CySpcLoadMultiByte, .-CySpcLoadMultiByte
 289              		.section	.text.CySpcLoadRow,"ax",%progbits
 290              		.align	2
 291              		.global	CySpcLoadRow
 292              		.thumb
 293              		.thumb_func
 294              		.type	CySpcLoadRow, %function
 295              	CySpcLoadRow:
 296              	.LFB4:
 208:Generated_Source\PSoC5/CySpc.c **** 
 209:Generated_Source\PSoC5/CySpc.c **** 
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 10


 210:Generated_Source\PSoC5/CySpc.c **** /*******************************************************************************
 211:Generated_Source\PSoC5/CySpc.c **** * Function Name: CySpcLoadRow
 212:Generated_Source\PSoC5/CySpc.c **** ****************************************************************************//**
 213:Generated_Source\PSoC5/CySpc.c **** *  Loads a row of data into the row latch of a Flash/EEPROM array.
 214:Generated_Source\PSoC5/CySpc.c **** *
 215:Generated_Source\PSoC5/CySpc.c **** *  The buffer pointer should point to the data that should be written to the
 216:Generated_Source\PSoC5/CySpc.c **** *  flash row directly (no data in ECC/flash will be preserved). It is Flash API
 217:Generated_Source\PSoC5/CySpc.c **** *  responsibility to prepare data: the preserved data are copied from flash into
 218:Generated_Source\PSoC5/CySpc.c **** *  array with the modified data.
 219:Generated_Source\PSoC5/CySpc.c **** *
 220:Generated_Source\PSoC5/CySpc.c **** *  \param uint8 array:
 221:Generated_Source\PSoC5/CySpc.c **** *   Id of the array.
 222:Generated_Source\PSoC5/CySpc.c **** *
 223:Generated_Source\PSoC5/CySpc.c **** *  \param uint8* buffer:
 224:Generated_Source\PSoC5/CySpc.c **** *   Data to be loaded to the row latch
 225:Generated_Source\PSoC5/CySpc.c **** *
 226:Generated_Source\PSoC5/CySpc.c **** *  \param uint8 size:
 227:Generated_Source\PSoC5/CySpc.c **** *   The number of data bytes that the SPC expects to be written. Depends on the
 228:Generated_Source\PSoC5/CySpc.c **** *   type of the array and, if the array is Flash, whether ECC is being enabled
 229:Generated_Source\PSoC5/CySpc.c **** *   or not. There are following values: flash row latch size with ECC enabled,
 230:Generated_Source\PSoC5/CySpc.c **** *   flash row latch size with ECC disabled and EEPROM row latch size.
 231:Generated_Source\PSoC5/CySpc.c **** *
 232:Generated_Source\PSoC5/CySpc.c **** * \return
 233:Generated_Source\PSoC5/CySpc.c **** *  CYRET_STARTED
 234:Generated_Source\PSoC5/CySpc.c **** *  CYRET_CANCELED
 235:Generated_Source\PSoC5/CySpc.c **** *  CYRET_LOCKED
 236:Generated_Source\PSoC5/CySpc.c **** *
 237:Generated_Source\PSoC5/CySpc.c **** *******************************************************************************/
 238:Generated_Source\PSoC5/CySpc.c **** cystatus CySpcLoadRow(uint8 array, const uint8 buffer[], uint16 size)
 239:Generated_Source\PSoC5/CySpc.c **** {
 297              		.loc 1 239 0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 0, uses_anonymous_args = 0
 301              		@ link register save eliminated.
 302              	.LVL28:
 240:Generated_Source\PSoC5/CySpc.c ****     cystatus status = CYRET_STARTED;
 241:Generated_Source\PSoC5/CySpc.c ****     uint16 i;
 242:Generated_Source\PSoC5/CySpc.c **** 
 243:Generated_Source\PSoC5/CySpc.c ****     /* Make sure the SPC is ready to accept command */
 244:Generated_Source\PSoC5/CySpc.c ****     if(CY_SPC_IDLE)
 303              		.loc 1 244 0
 304 0000 124B     		ldr	r3, .L36
 305 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 306 0004 13F0020F 		tst	r3, #2
 307 0008 19D0     		beq	.L33
 239:Generated_Source\PSoC5/CySpc.c ****     cystatus status = CYRET_STARTED;
 308              		.loc 1 239 0
 309 000a 10B4     		push	{r4}
 310              		.cfi_def_cfa_offset 4
 311              		.cfi_offset 4, -4
 245:Generated_Source\PSoC5/CySpc.c ****     {
 246:Generated_Source\PSoC5/CySpc.c ****         CY_SPC_CPU_DATA_REG = CY_SPC_KEY_ONE;
 312              		.loc 1 246 0
 313 000c 104B     		ldr	r3, .L36+4
 314 000e B624     		movs	r4, #182
 315 0010 1C70     		strb	r4, [r3]
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 11


 247:Generated_Source\PSoC5/CySpc.c ****         CY_SPC_CPU_DATA_REG = CY_SPC_KEY_TWO(CY_SPC_CMD_LD_ROW);
 316              		.loc 1 247 0
 317 0012 D524     		movs	r4, #213
 318 0014 1C70     		strb	r4, [r3]
 248:Generated_Source\PSoC5/CySpc.c ****         CY_SPC_CPU_DATA_REG = CY_SPC_CMD_LD_ROW;
 319              		.loc 1 248 0
 320 0016 0224     		movs	r4, #2
 321 0018 1C70     		strb	r4, [r3]
 249:Generated_Source\PSoC5/CySpc.c **** 
 250:Generated_Source\PSoC5/CySpc.c ****         /* Make sure the command was accepted */
 251:Generated_Source\PSoC5/CySpc.c ****         if(CY_SPC_BUSY)
 322              		.loc 1 251 0
 323 001a 0233     		adds	r3, r3, #2
 324 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 325 001e 13F0020F 		tst	r3, #2
 326 0022 0ED1     		bne	.L34
 252:Generated_Source\PSoC5/CySpc.c ****         {
 253:Generated_Source\PSoC5/CySpc.c ****             CY_SPC_CPU_DATA_REG = array;
 327              		.loc 1 253 0
 328 0024 0A4B     		ldr	r3, .L36+4
 329 0026 1870     		strb	r0, [r3]
 330              	.LVL29:
 254:Generated_Source\PSoC5/CySpc.c **** 
 255:Generated_Source\PSoC5/CySpc.c ****             for(i = 0u; i < size; i++)
 331              		.loc 1 255 0
 332 0028 0023     		movs	r3, #0
 333 002a 04E0     		b	.L31
 334              	.LVL30:
 335              	.L32:
 256:Generated_Source\PSoC5/CySpc.c ****             {
 257:Generated_Source\PSoC5/CySpc.c ****                 CY_SPC_CPU_DATA_REG = buffer[i];
 336              		.loc 1 257 0 discriminator 3
 337 002c CC5C     		ldrb	r4, [r1, r3]	@ zero_extendqisi2
 338 002e 0848     		ldr	r0, .L36+4
 339 0030 0470     		strb	r4, [r0]
 255:Generated_Source\PSoC5/CySpc.c ****             {
 340              		.loc 1 255 0 discriminator 3
 341 0032 0133     		adds	r3, r3, #1
 342              	.LVL31:
 343 0034 9BB2     		uxth	r3, r3
 344              	.LVL32:
 345              	.L31:
 255:Generated_Source\PSoC5/CySpc.c ****             {
 346              		.loc 1 255 0 is_stmt 0 discriminator 1
 347 0036 9342     		cmp	r3, r2
 348 0038 F8D3     		bcc	.L32
 240:Generated_Source\PSoC5/CySpc.c ****     uint16 i;
 349              		.loc 1 240 0 is_stmt 1
 350 003a 0720     		movs	r0, #7
 351 003c 02E0     		b	.L30
 352              	.LVL33:
 353              	.L33:
 354              		.cfi_def_cfa_offset 0
 355              		.cfi_restore 4
 258:Generated_Source\PSoC5/CySpc.c ****             }
 259:Generated_Source\PSoC5/CySpc.c ****         }
 260:Generated_Source\PSoC5/CySpc.c ****         else
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 12


 261:Generated_Source\PSoC5/CySpc.c ****         {
 262:Generated_Source\PSoC5/CySpc.c ****             status = CYRET_CANCELED;
 263:Generated_Source\PSoC5/CySpc.c ****         }
 264:Generated_Source\PSoC5/CySpc.c ****     }
 265:Generated_Source\PSoC5/CySpc.c ****     else
 266:Generated_Source\PSoC5/CySpc.c ****     {
 267:Generated_Source\PSoC5/CySpc.c ****         status = CYRET_LOCKED;
 356              		.loc 1 267 0
 357 003e 0420     		movs	r0, #4
 358              	.LVL34:
 268:Generated_Source\PSoC5/CySpc.c ****     }
 269:Generated_Source\PSoC5/CySpc.c **** 
 270:Generated_Source\PSoC5/CySpc.c ****     return(status);
 271:Generated_Source\PSoC5/CySpc.c **** }
 359              		.loc 1 271 0
 360 0040 7047     		bx	lr
 361              	.LVL35:
 362              	.L34:
 363              		.cfi_def_cfa_offset 4
 364              		.cfi_offset 4, -4
 262:Generated_Source\PSoC5/CySpc.c ****         }
 365              		.loc 1 262 0
 366 0042 0920     		movs	r0, #9
 367              	.LVL36:
 368              	.L30:
 369              		.loc 1 271 0
 370 0044 5DF8044B 		ldr	r4, [sp], #4
 371              		.cfi_restore 4
 372              		.cfi_def_cfa_offset 0
 373 0048 7047     		bx	lr
 374              	.L37:
 375 004a 00BF     		.align	2
 376              	.L36:
 377 004c 22470040 		.word	1073760034
 378 0050 20470040 		.word	1073760032
 379              		.cfi_endproc
 380              	.LFE4:
 381              		.size	CySpcLoadRow, .-CySpcLoadRow
 382              		.section	.text.CySpcLoadRowFull,"ax",%progbits
 383              		.align	2
 384              		.global	CySpcLoadRowFull
 385              		.thumb
 386              		.thumb_func
 387              		.type	CySpcLoadRowFull, %function
 388              	CySpcLoadRowFull:
 389              	.LFB5:
 272:Generated_Source\PSoC5/CySpc.c **** 
 273:Generated_Source\PSoC5/CySpc.c **** 
 274:Generated_Source\PSoC5/CySpc.c **** /*******************************************************************************
 275:Generated_Source\PSoC5/CySpc.c **** * Function Name: CySpcLoadRowFull
 276:Generated_Source\PSoC5/CySpc.c **** ****************************************************************************//**
 277:Generated_Source\PSoC5/CySpc.c **** *  Loads a row of data into the row latch of a Flash/EEPROM array.
 278:Generated_Source\PSoC5/CySpc.c **** *
 279:Generated_Source\PSoC5/CySpc.c **** *  The only data that are going to be changed should be passed. The function
 280:Generated_Source\PSoC5/CySpc.c **** *  will handle unmodified data preservation based on DWR settings and input
 281:Generated_Source\PSoC5/CySpc.c **** *  parameters.
 282:Generated_Source\PSoC5/CySpc.c **** *
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 13


 283:Generated_Source\PSoC5/CySpc.c **** *  \param uint8 array:
 284:Generated_Source\PSoC5/CySpc.c **** *   Id of the array.
 285:Generated_Source\PSoC5/CySpc.c **** *
 286:Generated_Source\PSoC5/CySpc.c **** *  \param uint16 row:
 287:Generated_Source\PSoC5/CySpc.c **** *   Flash row number to be loaded.
 288:Generated_Source\PSoC5/CySpc.c **** *
 289:Generated_Source\PSoC5/CySpc.c **** *  \param uint8* buffer:
 290:Generated_Source\PSoC5/CySpc.c **** *   Data to be loaded to the row latch
 291:Generated_Source\PSoC5/CySpc.c **** *
 292:Generated_Source\PSoC5/CySpc.c **** *  \param uint8 size:
 293:Generated_Source\PSoC5/CySpc.c **** *   The number of data bytes that the SPC expects to be written. Depends on the
 294:Generated_Source\PSoC5/CySpc.c **** *   type of the array and, if the array is Flash, whether ECC is being enabled
 295:Generated_Source\PSoC5/CySpc.c **** *   or not. There are following values: flash row latch size with ECC enabled,
 296:Generated_Source\PSoC5/CySpc.c **** *   flash row latch size with ECC disabled and EEPROM row latch size.
 297:Generated_Source\PSoC5/CySpc.c **** *
 298:Generated_Source\PSoC5/CySpc.c **** * \return
 299:Generated_Source\PSoC5/CySpc.c **** *  CYRET_STARTED
 300:Generated_Source\PSoC5/CySpc.c **** *  CYRET_CANCELED
 301:Generated_Source\PSoC5/CySpc.c **** *  CYRET_LOCKED
 302:Generated_Source\PSoC5/CySpc.c **** *
 303:Generated_Source\PSoC5/CySpc.c **** *******************************************************************************/
 304:Generated_Source\PSoC5/CySpc.c **** cystatus CySpcLoadRowFull(uint8 array, uint16 row, const uint8 buffer[], uint16 size)\
 305:Generated_Source\PSoC5/CySpc.c **** 
 306:Generated_Source\PSoC5/CySpc.c **** {
 390              		.loc 1 306 0
 391              		.cfi_startproc
 392              		@ args = 0, pretend = 0, frame = 0
 393              		@ frame_needed = 0, uses_anonymous_args = 0
 394              		@ link register save eliminated.
 395              	.LVL37:
 396 0000 F0B4     		push	{r4, r5, r6, r7}
 397              		.cfi_def_cfa_offset 16
 398              		.cfi_offset 4, -16
 399              		.cfi_offset 5, -12
 400              		.cfi_offset 6, -8
 401              		.cfi_offset 7, -4
 402              	.LVL38:
 307:Generated_Source\PSoC5/CySpc.c ****     cystatus status = CYRET_STARTED;
 308:Generated_Source\PSoC5/CySpc.c ****     uint16 i;
 309:Generated_Source\PSoC5/CySpc.c **** 
 310:Generated_Source\PSoC5/CySpc.c ****     #if (CYDEV_ECC_ENABLE == 0)
 311:Generated_Source\PSoC5/CySpc.c ****         uint32 offset;
 312:Generated_Source\PSoC5/CySpc.c ****     #endif /* (CYDEV_ECC_ENABLE == 0) */
 313:Generated_Source\PSoC5/CySpc.c **** 
 314:Generated_Source\PSoC5/CySpc.c ****     /* Make sure the SPC is ready to accept command */
 315:Generated_Source\PSoC5/CySpc.c ****     if(CY_SPC_IDLE)
 403              		.loc 1 315 0
 404 0002 264C     		ldr	r4, .L53
 405 0004 2478     		ldrb	r4, [r4]	@ zero_extendqisi2
 406 0006 14F0020F 		tst	r4, #2
 407 000a 3ED0     		beq	.L48
 316:Generated_Source\PSoC5/CySpc.c ****     {
 317:Generated_Source\PSoC5/CySpc.c ****         CY_SPC_CPU_DATA_REG = CY_SPC_KEY_ONE;
 408              		.loc 1 317 0
 409 000c 244C     		ldr	r4, .L53+4
 410 000e B625     		movs	r5, #182
 411 0010 2570     		strb	r5, [r4]
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 14


 318:Generated_Source\PSoC5/CySpc.c ****         CY_SPC_CPU_DATA_REG = CY_SPC_KEY_TWO(CY_SPC_CMD_LD_ROW);
 412              		.loc 1 318 0
 413 0012 D525     		movs	r5, #213
 414 0014 2570     		strb	r5, [r4]
 319:Generated_Source\PSoC5/CySpc.c ****         CY_SPC_CPU_DATA_REG = CY_SPC_CMD_LD_ROW;
 415              		.loc 1 319 0
 416 0016 0225     		movs	r5, #2
 417 0018 2570     		strb	r5, [r4]
 320:Generated_Source\PSoC5/CySpc.c **** 
 321:Generated_Source\PSoC5/CySpc.c ****         /* Make sure the command was accepted */
 322:Generated_Source\PSoC5/CySpc.c ****         if(CY_SPC_BUSY)
 418              		.loc 1 322 0
 419 001a 0234     		adds	r4, r4, #2
 420 001c 2478     		ldrb	r4, [r4]	@ zero_extendqisi2
 421 001e 14F0020F 		tst	r4, #2
 422 0022 34D1     		bne	.L49
 323:Generated_Source\PSoC5/CySpc.c ****         {
 324:Generated_Source\PSoC5/CySpc.c ****             CY_SPC_CPU_DATA_REG = array;
 423              		.loc 1 324 0
 424 0024 1E4C     		ldr	r4, .L53+4
 425 0026 2070     		strb	r0, [r4]
 325:Generated_Source\PSoC5/CySpc.c **** 
 326:Generated_Source\PSoC5/CySpc.c ****             /*******************************************************************
 327:Generated_Source\PSoC5/CySpc.c ****             * If "Enable Error Correcting Code (ECC)" and "Store Configuration
 328:Generated_Source\PSoC5/CySpc.c ****             * Data in ECC" DWR options are disabled, ECC section is available
 329:Generated_Source\PSoC5/CySpc.c ****             * for user data.
 330:Generated_Source\PSoC5/CySpc.c ****             *******************************************************************/
 331:Generated_Source\PSoC5/CySpc.c ****             #if ((CYDEV_ECC_ENABLE == 0u) && (CYDEV_CONFIGURATION_ECC == 0u))
 332:Generated_Source\PSoC5/CySpc.c **** 
 333:Generated_Source\PSoC5/CySpc.c ****                 /*******************************************************************
 334:Generated_Source\PSoC5/CySpc.c ****                 * If size parameter equals size of the ECC row and selected array
 335:Generated_Source\PSoC5/CySpc.c ****                 * identification corresponds to the flash array (but not to EEPROM
 336:Generated_Source\PSoC5/CySpc.c ****                 * array) then data are going to be written to the ECC section.
 337:Generated_Source\PSoC5/CySpc.c ****                 * In this case flash data must be preserved. The flash data copied
 338:Generated_Source\PSoC5/CySpc.c ****                 * from flash data section to the SPC data register.
 339:Generated_Source\PSoC5/CySpc.c ****                 *******************************************************************/
 340:Generated_Source\PSoC5/CySpc.c ****                 if ((size == CYDEV_ECC_ROW_SIZE) && (array <= CY_SPC_LAST_FLASH_ARRAYID))
 426              		.loc 1 340 0
 427 0028 202B     		cmp	r3, #32
 428 002a 01D1     		bne	.L40
 429              		.loc 1 340 0 is_stmt 0 discriminator 1
 430 002c 3F28     		cmp	r0, #63
 431 002e 01D9     		bls	.L41
 432              	.L40:
 341:Generated_Source\PSoC5/CySpc.c ****                 {
 342:Generated_Source\PSoC5/CySpc.c ****                     offset = CYDEV_FLS_BASE +
 343:Generated_Source\PSoC5/CySpc.c ****                              ((uint32) array * CYDEV_FLS_SECTOR_SIZE) +
 344:Generated_Source\PSoC5/CySpc.c ****                              ((uint32)   row * CYDEV_FLS_ROW_SIZE   );
 345:Generated_Source\PSoC5/CySpc.c **** 
 346:Generated_Source\PSoC5/CySpc.c ****                     for (i = 0u; i < CYDEV_FLS_ROW_SIZE; i++)
 433              		.loc 1 346 0 is_stmt 1 discriminator 1
 434 0030 0024     		movs	r4, #0
 435 0032 12E0     		b	.L42
 436              	.L41:
 343:Generated_Source\PSoC5/CySpc.c ****                              ((uint32)   row * CYDEV_FLS_ROW_SIZE   );
 437              		.loc 1 343 0
 438 0034 01EB0027 		add	r7, r1, r0, lsl #8
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 15


 342:Generated_Source\PSoC5/CySpc.c ****                              ((uint32) array * CYDEV_FLS_SECTOR_SIZE) +
 439              		.loc 1 342 0
 440 0038 3F02     		lsls	r7, r7, #8
 441              	.LVL39:
 442              		.loc 1 346 0
 443 003a 0024     		movs	r4, #0
 444 003c 05E0     		b	.L43
 445              	.LVL40:
 446              	.L44:
 347:Generated_Source\PSoC5/CySpc.c ****                     {
 348:Generated_Source\PSoC5/CySpc.c ****                         CY_SPC_CPU_DATA_REG = CY_GET_XTND_REG8((void CYFAR *)(offset + i));
 447              		.loc 1 348 0 discriminator 3
 448 003e E55D     		ldrb	r5, [r4, r7]	@ zero_extendqisi2
 449 0040 EDB2     		uxtb	r5, r5
 450 0042 174E     		ldr	r6, .L53+4
 451 0044 3570     		strb	r5, [r6]
 346:Generated_Source\PSoC5/CySpc.c ****                     {
 452              		.loc 1 346 0 discriminator 3
 453 0046 0134     		adds	r4, r4, #1
 454              	.LVL41:
 455 0048 A4B2     		uxth	r4, r4
 456              	.LVL42:
 457              	.L43:
 346:Generated_Source\PSoC5/CySpc.c ****                     {
 458              		.loc 1 346 0 is_stmt 0 discriminator 1
 459 004a FF2C     		cmp	r4, #255
 460 004c F7D9     		bls	.L44
 461 004e EFE7     		b	.L40
 462              	.LVL43:
 463              	.L45:
 349:Generated_Source\PSoC5/CySpc.c ****                     }
 350:Generated_Source\PSoC5/CySpc.c ****                 }
 351:Generated_Source\PSoC5/CySpc.c **** 
 352:Generated_Source\PSoC5/CySpc.c ****             #endif /* ((CYDEV_ECC_ENABLE == 0u) && (CYDEV_CONFIGURATION_ECC == 0u)) */
 353:Generated_Source\PSoC5/CySpc.c **** 
 354:Generated_Source\PSoC5/CySpc.c **** 
 355:Generated_Source\PSoC5/CySpc.c ****             for(i = 0u; i < size; i++)
 356:Generated_Source\PSoC5/CySpc.c ****             {
 357:Generated_Source\PSoC5/CySpc.c ****                 CY_SPC_CPU_DATA_REG = buffer[i];
 464              		.loc 1 357 0 is_stmt 1 discriminator 3
 465 0050 165D     		ldrb	r6, [r2, r4]	@ zero_extendqisi2
 466 0052 134D     		ldr	r5, .L53+4
 467 0054 2E70     		strb	r6, [r5]
 355:Generated_Source\PSoC5/CySpc.c ****             {
 468              		.loc 1 355 0 discriminator 3
 469 0056 0134     		adds	r4, r4, #1
 470              	.LVL44:
 471 0058 A4B2     		uxth	r4, r4
 472              	.LVL45:
 473              	.L42:
 355:Generated_Source\PSoC5/CySpc.c ****             {
 474              		.loc 1 355 0 is_stmt 0 discriminator 1
 475 005a 9C42     		cmp	r4, r3
 476 005c F8D3     		bcc	.L45
 358:Generated_Source\PSoC5/CySpc.c ****             }
 359:Generated_Source\PSoC5/CySpc.c **** 
 360:Generated_Source\PSoC5/CySpc.c **** 
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 16


 361:Generated_Source\PSoC5/CySpc.c ****             /*******************************************************************
 362:Generated_Source\PSoC5/CySpc.c ****             * If "Enable Error Correcting Code (ECC)" DWR option is disabled,
 363:Generated_Source\PSoC5/CySpc.c ****             * ECC section can be used for storing device configuration data
 364:Generated_Source\PSoC5/CySpc.c ****             * ("Store Configuration Data in ECC" DWR option is enabled) or for
 365:Generated_Source\PSoC5/CySpc.c ****             * storing user data in the ECC section ("Store Configuration Data in
 366:Generated_Source\PSoC5/CySpc.c ****             * ECC" DWR option is enabled). In both cases, the data in the ECC
 367:Generated_Source\PSoC5/CySpc.c ****             * section must be preserved if flash data is written.
 368:Generated_Source\PSoC5/CySpc.c ****             *******************************************************************/
 369:Generated_Source\PSoC5/CySpc.c ****             #if (CYDEV_ECC_ENABLE == 0)
 370:Generated_Source\PSoC5/CySpc.c **** 
 371:Generated_Source\PSoC5/CySpc.c **** 
 372:Generated_Source\PSoC5/CySpc.c ****                 /*******************************************************************
 373:Generated_Source\PSoC5/CySpc.c ****                 * If size parameter equals size of the flash row and selected array
 374:Generated_Source\PSoC5/CySpc.c ****                 * identification corresponds to the flash array (but not to EEPROM
 375:Generated_Source\PSoC5/CySpc.c ****                 * array) then data are going to be written to the flash data
 376:Generated_Source\PSoC5/CySpc.c ****                 * section. In this case, ECC section data must be preserved.
 377:Generated_Source\PSoC5/CySpc.c ****                 * The ECC section data copied from ECC section to the SPC data
 378:Generated_Source\PSoC5/CySpc.c ****                 * register.
 379:Generated_Source\PSoC5/CySpc.c ****                 *******************************************************************/
 380:Generated_Source\PSoC5/CySpc.c ****                 if ((size == CYDEV_FLS_ROW_SIZE) && (array <= CY_SPC_LAST_FLASH_ARRAYID))
 477              		.loc 1 380 0 is_stmt 1
 478 005e B3F5807F 		cmp	r3, #256
 479 0062 16D1     		bne	.L50
 480              		.loc 1 380 0 is_stmt 0 discriminator 1
 481 0064 3F28     		cmp	r0, #63
 482 0066 16D8     		bhi	.L51
 381:Generated_Source\PSoC5/CySpc.c ****                 {
 382:Generated_Source\PSoC5/CySpc.c ****                     offset = CYDEV_ECC_BASE +
 383:Generated_Source\PSoC5/CySpc.c ****                             ((uint32) array * CYDEV_ECC_SECTOR_SIZE) +
 483              		.loc 1 383 0 is_stmt 1
 484 0068 00F51030 		add	r0, r0, #147456
 485              	.LVL46:
 486 006c 01EB0021 		add	r1, r1, r0, lsl #8
 487              	.LVL47:
 382:Generated_Source\PSoC5/CySpc.c ****                             ((uint32) array * CYDEV_ECC_SECTOR_SIZE) +
 488              		.loc 1 382 0
 489 0070 4801     		lsls	r0, r1, #5
 490              	.LVL48:
 384:Generated_Source\PSoC5/CySpc.c ****                             ((uint32) row   * CYDEV_ECC_ROW_SIZE   );
 385:Generated_Source\PSoC5/CySpc.c **** 
 386:Generated_Source\PSoC5/CySpc.c ****                     for (i = 0u; i < CYDEV_ECC_ROW_SIZE; i++)
 491              		.loc 1 386 0
 492 0072 0023     		movs	r3, #0
 493              	.LVL49:
 494 0074 05E0     		b	.L46
 495              	.LVL50:
 496              	.L47:
 387:Generated_Source\PSoC5/CySpc.c ****                     {
 388:Generated_Source\PSoC5/CySpc.c ****                         CY_SPC_CPU_DATA_REG = CY_GET_XTND_REG8((void CYFAR *)(offset + i));
 497              		.loc 1 388 0 discriminator 3
 498 0076 1A5C     		ldrb	r2, [r3, r0]	@ zero_extendqisi2
 499 0078 D2B2     		uxtb	r2, r2
 500 007a 0949     		ldr	r1, .L53+4
 501 007c 0A70     		strb	r2, [r1]
 386:Generated_Source\PSoC5/CySpc.c ****                     {
 502              		.loc 1 386 0 discriminator 3
 503 007e 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 17


 504              	.LVL51:
 505 0080 9BB2     		uxth	r3, r3
 506              	.LVL52:
 507              	.L46:
 386:Generated_Source\PSoC5/CySpc.c ****                     {
 508              		.loc 1 386 0 is_stmt 0 discriminator 1
 509 0082 1F2B     		cmp	r3, #31
 510 0084 F7D9     		bls	.L47
 307:Generated_Source\PSoC5/CySpc.c ****     uint16 i;
 511              		.loc 1 307 0 is_stmt 1
 512 0086 0720     		movs	r0, #7
 513              	.LVL53:
 514 0088 06E0     		b	.L39
 515              	.LVL54:
 516              	.L48:
 389:Generated_Source\PSoC5/CySpc.c ****                     }
 390:Generated_Source\PSoC5/CySpc.c ****                 }
 391:Generated_Source\PSoC5/CySpc.c **** 
 392:Generated_Source\PSoC5/CySpc.c ****             #else
 393:Generated_Source\PSoC5/CySpc.c **** 
 394:Generated_Source\PSoC5/CySpc.c ****                 if(0u != row)
 395:Generated_Source\PSoC5/CySpc.c ****                 {
 396:Generated_Source\PSoC5/CySpc.c ****                     /* To remove unreferenced local variable warning */
 397:Generated_Source\PSoC5/CySpc.c ****                 }
 398:Generated_Source\PSoC5/CySpc.c **** 
 399:Generated_Source\PSoC5/CySpc.c ****             #endif /* (CYDEV_ECC_ENABLE == 0) */
 400:Generated_Source\PSoC5/CySpc.c ****         }
 401:Generated_Source\PSoC5/CySpc.c ****         else
 402:Generated_Source\PSoC5/CySpc.c ****         {
 403:Generated_Source\PSoC5/CySpc.c ****             status = CYRET_CANCELED;
 404:Generated_Source\PSoC5/CySpc.c ****         }
 405:Generated_Source\PSoC5/CySpc.c ****     }
 406:Generated_Source\PSoC5/CySpc.c ****     else
 407:Generated_Source\PSoC5/CySpc.c ****     {
 408:Generated_Source\PSoC5/CySpc.c ****         status = CYRET_LOCKED;
 517              		.loc 1 408 0
 518 008a 0420     		movs	r0, #4
 519              	.LVL55:
 520 008c 04E0     		b	.L39
 521              	.LVL56:
 522              	.L49:
 403:Generated_Source\PSoC5/CySpc.c ****         }
 523              		.loc 1 403 0
 524 008e 0920     		movs	r0, #9
 525              	.LVL57:
 526 0090 02E0     		b	.L39
 527              	.LVL58:
 528              	.L50:
 307:Generated_Source\PSoC5/CySpc.c ****     uint16 i;
 529              		.loc 1 307 0
 530 0092 0720     		movs	r0, #7
 531              	.LVL59:
 532 0094 00E0     		b	.L39
 533              	.LVL60:
 534              	.L51:
 535 0096 0720     		movs	r0, #7
 536              	.LVL61:
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 18


 537              	.L39:
 409:Generated_Source\PSoC5/CySpc.c ****     }
 410:Generated_Source\PSoC5/CySpc.c **** 
 411:Generated_Source\PSoC5/CySpc.c ****     return(status);
 412:Generated_Source\PSoC5/CySpc.c **** }
 538              		.loc 1 412 0
 539 0098 F0BC     		pop	{r4, r5, r6, r7}
 540              		.cfi_restore 7
 541              		.cfi_restore 6
 542              		.cfi_restore 5
 543              		.cfi_restore 4
 544              		.cfi_def_cfa_offset 0
 545 009a 7047     		bx	lr
 546              	.L54:
 547              		.align	2
 548              	.L53:
 549 009c 22470040 		.word	1073760034
 550 00a0 20470040 		.word	1073760032
 551              		.cfi_endproc
 552              	.LFE5:
 553              		.size	CySpcLoadRowFull, .-CySpcLoadRowFull
 554              		.section	.text.CySpcWriteRow,"ax",%progbits
 555              		.align	2
 556              		.global	CySpcWriteRow
 557              		.thumb
 558              		.thumb_func
 559              		.type	CySpcWriteRow, %function
 560              	CySpcWriteRow:
 561              	.LFB6:
 413:Generated_Source\PSoC5/CySpc.c **** 
 414:Generated_Source\PSoC5/CySpc.c **** 
 415:Generated_Source\PSoC5/CySpc.c **** /*******************************************************************************
 416:Generated_Source\PSoC5/CySpc.c **** * Function Name: CySpcWriteRow
 417:Generated_Source\PSoC5/CySpc.c **** ****************************************************************************//**
 418:Generated_Source\PSoC5/CySpc.c **** *  Erases then programs a row in Flash/EEPROM with data in row latch.
 419:Generated_Source\PSoC5/CySpc.c **** *
 420:Generated_Source\PSoC5/CySpc.c **** *  \param uint8 array:
 421:Generated_Source\PSoC5/CySpc.c **** *   Id of the array.
 422:Generated_Source\PSoC5/CySpc.c **** *
 423:Generated_Source\PSoC5/CySpc.c **** *  \param uint16 address:
 424:Generated_Source\PSoC5/CySpc.c **** *   flash/eeprom addrress
 425:Generated_Source\PSoC5/CySpc.c **** *
 426:Generated_Source\PSoC5/CySpc.c **** *  \param uint8 tempPolarity:
 427:Generated_Source\PSoC5/CySpc.c **** *   temperature polarity.
 428:Generated_Source\PSoC5/CySpc.c **** *   \param 1: the Temp Magnitude is interpreted as a positive value
 429:Generated_Source\PSoC5/CySpc.c **** *   \param 0: the Temp Magnitude is interpreted as a negative value
 430:Generated_Source\PSoC5/CySpc.c **** *
 431:Generated_Source\PSoC5/CySpc.c **** *  \param uint8 tempMagnitude:
 432:Generated_Source\PSoC5/CySpc.c **** *   temperature magnitude.
 433:Generated_Source\PSoC5/CySpc.c **** *
 434:Generated_Source\PSoC5/CySpc.c **** * \return
 435:Generated_Source\PSoC5/CySpc.c **** *  CYRET_STARTED
 436:Generated_Source\PSoC5/CySpc.c **** *  CYRET_CANCELED
 437:Generated_Source\PSoC5/CySpc.c **** *  CYRET_LOCKED
 438:Generated_Source\PSoC5/CySpc.c **** *
 439:Generated_Source\PSoC5/CySpc.c **** *******************************************************************************/
 440:Generated_Source\PSoC5/CySpc.c **** cystatus CySpcWriteRow(uint8 array, uint16 address, uint8 tempPolarity, uint8 tempMagnitude)\
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 19


 441:Generated_Source\PSoC5/CySpc.c **** 
 442:Generated_Source\PSoC5/CySpc.c **** {
 562              		.loc 1 442 0
 563              		.cfi_startproc
 564              		@ args = 0, pretend = 0, frame = 0
 565              		@ frame_needed = 0, uses_anonymous_args = 0
 566              		@ link register save eliminated.
 567              	.LVL62:
 568 0000 30B4     		push	{r4, r5}
 569              		.cfi_def_cfa_offset 8
 570              		.cfi_offset 4, -8
 571              		.cfi_offset 5, -4
 572              	.LVL63:
 443:Generated_Source\PSoC5/CySpc.c ****     cystatus status = CYRET_STARTED;
 444:Generated_Source\PSoC5/CySpc.c **** 
 445:Generated_Source\PSoC5/CySpc.c ****     /* Make sure the SPC is ready to accept command */
 446:Generated_Source\PSoC5/CySpc.c ****     if(CY_SPC_IDLE)
 573              		.loc 1 446 0
 574 0002 104C     		ldr	r4, .L60
 575 0004 2478     		ldrb	r4, [r4]	@ zero_extendqisi2
 576 0006 14F0020F 		tst	r4, #2
 577 000a 15D0     		beq	.L57
 447:Generated_Source\PSoC5/CySpc.c ****     {
 448:Generated_Source\PSoC5/CySpc.c ****         CY_SPC_CPU_DATA_REG = CY_SPC_KEY_ONE;
 578              		.loc 1 448 0
 579 000c 0E4C     		ldr	r4, .L60+4
 580 000e B625     		movs	r5, #182
 581 0010 2570     		strb	r5, [r4]
 449:Generated_Source\PSoC5/CySpc.c ****         CY_SPC_CPU_DATA_REG = CY_SPC_KEY_TWO(CY_SPC_CMD_WR_ROW);
 582              		.loc 1 449 0
 583 0012 D825     		movs	r5, #216
 584 0014 2570     		strb	r5, [r4]
 450:Generated_Source\PSoC5/CySpc.c ****         CY_SPC_CPU_DATA_REG = CY_SPC_CMD_WR_ROW;
 585              		.loc 1 450 0
 586 0016 0525     		movs	r5, #5
 587 0018 2570     		strb	r5, [r4]
 451:Generated_Source\PSoC5/CySpc.c **** 
 452:Generated_Source\PSoC5/CySpc.c ****         /* Make sure the command was accepted */
 453:Generated_Source\PSoC5/CySpc.c ****         if(CY_SPC_BUSY)
 588              		.loc 1 453 0
 589 001a 0234     		adds	r4, r4, #2
 590 001c 2478     		ldrb	r4, [r4]	@ zero_extendqisi2
 591 001e 14F0020F 		tst	r4, #2
 592 0022 0BD1     		bne	.L58
 454:Generated_Source\PSoC5/CySpc.c ****         {
 455:Generated_Source\PSoC5/CySpc.c ****             CY_SPC_CPU_DATA_REG = array;
 593              		.loc 1 455 0
 594 0024 084C     		ldr	r4, .L60+4
 595 0026 2070     		strb	r0, [r4]
 456:Generated_Source\PSoC5/CySpc.c ****             CY_SPC_CPU_DATA_REG = HI8(address);
 596              		.loc 1 456 0
 597 0028 080A     		lsrs	r0, r1, #8
 598              	.LVL64:
 599 002a 2070     		strb	r0, [r4]
 600              	.LVL65:
 457:Generated_Source\PSoC5/CySpc.c ****             CY_SPC_CPU_DATA_REG = LO8(address);
 601              		.loc 1 457 0
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 20


 602 002c C9B2     		uxtb	r1, r1
 603              	.LVL66:
 604 002e 2170     		strb	r1, [r4]
 458:Generated_Source\PSoC5/CySpc.c ****             CY_SPC_CPU_DATA_REG = tempPolarity;
 605              		.loc 1 458 0
 606 0030 2270     		strb	r2, [r4]
 459:Generated_Source\PSoC5/CySpc.c ****             CY_SPC_CPU_DATA_REG = tempMagnitude;
 607              		.loc 1 459 0
 608 0032 2370     		strb	r3, [r4]
 443:Generated_Source\PSoC5/CySpc.c **** 
 609              		.loc 1 443 0
 610 0034 0720     		movs	r0, #7
 611 0036 02E0     		b	.L56
 612              	.LVL67:
 613              	.L57:
 460:Generated_Source\PSoC5/CySpc.c ****         }
 461:Generated_Source\PSoC5/CySpc.c ****         else
 462:Generated_Source\PSoC5/CySpc.c ****         {
 463:Generated_Source\PSoC5/CySpc.c ****             status = CYRET_CANCELED;
 464:Generated_Source\PSoC5/CySpc.c ****         }
 465:Generated_Source\PSoC5/CySpc.c ****     }
 466:Generated_Source\PSoC5/CySpc.c ****     else
 467:Generated_Source\PSoC5/CySpc.c ****     {
 468:Generated_Source\PSoC5/CySpc.c ****         status = CYRET_LOCKED;
 614              		.loc 1 468 0
 615 0038 0420     		movs	r0, #4
 616              	.LVL68:
 617 003a 00E0     		b	.L56
 618              	.LVL69:
 619              	.L58:
 463:Generated_Source\PSoC5/CySpc.c ****         }
 620              		.loc 1 463 0
 621 003c 0920     		movs	r0, #9
 622              	.LVL70:
 623              	.L56:
 469:Generated_Source\PSoC5/CySpc.c ****     }
 470:Generated_Source\PSoC5/CySpc.c **** 
 471:Generated_Source\PSoC5/CySpc.c ****     return(status);
 472:Generated_Source\PSoC5/CySpc.c **** }
 624              		.loc 1 472 0
 625 003e 30BC     		pop	{r4, r5}
 626              		.cfi_restore 5
 627              		.cfi_restore 4
 628              		.cfi_def_cfa_offset 0
 629 0040 7047     		bx	lr
 630              	.L61:
 631 0042 00BF     		.align	2
 632              	.L60:
 633 0044 22470040 		.word	1073760034
 634 0048 20470040 		.word	1073760032
 635              		.cfi_endproc
 636              	.LFE6:
 637              		.size	CySpcWriteRow, .-CySpcWriteRow
 638              		.section	.text.CySpcEraseSector,"ax",%progbits
 639              		.align	2
 640              		.global	CySpcEraseSector
 641              		.thumb
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 21


 642              		.thumb_func
 643              		.type	CySpcEraseSector, %function
 644              	CySpcEraseSector:
 645              	.LFB7:
 473:Generated_Source\PSoC5/CySpc.c **** 
 474:Generated_Source\PSoC5/CySpc.c **** 
 475:Generated_Source\PSoC5/CySpc.c **** /*******************************************************************************
 476:Generated_Source\PSoC5/CySpc.c **** * Function Name: CySpcEraseSector
 477:Generated_Source\PSoC5/CySpc.c **** ****************************************************************************//**
 478:Generated_Source\PSoC5/CySpc.c **** *  Erases all data in the addressed sector (block of 64 rows).
 479:Generated_Source\PSoC5/CySpc.c **** *
 480:Generated_Source\PSoC5/CySpc.c **** *  \param uint8 array:
 481:Generated_Source\PSoC5/CySpc.c **** *   Id of the array.
 482:Generated_Source\PSoC5/CySpc.c **** *
 483:Generated_Source\PSoC5/CySpc.c **** *  \param uint8 sectorNumber:
 484:Generated_Source\PSoC5/CySpc.c **** *   Zero based sector number within Flash/EEPROM array
 485:Generated_Source\PSoC5/CySpc.c **** *
 486:Generated_Source\PSoC5/CySpc.c **** * \return
 487:Generated_Source\PSoC5/CySpc.c **** *  CYRET_STARTED
 488:Generated_Source\PSoC5/CySpc.c **** *  CYRET_CANCELED
 489:Generated_Source\PSoC5/CySpc.c **** *  CYRET_LOCKED
 490:Generated_Source\PSoC5/CySpc.c **** *
 491:Generated_Source\PSoC5/CySpc.c **** *******************************************************************************/
 492:Generated_Source\PSoC5/CySpc.c **** cystatus CySpcEraseSector(uint8 array, uint8 sectorNumber)
 493:Generated_Source\PSoC5/CySpc.c **** {
 646              		.loc 1 493 0
 647              		.cfi_startproc
 648              		@ args = 0, pretend = 0, frame = 0
 649              		@ frame_needed = 0, uses_anonymous_args = 0
 650              		@ link register save eliminated.
 651              	.LVL71:
 494:Generated_Source\PSoC5/CySpc.c ****     cystatus status = CYRET_STARTED;
 495:Generated_Source\PSoC5/CySpc.c **** 
 496:Generated_Source\PSoC5/CySpc.c ****     /* Make sure the SPC is ready to accept command */
 497:Generated_Source\PSoC5/CySpc.c ****     if(CY_SPC_IDLE)
 652              		.loc 1 497 0
 653 0000 0C4B     		ldr	r3, .L66
 654 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 655 0004 13F0020F 		tst	r3, #2
 656 0008 10D0     		beq	.L64
 498:Generated_Source\PSoC5/CySpc.c ****     {
 499:Generated_Source\PSoC5/CySpc.c ****         CY_SPC_CPU_DATA_REG = CY_SPC_KEY_ONE;
 657              		.loc 1 499 0
 658 000a 0B4B     		ldr	r3, .L66+4
 659 000c B622     		movs	r2, #182
 660 000e 1A70     		strb	r2, [r3]
 500:Generated_Source\PSoC5/CySpc.c ****         CY_SPC_CPU_DATA_REG = CY_SPC_KEY_TWO(CY_SPC_CMD_ER_SECTOR);
 661              		.loc 1 500 0
 662 0010 DB22     		movs	r2, #219
 663 0012 1A70     		strb	r2, [r3]
 501:Generated_Source\PSoC5/CySpc.c ****         CY_SPC_CPU_DATA_REG = CY_SPC_CMD_ER_SECTOR;
 664              		.loc 1 501 0
 665 0014 0822     		movs	r2, #8
 666 0016 1A70     		strb	r2, [r3]
 502:Generated_Source\PSoC5/CySpc.c **** 
 503:Generated_Source\PSoC5/CySpc.c ****         /* Make sure the command was accepted */
 504:Generated_Source\PSoC5/CySpc.c ****         if(CY_SPC_BUSY)
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 22


 667              		.loc 1 504 0
 668 0018 0233     		adds	r3, r3, #2
 669 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 670 001c 13F0020F 		tst	r3, #2
 671 0020 06D1     		bne	.L65
 505:Generated_Source\PSoC5/CySpc.c ****         {
 506:Generated_Source\PSoC5/CySpc.c ****             CY_SPC_CPU_DATA_REG = array;
 672              		.loc 1 506 0
 673 0022 054B     		ldr	r3, .L66+4
 674 0024 1870     		strb	r0, [r3]
 507:Generated_Source\PSoC5/CySpc.c ****             CY_SPC_CPU_DATA_REG = sectorNumber;
 675              		.loc 1 507 0
 676 0026 1970     		strb	r1, [r3]
 494:Generated_Source\PSoC5/CySpc.c **** 
 677              		.loc 1 494 0
 678 0028 0720     		movs	r0, #7
 679              	.LVL72:
 680 002a 7047     		bx	lr
 681              	.LVL73:
 682              	.L64:
 508:Generated_Source\PSoC5/CySpc.c ****         }
 509:Generated_Source\PSoC5/CySpc.c ****         else
 510:Generated_Source\PSoC5/CySpc.c ****         {
 511:Generated_Source\PSoC5/CySpc.c ****             status = CYRET_CANCELED;
 512:Generated_Source\PSoC5/CySpc.c ****         }
 513:Generated_Source\PSoC5/CySpc.c ****     }
 514:Generated_Source\PSoC5/CySpc.c ****     else
 515:Generated_Source\PSoC5/CySpc.c ****     {
 516:Generated_Source\PSoC5/CySpc.c ****         status = CYRET_LOCKED;
 683              		.loc 1 516 0
 684 002c 0420     		movs	r0, #4
 685              	.LVL74:
 686 002e 7047     		bx	lr
 687              	.LVL75:
 688              	.L65:
 511:Generated_Source\PSoC5/CySpc.c ****         }
 689              		.loc 1 511 0
 690 0030 0920     		movs	r0, #9
 691              	.LVL76:
 517:Generated_Source\PSoC5/CySpc.c ****     }
 518:Generated_Source\PSoC5/CySpc.c **** 
 519:Generated_Source\PSoC5/CySpc.c ****     return(status);
 520:Generated_Source\PSoC5/CySpc.c **** }
 692              		.loc 1 520 0
 693 0032 7047     		bx	lr
 694              	.L67:
 695              		.align	2
 696              	.L66:
 697 0034 22470040 		.word	1073760034
 698 0038 20470040 		.word	1073760032
 699              		.cfi_endproc
 700              	.LFE7:
 701              		.size	CySpcEraseSector, .-CySpcEraseSector
 702              		.section	.text.CySpcGetTemp,"ax",%progbits
 703              		.align	2
 704              		.global	CySpcGetTemp
 705              		.thumb
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 23


 706              		.thumb_func
 707              		.type	CySpcGetTemp, %function
 708              	CySpcGetTemp:
 709              	.LFB8:
 521:Generated_Source\PSoC5/CySpc.c **** 
 522:Generated_Source\PSoC5/CySpc.c **** 
 523:Generated_Source\PSoC5/CySpc.c **** /*******************************************************************************
 524:Generated_Source\PSoC5/CySpc.c **** * Function Name: CySpcGetTemp
 525:Generated_Source\PSoC5/CySpc.c **** ****************************************************************************//**
 526:Generated_Source\PSoC5/CySpc.c **** *  Returns the internal die temperature
 527:Generated_Source\PSoC5/CySpc.c **** *
 528:Generated_Source\PSoC5/CySpc.c **** *  \param uint8 numSamples:
 529:Generated_Source\PSoC5/CySpc.c **** *   Number of samples. Valid values are 1-5, resulting in 2 - 32 samples
 530:Generated_Source\PSoC5/CySpc.c **** *   respectively.
 531:Generated_Source\PSoC5/CySpc.c **** *
 532:Generated_Source\PSoC5/CySpc.c **** * \param uint16 timerPeriod:
 533:Generated_Source\PSoC5/CySpc.c **** *   Number of ADC ACLK cycles. A valid 14 bit value is accepted, higher 2 bits
 534:Generated_Source\PSoC5/CySpc.c **** *   of 16 bit values are ignored.
 535:Generated_Source\PSoC5/CySpc.c **** *
 536:Generated_Source\PSoC5/CySpc.c **** * \param uint8 clkDivSelect:
 537:Generated_Source\PSoC5/CySpc.c **** *   ADC ACLK clock divide value. Valid values are 2 - 225.
 538:Generated_Source\PSoC5/CySpc.c **** *
 539:Generated_Source\PSoC5/CySpc.c **** * \return
 540:Generated_Source\PSoC5/CySpc.c **** *  CYRET_STARTED
 541:Generated_Source\PSoC5/CySpc.c **** *  CYRET_CANCELED
 542:Generated_Source\PSoC5/CySpc.c **** *  CYRET_LOCKED
 543:Generated_Source\PSoC5/CySpc.c **** *
 544:Generated_Source\PSoC5/CySpc.c **** *******************************************************************************/
 545:Generated_Source\PSoC5/CySpc.c **** cystatus CySpcGetTemp(uint8 numSamples)
 546:Generated_Source\PSoC5/CySpc.c **** {
 710              		.loc 1 546 0
 711              		.cfi_startproc
 712              		@ args = 0, pretend = 0, frame = 0
 713              		@ frame_needed = 0, uses_anonymous_args = 0
 714              		@ link register save eliminated.
 715              	.LVL77:
 547:Generated_Source\PSoC5/CySpc.c ****     cystatus status = CYRET_STARTED;
 548:Generated_Source\PSoC5/CySpc.c **** 
 549:Generated_Source\PSoC5/CySpc.c ****     /* Make sure the SPC is ready to accept command */
 550:Generated_Source\PSoC5/CySpc.c ****     if(CY_SPC_IDLE)
 716              		.loc 1 550 0
 717 0000 0C4B     		ldr	r3, .L72
 718 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 719 0004 13F0020F 		tst	r3, #2
 720 0008 0FD0     		beq	.L70
 551:Generated_Source\PSoC5/CySpc.c ****     {
 552:Generated_Source\PSoC5/CySpc.c ****         CY_SPC_CPU_DATA_REG = CY_SPC_KEY_ONE;
 721              		.loc 1 552 0
 722 000a 0B4B     		ldr	r3, .L72+4
 723 000c B622     		movs	r2, #182
 724 000e 1A70     		strb	r2, [r3]
 553:Generated_Source\PSoC5/CySpc.c ****         CY_SPC_CPU_DATA_REG = CY_SPC_KEY_TWO(CY_SPC_CMD_GET_TEMP);
 725              		.loc 1 553 0
 726 0010 E122     		movs	r2, #225
 727 0012 1A70     		strb	r2, [r3]
 554:Generated_Source\PSoC5/CySpc.c ****         CY_SPC_CPU_DATA_REG = CY_SPC_CMD_GET_TEMP;
 728              		.loc 1 554 0
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 24


 729 0014 0E22     		movs	r2, #14
 730 0016 1A70     		strb	r2, [r3]
 555:Generated_Source\PSoC5/CySpc.c **** 
 556:Generated_Source\PSoC5/CySpc.c ****         /* Make sure the command was accepted */
 557:Generated_Source\PSoC5/CySpc.c ****         if(CY_SPC_BUSY)
 731              		.loc 1 557 0
 732 0018 0233     		adds	r3, r3, #2
 733 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 734 001c 13F0020F 		tst	r3, #2
 735 0020 05D1     		bne	.L71
 558:Generated_Source\PSoC5/CySpc.c ****         {
 559:Generated_Source\PSoC5/CySpc.c ****             CY_SPC_CPU_DATA_REG = numSamples;
 736              		.loc 1 559 0
 737 0022 054B     		ldr	r3, .L72+4
 738 0024 1870     		strb	r0, [r3]
 547:Generated_Source\PSoC5/CySpc.c **** 
 739              		.loc 1 547 0
 740 0026 0720     		movs	r0, #7
 741              	.LVL78:
 742 0028 7047     		bx	lr
 743              	.LVL79:
 744              	.L70:
 560:Generated_Source\PSoC5/CySpc.c ****         }
 561:Generated_Source\PSoC5/CySpc.c ****         else
 562:Generated_Source\PSoC5/CySpc.c ****         {
 563:Generated_Source\PSoC5/CySpc.c ****             status = CYRET_CANCELED;
 564:Generated_Source\PSoC5/CySpc.c ****         }
 565:Generated_Source\PSoC5/CySpc.c ****     }
 566:Generated_Source\PSoC5/CySpc.c ****     else
 567:Generated_Source\PSoC5/CySpc.c ****     {
 568:Generated_Source\PSoC5/CySpc.c ****         status = CYRET_LOCKED;
 745              		.loc 1 568 0
 746 002a 0420     		movs	r0, #4
 747              	.LVL80:
 748 002c 7047     		bx	lr
 749              	.LVL81:
 750              	.L71:
 563:Generated_Source\PSoC5/CySpc.c ****         }
 751              		.loc 1 563 0
 752 002e 0920     		movs	r0, #9
 753              	.LVL82:
 569:Generated_Source\PSoC5/CySpc.c ****     }
 570:Generated_Source\PSoC5/CySpc.c **** 
 571:Generated_Source\PSoC5/CySpc.c ****     return(status);
 572:Generated_Source\PSoC5/CySpc.c **** }
 754              		.loc 1 572 0
 755 0030 7047     		bx	lr
 756              	.L73:
 757 0032 00BF     		.align	2
 758              	.L72:
 759 0034 22470040 		.word	1073760034
 760 0038 20470040 		.word	1073760032
 761              		.cfi_endproc
 762              	.LFE8:
 763              		.size	CySpcGetTemp, .-CySpcGetTemp
 764              		.section	.text.CySpcLock,"ax",%progbits
 765              		.align	2
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 25


 766              		.global	CySpcLock
 767              		.thumb
 768              		.thumb_func
 769              		.type	CySpcLock, %function
 770              	CySpcLock:
 771              	.LFB9:
 573:Generated_Source\PSoC5/CySpc.c **** 
 574:Generated_Source\PSoC5/CySpc.c **** 
 575:Generated_Source\PSoC5/CySpc.c **** /*******************************************************************************
 576:Generated_Source\PSoC5/CySpc.c **** * Function Name: CySpcLock
 577:Generated_Source\PSoC5/CySpc.c **** ****************************************************************************//**
 578:Generated_Source\PSoC5/CySpc.c **** *  Locks the SPC so it can not be used by someone else:
 579:Generated_Source\PSoC5/CySpc.c **** *   - Saves wait-pipeline enable state and enable pipeline (PSoC5)
 580:Generated_Source\PSoC5/CySpc.c **** *
 581:Generated_Source\PSoC5/CySpc.c **** * \return
 582:Generated_Source\PSoC5/CySpc.c **** *  CYRET_SUCCESS - if the resource was free.
 583:Generated_Source\PSoC5/CySpc.c **** *  CYRET_LOCKED  - if the SPC is in use.
 584:Generated_Source\PSoC5/CySpc.c **** *
 585:Generated_Source\PSoC5/CySpc.c **** *******************************************************************************/
 586:Generated_Source\PSoC5/CySpc.c **** cystatus CySpcLock(void)
 587:Generated_Source\PSoC5/CySpc.c **** {
 772              		.loc 1 587 0
 773              		.cfi_startproc
 774              		@ args = 0, pretend = 0, frame = 0
 775              		@ frame_needed = 0, uses_anonymous_args = 0
 776 0000 10B5     		push	{r4, lr}
 777              		.cfi_def_cfa_offset 8
 778              		.cfi_offset 4, -8
 779              		.cfi_offset 14, -4
 780              	.LVL83:
 588:Generated_Source\PSoC5/CySpc.c ****     cystatus status = CYRET_LOCKED;
 589:Generated_Source\PSoC5/CySpc.c ****     uint8 interruptState;
 590:Generated_Source\PSoC5/CySpc.c **** 
 591:Generated_Source\PSoC5/CySpc.c ****     /* Enter critical section */
 592:Generated_Source\PSoC5/CySpc.c ****     interruptState = CyEnterCriticalSection();
 781              		.loc 1 592 0
 782 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 783              	.LVL84:
 593:Generated_Source\PSoC5/CySpc.c **** 
 594:Generated_Source\PSoC5/CySpc.c ****     if(CY_SPC_UNLOCKED == SpcLockState)
 784              		.loc 1 594 0
 785 0006 0F4B     		ldr	r3, .L79
 786 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 787 000a A3B9     		cbnz	r3, .L76
 595:Generated_Source\PSoC5/CySpc.c ****     {
 596:Generated_Source\PSoC5/CySpc.c ****         SpcLockState = CY_SPC_LOCKED;
 788              		.loc 1 596 0
 789 000c 0122     		movs	r2, #1
 790 000e 0D4B     		ldr	r3, .L79
 791 0010 1A70     		strb	r2, [r3]
 792              	.LVL85:
 597:Generated_Source\PSoC5/CySpc.c ****         status = CYRET_SUCCESS;
 598:Generated_Source\PSoC5/CySpc.c **** 
 599:Generated_Source\PSoC5/CySpc.c ****         #if(CY_PSOC5)
 600:Generated_Source\PSoC5/CySpc.c **** 
 601:Generated_Source\PSoC5/CySpc.c ****             if(0u != (CY_SPC_CPU_WAITPIPE_REG & CY_SPC_CPU_WAITPIPE_BYPASS))
 793              		.loc 1 601 0
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 26


 794 0012 0D4B     		ldr	r3, .L79+4
 795 0014 1B68     		ldr	r3, [r3]
 796 0016 13F0010F 		tst	r3, #1
 797 001a 0ED0     		beq	.L77
 602:Generated_Source\PSoC5/CySpc.c ****             {
 603:Generated_Source\PSoC5/CySpc.c ****                 /* Enable pipeline registers */
 604:Generated_Source\PSoC5/CySpc.c ****                 CY_SPC_CPU_WAITPIPE_REG &= ((uint32)(~CY_SPC_CPU_WAITPIPE_BYPASS));
 798              		.loc 1 604 0
 799 001c 0A4A     		ldr	r2, .L79+4
 800 001e 1368     		ldr	r3, [r2]
 801 0020 23F00103 		bic	r3, r3, #1
 802 0024 1360     		str	r3, [r2]
 605:Generated_Source\PSoC5/CySpc.c **** 
 606:Generated_Source\PSoC5/CySpc.c ****                 /* At least 2 NOP instructions are recommended */
 607:Generated_Source\PSoC5/CySpc.c ****                 CY_NOP;
 803              		.loc 1 607 0
 804              	@ 607 "Generated_Source\PSoC5\CySpc.c" 1
 805 0026 00BF     		NOP
 806              	
 807              	@ 0 "" 2
 608:Generated_Source\PSoC5/CySpc.c ****                 CY_NOP;
 808              		.loc 1 608 0
 809              	@ 608 "Generated_Source\PSoC5\CySpc.c" 1
 810 0028 00BF     		NOP
 811              	
 812              	@ 0 "" 2
 609:Generated_Source\PSoC5/CySpc.c ****                 CY_NOP;
 813              		.loc 1 609 0
 814              	@ 609 "Generated_Source\PSoC5\CySpc.c" 1
 815 002a 00BF     		NOP
 816              	
 817              	@ 0 "" 2
 610:Generated_Source\PSoC5/CySpc.c **** 
 611:Generated_Source\PSoC5/CySpc.c ****                 spcWaitPipeBypass = CY_SPC_CPU_WAITPIPE_BYPASS;
 818              		.loc 1 611 0
 819              		.thumb
 820 002c 0122     		movs	r2, #1
 821 002e 054B     		ldr	r3, .L79
 822 0030 5A60     		str	r2, [r3, #4]
 597:Generated_Source\PSoC5/CySpc.c **** 
 823              		.loc 1 597 0
 824 0032 0024     		movs	r4, #0
 825 0034 02E0     		b	.L75
 826              	.LVL86:
 827              	.L76:
 588:Generated_Source\PSoC5/CySpc.c ****     uint8 interruptState;
 828              		.loc 1 588 0
 829 0036 0424     		movs	r4, #4
 830 0038 00E0     		b	.L75
 831              	.LVL87:
 832              	.L77:
 597:Generated_Source\PSoC5/CySpc.c **** 
 833              		.loc 1 597 0
 834 003a 0024     		movs	r4, #0
 835              	.LVL88:
 836              	.L75:
 612:Generated_Source\PSoC5/CySpc.c ****             }
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 27


 613:Generated_Source\PSoC5/CySpc.c **** 
 614:Generated_Source\PSoC5/CySpc.c ****         #endif  /* (CY_PSOC5) */
 615:Generated_Source\PSoC5/CySpc.c ****     }
 616:Generated_Source\PSoC5/CySpc.c **** 
 617:Generated_Source\PSoC5/CySpc.c ****     /* Exit critical section */
 618:Generated_Source\PSoC5/CySpc.c ****     CyExitCriticalSection(interruptState);
 837              		.loc 1 618 0
 838 003c FFF7FEFF 		bl	CyExitCriticalSection
 839              	.LVL89:
 619:Generated_Source\PSoC5/CySpc.c **** 
 620:Generated_Source\PSoC5/CySpc.c ****     return(status);
 621:Generated_Source\PSoC5/CySpc.c **** }
 840              		.loc 1 621 0
 841 0040 2046     		mov	r0, r4
 842 0042 10BD     		pop	{r4, pc}
 843              	.LVL90:
 844              	.L80:
 845              		.align	2
 846              	.L79:
 847 0044 00000000 		.word	.LANCHOR0
 848 0048 04000840 		.word	1074266116
 849              		.cfi_endproc
 850              	.LFE9:
 851              		.size	CySpcLock, .-CySpcLock
 852              		.section	.text.CySpcUnlock,"ax",%progbits
 853              		.align	2
 854              		.global	CySpcUnlock
 855              		.thumb
 856              		.thumb_func
 857              		.type	CySpcUnlock, %function
 858              	CySpcUnlock:
 859              	.LFB10:
 622:Generated_Source\PSoC5/CySpc.c **** 
 623:Generated_Source\PSoC5/CySpc.c **** 
 624:Generated_Source\PSoC5/CySpc.c **** /*******************************************************************************
 625:Generated_Source\PSoC5/CySpc.c **** * Function Name: CySpcUnlock
 626:Generated_Source\PSoC5/CySpc.c **** ****************************************************************************//**
 627:Generated_Source\PSoC5/CySpc.c **** *  Unlocks the SPC so it can be used by someone else:
 628:Generated_Source\PSoC5/CySpc.c **** *   - Restores wait-pipeline enable state (PSoC5)
 629:Generated_Source\PSoC5/CySpc.c **** *
 630:Generated_Source\PSoC5/CySpc.c **** *******************************************************************************/
 631:Generated_Source\PSoC5/CySpc.c **** void CySpcUnlock(void)
 632:Generated_Source\PSoC5/CySpc.c **** {
 860              		.loc 1 632 0
 861              		.cfi_startproc
 862              		@ args = 0, pretend = 0, frame = 0
 863              		@ frame_needed = 0, uses_anonymous_args = 0
 864 0000 08B5     		push	{r3, lr}
 865              		.cfi_def_cfa_offset 8
 866              		.cfi_offset 3, -8
 867              		.cfi_offset 14, -4
 633:Generated_Source\PSoC5/CySpc.c ****     uint8 interruptState;
 634:Generated_Source\PSoC5/CySpc.c **** 
 635:Generated_Source\PSoC5/CySpc.c ****     /* Enter critical section */
 636:Generated_Source\PSoC5/CySpc.c ****     interruptState = CyEnterCriticalSection();
 868              		.loc 1 636 0
 869 0002 FFF7FEFF 		bl	CyEnterCriticalSection
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 28


 870              	.LVL91:
 637:Generated_Source\PSoC5/CySpc.c **** 
 638:Generated_Source\PSoC5/CySpc.c ****     /* Release the SPC object */
 639:Generated_Source\PSoC5/CySpc.c ****     SpcLockState = CY_SPC_UNLOCKED;
 871              		.loc 1 639 0
 872 0006 0A4B     		ldr	r3, .L84
 873 0008 0022     		movs	r2, #0
 874 000a 1A70     		strb	r2, [r3]
 640:Generated_Source\PSoC5/CySpc.c **** 
 641:Generated_Source\PSoC5/CySpc.c ****     #if(CY_PSOC5)
 642:Generated_Source\PSoC5/CySpc.c **** 
 643:Generated_Source\PSoC5/CySpc.c ****         if(CY_SPC_CPU_WAITPIPE_BYPASS == spcWaitPipeBypass)
 875              		.loc 1 643 0
 876 000c 5B68     		ldr	r3, [r3, #4]
 877 000e 012B     		cmp	r3, #1
 878 0010 0AD1     		bne	.L82
 644:Generated_Source\PSoC5/CySpc.c ****         {
 645:Generated_Source\PSoC5/CySpc.c ****             /* Force to bypass pipeline registers */
 646:Generated_Source\PSoC5/CySpc.c ****             CY_SPC_CPU_WAITPIPE_REG |= CY_SPC_CPU_WAITPIPE_BYPASS;
 879              		.loc 1 646 0
 880 0012 084A     		ldr	r2, .L84+4
 881 0014 1368     		ldr	r3, [r2]
 882 0016 43F00103 		orr	r3, r3, #1
 883 001a 1360     		str	r3, [r2]
 647:Generated_Source\PSoC5/CySpc.c **** 
 648:Generated_Source\PSoC5/CySpc.c ****             /* At least 2 NOP instructions are recommended */
 649:Generated_Source\PSoC5/CySpc.c ****             CY_NOP;
 884              		.loc 1 649 0
 885              	@ 649 "Generated_Source\PSoC5\CySpc.c" 1
 886 001c 00BF     		NOP
 887              	
 888              	@ 0 "" 2
 650:Generated_Source\PSoC5/CySpc.c ****             CY_NOP;
 889              		.loc 1 650 0
 890              	@ 650 "Generated_Source\PSoC5\CySpc.c" 1
 891 001e 00BF     		NOP
 892              	
 893              	@ 0 "" 2
 651:Generated_Source\PSoC5/CySpc.c ****             CY_NOP;
 894              		.loc 1 651 0
 895              	@ 651 "Generated_Source\PSoC5\CySpc.c" 1
 896 0020 00BF     		NOP
 897              	
 898              	@ 0 "" 2
 652:Generated_Source\PSoC5/CySpc.c **** 
 653:Generated_Source\PSoC5/CySpc.c ****             spcWaitPipeBypass = 0u;
 899              		.loc 1 653 0
 900              		.thumb
 901 0022 0022     		movs	r2, #0
 902 0024 024B     		ldr	r3, .L84
 903 0026 5A60     		str	r2, [r3, #4]
 904              	.L82:
 654:Generated_Source\PSoC5/CySpc.c ****         }
 655:Generated_Source\PSoC5/CySpc.c **** 
 656:Generated_Source\PSoC5/CySpc.c ****     #endif  /* (CY_PSOC5) */
 657:Generated_Source\PSoC5/CySpc.c **** 
 658:Generated_Source\PSoC5/CySpc.c ****     /* Exit critical section */
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 29


 659:Generated_Source\PSoC5/CySpc.c ****     CyExitCriticalSection(interruptState);
 905              		.loc 1 659 0
 906 0028 FFF7FEFF 		bl	CyExitCriticalSection
 907              	.LVL92:
 908 002c 08BD     		pop	{r3, pc}
 909              	.L85:
 910 002e 00BF     		.align	2
 911              	.L84:
 912 0030 00000000 		.word	.LANCHOR0
 913 0034 04000840 		.word	1074266116
 914              		.cfi_endproc
 915              	.LFE10:
 916              		.size	CySpcUnlock, .-CySpcUnlock
 917              		.section	.text.CySpcGetAlgorithm,"ax",%progbits
 918              		.align	2
 919              		.global	CySpcGetAlgorithm
 920              		.thumb
 921              		.thumb_func
 922              		.type	CySpcGetAlgorithm, %function
 923              	CySpcGetAlgorithm:
 924              	.LFB11:
 660:Generated_Source\PSoC5/CySpc.c **** }
 661:Generated_Source\PSoC5/CySpc.c **** 
 662:Generated_Source\PSoC5/CySpc.c **** 
 663:Generated_Source\PSoC5/CySpc.c **** /*******************************************************************************
 664:Generated_Source\PSoC5/CySpc.c **** * Function Name: CySpcGetAlgorithm
 665:Generated_Source\PSoC5/CySpc.c **** ****************************************************************************//**
 666:Generated_Source\PSoC5/CySpc.c **** *  Downloads SPC algorithm from SPC SROM into SRAM.
 667:Generated_Source\PSoC5/CySpc.c **** *
 668:Generated_Source\PSoC5/CySpc.c **** * \return
 669:Generated_Source\PSoC5/CySpc.c **** *  CYRET_STARTED
 670:Generated_Source\PSoC5/CySpc.c **** *  CYRET_LOCKED
 671:Generated_Source\PSoC5/CySpc.c **** *
 672:Generated_Source\PSoC5/CySpc.c **** *******************************************************************************/
 673:Generated_Source\PSoC5/CySpc.c **** cystatus CySpcGetAlgorithm(void)
 674:Generated_Source\PSoC5/CySpc.c **** {
 925              		.loc 1 674 0
 926              		.cfi_startproc
 927              		@ args = 0, pretend = 0, frame = 0
 928              		@ frame_needed = 0, uses_anonymous_args = 0
 929              		@ link register save eliminated.
 930              	.LVL93:
 675:Generated_Source\PSoC5/CySpc.c ****     cystatus status = CYRET_STARTED;
 676:Generated_Source\PSoC5/CySpc.c **** 
 677:Generated_Source\PSoC5/CySpc.c ****     /* Make sure the SPC is ready to accept command */
 678:Generated_Source\PSoC5/CySpc.c ****     if(CY_SPC_IDLE)
 931              		.loc 1 678 0
 932 0000 074B     		ldr	r3, .L89
 933 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 934 0004 13F0020F 		tst	r3, #2
 935 0008 08D0     		beq	.L88
 679:Generated_Source\PSoC5/CySpc.c ****     {
 680:Generated_Source\PSoC5/CySpc.c ****         CY_SPC_CPU_DATA_REG = CY_SPC_KEY_ONE;
 936              		.loc 1 680 0
 937 000a 064B     		ldr	r3, .L89+4
 938 000c B622     		movs	r2, #182
 939 000e 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 30


 681:Generated_Source\PSoC5/CySpc.c ****         CY_SPC_CPU_DATA_REG = CY_SPC_KEY_TWO(CY_SPC_CMD_DWNLD_ALGORITHM);
 940              		.loc 1 681 0
 941 0010 E022     		movs	r2, #224
 942 0012 1A70     		strb	r2, [r3]
 682:Generated_Source\PSoC5/CySpc.c ****         CY_SPC_CPU_DATA_REG = CY_SPC_CMD_DWNLD_ALGORITHM;
 943              		.loc 1 682 0
 944 0014 0D22     		movs	r2, #13
 945 0016 1A70     		strb	r2, [r3]
 675:Generated_Source\PSoC5/CySpc.c **** 
 946              		.loc 1 675 0
 947 0018 0720     		movs	r0, #7
 948 001a 7047     		bx	lr
 949              	.L88:
 683:Generated_Source\PSoC5/CySpc.c ****     }
 684:Generated_Source\PSoC5/CySpc.c ****     else
 685:Generated_Source\PSoC5/CySpc.c ****     {
 686:Generated_Source\PSoC5/CySpc.c ****         status = CYRET_LOCKED;
 950              		.loc 1 686 0
 951 001c 0420     		movs	r0, #4
 952              	.LVL94:
 687:Generated_Source\PSoC5/CySpc.c ****     }
 688:Generated_Source\PSoC5/CySpc.c **** 
 689:Generated_Source\PSoC5/CySpc.c ****     return(status);
 690:Generated_Source\PSoC5/CySpc.c **** }
 953              		.loc 1 690 0
 954 001e 7047     		bx	lr
 955              	.L90:
 956              		.align	2
 957              	.L89:
 958 0020 22470040 		.word	1073760034
 959 0024 20470040 		.word	1073760032
 960              		.cfi_endproc
 961              	.LFE11:
 962              		.size	CySpcGetAlgorithm, .-CySpcGetAlgorithm
 963              		.global	SpcLockState
 964              		.bss
 965              		.align	2
 966              		.set	.LANCHOR0,. + 0
 967              		.type	SpcLockState, %object
 968              		.size	SpcLockState, 1
 969              	SpcLockState:
 970 0000 00       		.space	1
 971 0001 000000   		.space	3
 972              		.type	spcWaitPipeBypass, %object
 973              		.size	spcWaitPipeBypass, 4
 974              	spcWaitPipeBypass:
 975 0004 00000000 		.space	4
 976              		.text
 977              	.Letext0:
 978              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 979              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 980              		.section	.debug_info,"",%progbits
 981              	.Ldebug_info0:
 982 0000 E6040000 		.4byte	0x4e6
 983 0004 0400     		.2byte	0x4
 984 0006 00000000 		.4byte	.Ldebug_abbrev0
 985 000a 04       		.byte	0x4
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 31


 986 000b 01       		.uleb128 0x1
 987 000c 15010000 		.4byte	.LASF43
 988 0010 01       		.byte	0x1
 989 0011 BA010000 		.4byte	.LASF44
 990 0015 7B020000 		.4byte	.LASF45
 991 0019 00000000 		.4byte	.Ldebug_ranges0+0
 992 001d 00000000 		.4byte	0
 993 0021 00000000 		.4byte	.Ldebug_line0
 994 0025 02       		.uleb128 0x2
 995 0026 01       		.byte	0x1
 996 0027 06       		.byte	0x6
 997 0028 FE020000 		.4byte	.LASF0
 998 002c 02       		.uleb128 0x2
 999 002d 01       		.byte	0x1
 1000 002e 08       		.byte	0x8
 1001 002f DB000000 		.4byte	.LASF1
 1002 0033 02       		.uleb128 0x2
 1003 0034 02       		.byte	0x2
 1004 0035 05       		.byte	0x5
 1005 0036 C5020000 		.4byte	.LASF2
 1006 003a 02       		.uleb128 0x2
 1007 003b 02       		.byte	0x2
 1008 003c 07       		.byte	0x7
 1009 003d 45000000 		.4byte	.LASF3
 1010 0041 02       		.uleb128 0x2
 1011 0042 04       		.byte	0x4
 1012 0043 05       		.byte	0x5
 1013 0044 E3020000 		.4byte	.LASF4
 1014 0048 02       		.uleb128 0x2
 1015 0049 04       		.byte	0x4
 1016 004a 07       		.byte	0x7
 1017 004b A3000000 		.4byte	.LASF5
 1018 004f 02       		.uleb128 0x2
 1019 0050 08       		.byte	0x8
 1020 0051 05       		.byte	0x5
 1021 0052 45020000 		.4byte	.LASF6
 1022 0056 02       		.uleb128 0x2
 1023 0057 08       		.byte	0x8
 1024 0058 07       		.byte	0x7
 1025 0059 73000000 		.4byte	.LASF7
 1026 005d 03       		.uleb128 0x3
 1027 005e 04       		.byte	0x4
 1028 005f 05       		.byte	0x5
 1029 0060 696E7400 		.ascii	"int\000"
 1030 0064 02       		.uleb128 0x2
 1031 0065 04       		.byte	0x4
 1032 0066 07       		.byte	0x7
 1033 0067 D9010000 		.4byte	.LASF8
 1034 006b 04       		.uleb128 0x4
 1035 006c B5000000 		.4byte	.LASF9
 1036 0070 02       		.byte	0x2
 1037 0071 9201     		.2byte	0x192
 1038 0073 2C000000 		.4byte	0x2c
 1039 0077 04       		.uleb128 0x4
 1040 0078 FD000000 		.4byte	.LASF10
 1041 007c 02       		.byte	0x2
 1042 007d 9301     		.2byte	0x193
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 32


 1043 007f 3A000000 		.4byte	0x3a
 1044 0083 04       		.uleb128 0x4
 1045 0084 0E010000 		.4byte	.LASF11
 1046 0088 02       		.byte	0x2
 1047 0089 9401     		.2byte	0x194
 1048 008b 48000000 		.4byte	0x48
 1049 008f 02       		.uleb128 0x2
 1050 0090 04       		.byte	0x4
 1051 0091 04       		.byte	0x4
 1052 0092 6D000000 		.4byte	.LASF12
 1053 0096 02       		.uleb128 0x2
 1054 0097 08       		.byte	0x8
 1055 0098 04       		.byte	0x4
 1056 0099 E9000000 		.4byte	.LASF13
 1057 009d 02       		.uleb128 0x2
 1058 009e 01       		.byte	0x1
 1059 009f 08       		.byte	0x8
 1060 00a0 5D020000 		.4byte	.LASF14
 1061 00a4 04       		.uleb128 0x4
 1062 00a5 13000000 		.4byte	.LASF15
 1063 00a9 02       		.byte	0x2
 1064 00aa 3402     		.2byte	0x234
 1065 00ac 48000000 		.4byte	0x48
 1066 00b0 04       		.uleb128 0x4
 1067 00b1 8F000000 		.4byte	.LASF16
 1068 00b5 02       		.byte	0x2
 1069 00b6 3C02     		.2byte	0x23c
 1070 00b8 BC000000 		.4byte	0xbc
 1071 00bc 05       		.uleb128 0x5
 1072 00bd 6B000000 		.4byte	0x6b
 1073 00c1 04       		.uleb128 0x4
 1074 00c2 1C000000 		.4byte	.LASF17
 1075 00c6 02       		.byte	0x2
 1076 00c7 3E02     		.2byte	0x23e
 1077 00c9 CD000000 		.4byte	0xcd
 1078 00cd 05       		.uleb128 0x5
 1079 00ce 83000000 		.4byte	0x83
 1080 00d2 02       		.uleb128 0x2
 1081 00d3 04       		.byte	0x4
 1082 00d4 07       		.byte	0x7
 1083 00d5 1F020000 		.4byte	.LASF18
 1084 00d9 06       		.uleb128 0x6
 1085 00da 22000000 		.4byte	.LASF19
 1086 00de 01       		.byte	0x1
 1087 00df 47       		.byte	0x47
 1088 00e0 00000000 		.4byte	.LFB0
 1089 00e4 24000000 		.4byte	.LFE0-.LFB0
 1090 00e8 01       		.uleb128 0x1
 1091 00e9 9C       		.byte	0x9c
 1092 00ea 10010000 		.4byte	0x110
 1093 00ee 07       		.uleb128 0x7
 1094 00ef 94000000 		.4byte	.LASF21
 1095 00f3 01       		.byte	0x1
 1096 00f4 4A       		.byte	0x4a
 1097 00f5 6B000000 		.4byte	0x6b
 1098 00f9 00000000 		.4byte	.LLST0
 1099 00fd 08       		.uleb128 0x8
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 33


 1100 00fe 06000000 		.4byte	.LVL0
 1101 0102 C0040000 		.4byte	0x4c0
 1102 0106 08       		.uleb128 0x8
 1103 0107 1E000000 		.4byte	.LVL1
 1104 010b CB040000 		.4byte	0x4cb
 1105 010f 00       		.byte	0
 1106 0110 06       		.uleb128 0x6
 1107 0111 3B000000 		.4byte	.LASF20
 1108 0115 01       		.byte	0x1
 1109 0116 5A       		.byte	0x5a
 1110 0117 00000000 		.4byte	.LFB1
 1111 011b 24000000 		.4byte	.LFE1-.LFB1
 1112 011f 01       		.uleb128 0x1
 1113 0120 9C       		.byte	0x9c
 1114 0121 47010000 		.4byte	0x147
 1115 0125 07       		.uleb128 0x7
 1116 0126 94000000 		.4byte	.LASF21
 1117 012a 01       		.byte	0x1
 1118 012b 5D       		.byte	0x5d
 1119 012c 6B000000 		.4byte	0x6b
 1120 0130 13000000 		.4byte	.LLST1
 1121 0134 08       		.uleb128 0x8
 1122 0135 06000000 		.4byte	.LVL2
 1123 0139 C0040000 		.4byte	0x4c0
 1124 013d 08       		.uleb128 0x8
 1125 013e 1E000000 		.4byte	.LVL3
 1126 0142 CB040000 		.4byte	0x4cb
 1127 0146 00       		.byte	0
 1128 0147 09       		.uleb128 0x9
 1129 0148 58000000 		.4byte	.LASF24
 1130 014c 01       		.byte	0x1
 1131 014d 77       		.byte	0x77
 1132 014e 6B000000 		.4byte	0x6b
 1133 0152 00000000 		.4byte	.LFB2
 1134 0156 34000000 		.4byte	.LFE2-.LFB2
 1135 015a 01       		.uleb128 0x1
 1136 015b 9C       		.byte	0x9c
 1137 015c 9B010000 		.4byte	0x19b
 1138 0160 0A       		.uleb128 0xa
 1139 0161 CF020000 		.4byte	.LASF22
 1140 0165 01       		.byte	0x1
 1141 0166 77       		.byte	0x77
 1142 0167 9B010000 		.4byte	0x19b
 1143 016b 26000000 		.4byte	.LLST2
 1144 016f 0A       		.uleb128 0xa
 1145 0170 8A000000 		.4byte	.LASF23
 1146 0174 01       		.byte	0x1
 1147 0175 77       		.byte	0x77
 1148 0176 6B000000 		.4byte	0x6b
 1149 017a 52000000 		.4byte	.LLST3
 1150 017e 0B       		.uleb128 0xb
 1151 017f 6900     		.ascii	"i\000"
 1152 0181 01       		.byte	0x1
 1153 0182 79       		.byte	0x79
 1154 0183 6B000000 		.4byte	0x6b
 1155 0187 73000000 		.4byte	.LLST4
 1156 018b 0C       		.uleb128 0xc
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 34


 1157 018c 10000000 		.4byte	.LVL7
 1158 0190 DC040000 		.4byte	0x4dc
 1159 0194 0D       		.uleb128 0xd
 1160 0195 01       		.uleb128 0x1
 1161 0196 50       		.byte	0x50
 1162 0197 01       		.uleb128 0x1
 1163 0198 31       		.byte	0x31
 1164 0199 00       		.byte	0
 1165 019a 00       		.byte	0
 1166 019b 0E       		.uleb128 0xe
 1167 019c 04       		.byte	0x4
 1168 019d 6B000000 		.4byte	0x6b
 1169 01a1 09       		.uleb128 0x9
 1170 01a2 00000000 		.4byte	.LASF25
 1171 01a6 01       		.byte	0x1
 1172 01a7 A0       		.byte	0xa0
 1173 01a8 A4000000 		.4byte	0xa4
 1174 01ac 00000000 		.4byte	.LFB3
 1175 01b0 78000000 		.4byte	.LFE3-.LFB3
 1176 01b4 01       		.uleb128 0x1
 1177 01b5 9C       		.byte	0x9c
 1178 01b6 0F020000 		.4byte	0x20f
 1179 01ba 0A       		.uleb128 0xa
 1180 01bb D5000000 		.4byte	.LASF26
 1181 01bf 01       		.byte	0x1
 1182 01c0 A0       		.byte	0xa0
 1183 01c1 6B000000 		.4byte	0x6b
 1184 01c5 9D000000 		.4byte	.LLST5
 1185 01c9 0A       		.uleb128 0xa
 1186 01ca E6010000 		.4byte	.LASF27
 1187 01ce 01       		.byte	0x1
 1188 01cf A0       		.byte	0xa0
 1189 01d0 77000000 		.4byte	0x77
 1190 01d4 2E010000 		.4byte	.LLST6
 1191 01d8 0F       		.uleb128 0xf
 1192 01d9 CF020000 		.4byte	.LASF22
 1193 01dd 01       		.byte	0x1
 1194 01de A0       		.byte	0xa0
 1195 01df 0F020000 		.4byte	0x20f
 1196 01e3 01       		.uleb128 0x1
 1197 01e4 52       		.byte	0x52
 1198 01e5 0F       		.uleb128 0xf
 1199 01e6 8A000000 		.4byte	.LASF23
 1200 01ea 01       		.byte	0x1
 1201 01eb A0       		.byte	0xa0
 1202 01ec 6B000000 		.4byte	0x6b
 1203 01f0 01       		.uleb128 0x1
 1204 01f1 53       		.byte	0x53
 1205 01f2 07       		.uleb128 0x7
 1206 01f3 66000000 		.4byte	.LASF28
 1207 01f7 01       		.byte	0x1
 1208 01f8 A3       		.byte	0xa3
 1209 01f9 A4000000 		.4byte	0xa4
 1210 01fd 68010000 		.4byte	.LLST7
 1211 0201 0B       		.uleb128 0xb
 1212 0202 6900     		.ascii	"i\000"
 1213 0204 01       		.byte	0x1
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 35


 1214 0205 A4       		.byte	0xa4
 1215 0206 6B000000 		.4byte	0x6b
 1216 020a 87010000 		.4byte	.LLST8
 1217 020e 00       		.byte	0
 1218 020f 0E       		.uleb128 0xe
 1219 0210 04       		.byte	0x4
 1220 0211 15020000 		.4byte	0x215
 1221 0215 10       		.uleb128 0x10
 1222 0216 6B000000 		.4byte	0x6b
 1223 021a 09       		.uleb128 0x9
 1224 021b 12020000 		.4byte	.LASF29
 1225 021f 01       		.byte	0x1
 1226 0220 EE       		.byte	0xee
 1227 0221 A4000000 		.4byte	0xa4
 1228 0225 00000000 		.4byte	.LFB4
 1229 0229 54000000 		.4byte	.LFE4-.LFB4
 1230 022d 01       		.uleb128 0x1
 1231 022e 9C       		.byte	0x9c
 1232 022f 79020000 		.4byte	0x279
 1233 0233 0A       		.uleb128 0xa
 1234 0234 D5000000 		.4byte	.LASF26
 1235 0238 01       		.byte	0x1
 1236 0239 EE       		.byte	0xee
 1237 023a 6B000000 		.4byte	0x6b
 1238 023e B1010000 		.4byte	.LLST9
 1239 0242 0F       		.uleb128 0xf
 1240 0243 CF020000 		.4byte	.LASF22
 1241 0247 01       		.byte	0x1
 1242 0248 EE       		.byte	0xee
 1243 0249 0F020000 		.4byte	0x20f
 1244 024d 01       		.uleb128 0x1
 1245 024e 51       		.byte	0x51
 1246 024f 0F       		.uleb128 0xf
 1247 0250 8A000000 		.4byte	.LASF23
 1248 0254 01       		.byte	0x1
 1249 0255 EE       		.byte	0xee
 1250 0256 77000000 		.4byte	0x77
 1251 025a 01       		.uleb128 0x1
 1252 025b 52       		.byte	0x52
 1253 025c 07       		.uleb128 0x7
 1254 025d 66000000 		.4byte	.LASF28
 1255 0261 01       		.byte	0x1
 1256 0262 F0       		.byte	0xf0
 1257 0263 A4000000 		.4byte	0xa4
 1258 0267 04020000 		.4byte	.LLST10
 1259 026b 0B       		.uleb128 0xb
 1260 026c 6900     		.ascii	"i\000"
 1261 026e 01       		.byte	0x1
 1262 026f F1       		.byte	0xf1
 1263 0270 77000000 		.4byte	0x77
 1264 0274 3A020000 		.4byte	.LLST11
 1265 0278 00       		.byte	0
 1266 0279 11       		.uleb128 0x11
 1267 027a 0A030000 		.4byte	.LASF30
 1268 027e 01       		.byte	0x1
 1269 027f 3001     		.2byte	0x130
 1270 0281 A4000000 		.4byte	0xa4
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 36


 1271 0285 00000000 		.4byte	.LFB5
 1272 0289 A4000000 		.4byte	.LFE5-.LFB5
 1273 028d 01       		.uleb128 0x1
 1274 028e 9C       		.byte	0x9c
 1275 028f 02030000 		.4byte	0x302
 1276 0293 12       		.uleb128 0x12
 1277 0294 D5000000 		.4byte	.LASF26
 1278 0298 01       		.byte	0x1
 1279 0299 3001     		.2byte	0x130
 1280 029b 6B000000 		.4byte	0x6b
 1281 029f 64020000 		.4byte	.LLST12
 1282 02a3 13       		.uleb128 0x13
 1283 02a4 726F7700 		.ascii	"row\000"
 1284 02a8 01       		.byte	0x1
 1285 02a9 3001     		.2byte	0x130
 1286 02ab 77000000 		.4byte	0x77
 1287 02af E9020000 		.4byte	.LLST13
 1288 02b3 12       		.uleb128 0x12
 1289 02b4 CF020000 		.4byte	.LASF22
 1290 02b8 01       		.byte	0x1
 1291 02b9 3001     		.2byte	0x130
 1292 02bb 0F020000 		.4byte	0x20f
 1293 02bf 23030000 		.4byte	.LLST14
 1294 02c3 12       		.uleb128 0x12
 1295 02c4 8A000000 		.4byte	.LASF23
 1296 02c8 01       		.byte	0x1
 1297 02c9 3001     		.2byte	0x130
 1298 02cb 77000000 		.4byte	0x77
 1299 02cf 5D030000 		.4byte	.LLST15
 1300 02d3 14       		.uleb128 0x14
 1301 02d4 66000000 		.4byte	.LASF28
 1302 02d8 01       		.byte	0x1
 1303 02d9 3301     		.2byte	0x133
 1304 02db A4000000 		.4byte	0xa4
 1305 02df 97030000 		.4byte	.LLST16
 1306 02e3 15       		.uleb128 0x15
 1307 02e4 6900     		.ascii	"i\000"
 1308 02e6 01       		.byte	0x1
 1309 02e7 3401     		.2byte	0x134
 1310 02e9 77000000 		.4byte	0x77
 1311 02ed B6030000 		.4byte	.LLST17
 1312 02f1 14       		.uleb128 0x14
 1313 02f2 74020000 		.4byte	.LASF31
 1314 02f6 01       		.byte	0x1
 1315 02f7 3701     		.2byte	0x137
 1316 02f9 83000000 		.4byte	0x83
 1317 02fd 18040000 		.4byte	.LLST18
 1318 0301 00       		.byte	0
 1319 0302 11       		.uleb128 0x11
 1320 0303 2D000000 		.4byte	.LASF32
 1321 0307 01       		.byte	0x1
 1322 0308 B801     		.2byte	0x1b8
 1323 030a A4000000 		.4byte	0xa4
 1324 030e 00000000 		.4byte	.LFB6
 1325 0312 4C000000 		.4byte	.LFE6-.LFB6
 1326 0316 01       		.uleb128 0x1
 1327 0317 9C       		.byte	0x9c
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 37


 1328 0318 69030000 		.4byte	0x369
 1329 031c 12       		.uleb128 0x12
 1330 031d D5000000 		.4byte	.LASF26
 1331 0321 01       		.byte	0x1
 1332 0322 B801     		.2byte	0x1b8
 1333 0324 6B000000 		.4byte	0x6b
 1334 0328 36040000 		.4byte	.LLST19
 1335 032c 12       		.uleb128 0x12
 1336 032d E6010000 		.4byte	.LASF27
 1337 0331 01       		.byte	0x1
 1338 0332 B801     		.2byte	0x1b8
 1339 0334 77000000 		.4byte	0x77
 1340 0338 95040000 		.4byte	.LLST20
 1341 033c 16       		.uleb128 0x16
 1342 033d C8000000 		.4byte	.LASF33
 1343 0341 01       		.byte	0x1
 1344 0342 B801     		.2byte	0x1b8
 1345 0344 6B000000 		.4byte	0x6b
 1346 0348 01       		.uleb128 0x1
 1347 0349 52       		.byte	0x52
 1348 034a 16       		.uleb128 0x16
 1349 034b 04020000 		.4byte	.LASF34
 1350 034f 01       		.byte	0x1
 1351 0350 B801     		.2byte	0x1b8
 1352 0352 6B000000 		.4byte	0x6b
 1353 0356 01       		.uleb128 0x1
 1354 0357 53       		.byte	0x53
 1355 0358 14       		.uleb128 0x14
 1356 0359 66000000 		.4byte	.LASF28
 1357 035d 01       		.byte	0x1
 1358 035e BB01     		.2byte	0x1bb
 1359 0360 A4000000 		.4byte	0xa4
 1360 0364 CF040000 		.4byte	.LLST21
 1361 0368 00       		.byte	0
 1362 0369 11       		.uleb128 0x11
 1363 036a 34020000 		.4byte	.LASF35
 1364 036e 01       		.byte	0x1
 1365 036f EC01     		.2byte	0x1ec
 1366 0371 A4000000 		.4byte	0xa4
 1367 0375 00000000 		.4byte	.LFB7
 1368 0379 3C000000 		.4byte	.LFE7-.LFB7
 1369 037d 01       		.uleb128 0x1
 1370 037e 9C       		.byte	0x9c
 1371 037f B2030000 		.4byte	0x3b2
 1372 0383 12       		.uleb128 0x12
 1373 0384 D5000000 		.4byte	.LASF26
 1374 0388 01       		.byte	0x1
 1375 0389 EC01     		.2byte	0x1ec
 1376 038b 6B000000 		.4byte	0x6b
 1377 038f EE040000 		.4byte	.LLST22
 1378 0393 16       		.uleb128 0x16
 1379 0394 D6020000 		.4byte	.LASF36
 1380 0398 01       		.byte	0x1
 1381 0399 EC01     		.2byte	0x1ec
 1382 039b 6B000000 		.4byte	0x6b
 1383 039f 01       		.uleb128 0x1
 1384 03a0 51       		.byte	0x51
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 38


 1385 03a1 14       		.uleb128 0x14
 1386 03a2 66000000 		.4byte	.LASF28
 1387 03a6 01       		.byte	0x1
 1388 03a7 EE01     		.2byte	0x1ee
 1389 03a9 A4000000 		.4byte	0xa4
 1390 03ad 41050000 		.4byte	.LLST23
 1391 03b1 00       		.byte	0
 1392 03b2 11       		.uleb128 0x11
 1393 03b3 F0000000 		.4byte	.LASF37
 1394 03b7 01       		.byte	0x1
 1395 03b8 2102     		.2byte	0x221
 1396 03ba A4000000 		.4byte	0xa4
 1397 03be 00000000 		.4byte	.LFB8
 1398 03c2 3C000000 		.4byte	.LFE8-.LFB8
 1399 03c6 01       		.uleb128 0x1
 1400 03c7 9C       		.byte	0x9c
 1401 03c8 ED030000 		.4byte	0x3ed
 1402 03cc 12       		.uleb128 0x12
 1403 03cd 1B030000 		.4byte	.LASF38
 1404 03d1 01       		.byte	0x1
 1405 03d2 2102     		.2byte	0x221
 1406 03d4 6B000000 		.4byte	0x6b
 1407 03d8 60050000 		.4byte	.LLST24
 1408 03dc 14       		.uleb128 0x14
 1409 03dd 66000000 		.4byte	.LASF28
 1410 03e1 01       		.byte	0x1
 1411 03e2 2302     		.2byte	0x223
 1412 03e4 A4000000 		.4byte	0xa4
 1413 03e8 B1050000 		.4byte	.LLST25
 1414 03ec 00       		.byte	0
 1415 03ed 11       		.uleb128 0x11
 1416 03ee 04010000 		.4byte	.LASF39
 1417 03f2 01       		.byte	0x1
 1418 03f3 4A02     		.2byte	0x24a
 1419 03f5 A4000000 		.4byte	0xa4
 1420 03f9 00000000 		.4byte	.LFB9
 1421 03fd 4C000000 		.4byte	.LFE9-.LFB9
 1422 0401 01       		.uleb128 0x1
 1423 0402 9C       		.byte	0x9c
 1424 0403 3A040000 		.4byte	0x43a
 1425 0407 14       		.uleb128 0x14
 1426 0408 66000000 		.4byte	.LASF28
 1427 040c 01       		.byte	0x1
 1428 040d 4C02     		.2byte	0x24c
 1429 040f A4000000 		.4byte	0xa4
 1430 0413 D0050000 		.4byte	.LLST26
 1431 0417 14       		.uleb128 0x14
 1432 0418 94000000 		.4byte	.LASF21
 1433 041c 01       		.byte	0x1
 1434 041d 4D02     		.2byte	0x24d
 1435 041f 6B000000 		.4byte	0x6b
 1436 0423 1E060000 		.4byte	.LLST27
 1437 0427 08       		.uleb128 0x8
 1438 0428 06000000 		.4byte	.LVL84
 1439 042c C0040000 		.4byte	0x4c0
 1440 0430 08       		.uleb128 0x8
 1441 0431 40000000 		.4byte	.LVL89
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 39


 1442 0435 CB040000 		.4byte	0x4cb
 1443 0439 00       		.byte	0
 1444 043a 17       		.uleb128 0x17
 1445 043b 28020000 		.4byte	.LASF40
 1446 043f 01       		.byte	0x1
 1447 0440 7702     		.2byte	0x277
 1448 0442 00000000 		.4byte	.LFB10
 1449 0446 38000000 		.4byte	.LFE10-.LFB10
 1450 044a 01       		.uleb128 0x1
 1451 044b 9C       		.byte	0x9c
 1452 044c 73040000 		.4byte	0x473
 1453 0450 14       		.uleb128 0x14
 1454 0451 94000000 		.4byte	.LASF21
 1455 0455 01       		.byte	0x1
 1456 0456 7902     		.2byte	0x279
 1457 0458 6B000000 		.4byte	0x6b
 1458 045c 31060000 		.4byte	.LLST28
 1459 0460 08       		.uleb128 0x8
 1460 0461 06000000 		.4byte	.LVL91
 1461 0465 C0040000 		.4byte	0x4c0
 1462 0469 08       		.uleb128 0x8
 1463 046a 2C000000 		.4byte	.LVL92
 1464 046e CB040000 		.4byte	0x4cb
 1465 0472 00       		.byte	0
 1466 0473 11       		.uleb128 0x11
 1467 0474 62020000 		.4byte	.LASF41
 1468 0478 01       		.byte	0x1
 1469 0479 A102     		.2byte	0x2a1
 1470 047b A4000000 		.4byte	0xa4
 1471 047f 00000000 		.4byte	.LFB11
 1472 0483 28000000 		.4byte	.LFE11-.LFB11
 1473 0487 01       		.uleb128 0x1
 1474 0488 9C       		.byte	0x9c
 1475 0489 9E040000 		.4byte	0x49e
 1476 048d 14       		.uleb128 0x14
 1477 048e 66000000 		.4byte	.LASF28
 1478 0492 01       		.byte	0x1
 1479 0493 A302     		.2byte	0x2a3
 1480 0495 A4000000 		.4byte	0xa4
 1481 0499 44060000 		.4byte	.LLST29
 1482 049d 00       		.byte	0
 1483 049e 18       		.uleb128 0x18
 1484 049f EC020000 		.4byte	.LASF42
 1485 04a3 01       		.byte	0x1
 1486 04a4 3C       		.byte	0x3c
 1487 04a5 83000000 		.4byte	0x83
 1488 04a9 05       		.uleb128 0x5
 1489 04aa 03       		.byte	0x3
 1490 04ab 04000000 		.4byte	spcWaitPipeBypass
 1491 04af 19       		.uleb128 0x19
 1492 04b0 BB000000 		.4byte	.LASF46
 1493 04b4 01       		.byte	0x1
 1494 04b5 30       		.byte	0x30
 1495 04b6 6B000000 		.4byte	0x6b
 1496 04ba 05       		.uleb128 0x5
 1497 04bb 03       		.byte	0x3
 1498 04bc 00000000 		.4byte	SpcLockState
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 40


 1499 04c0 1A       		.uleb128 0x1a
 1500 04c1 A3010000 		.4byte	.LASF47
 1501 04c5 03       		.byte	0x3
 1502 04c6 7D       		.byte	0x7d
 1503 04c7 6B000000 		.4byte	0x6b
 1504 04cb 1B       		.uleb128 0x1b
 1505 04cc EE010000 		.4byte	.LASF48
 1506 04d0 03       		.byte	0x3
 1507 04d1 7E       		.byte	0x7e
 1508 04d2 DC040000 		.4byte	0x4dc
 1509 04d6 1C       		.uleb128 0x1c
 1510 04d7 6B000000 		.4byte	0x6b
 1511 04db 00       		.byte	0
 1512 04dc 1D       		.uleb128 0x1d
 1513 04dd 53020000 		.4byte	.LASF49
 1514 04e1 03       		.byte	0x3
 1515 04e2 77       		.byte	0x77
 1516 04e3 1C       		.uleb128 0x1c
 1517 04e4 77000000 		.4byte	0x77
 1518 04e8 00       		.byte	0
 1519 04e9 00       		.byte	0
 1520              		.section	.debug_abbrev,"",%progbits
 1521              	.Ldebug_abbrev0:
 1522 0000 01       		.uleb128 0x1
 1523 0001 11       		.uleb128 0x11
 1524 0002 01       		.byte	0x1
 1525 0003 25       		.uleb128 0x25
 1526 0004 0E       		.uleb128 0xe
 1527 0005 13       		.uleb128 0x13
 1528 0006 0B       		.uleb128 0xb
 1529 0007 03       		.uleb128 0x3
 1530 0008 0E       		.uleb128 0xe
 1531 0009 1B       		.uleb128 0x1b
 1532 000a 0E       		.uleb128 0xe
 1533 000b 55       		.uleb128 0x55
 1534 000c 17       		.uleb128 0x17
 1535 000d 11       		.uleb128 0x11
 1536 000e 01       		.uleb128 0x1
 1537 000f 10       		.uleb128 0x10
 1538 0010 17       		.uleb128 0x17
 1539 0011 00       		.byte	0
 1540 0012 00       		.byte	0
 1541 0013 02       		.uleb128 0x2
 1542 0014 24       		.uleb128 0x24
 1543 0015 00       		.byte	0
 1544 0016 0B       		.uleb128 0xb
 1545 0017 0B       		.uleb128 0xb
 1546 0018 3E       		.uleb128 0x3e
 1547 0019 0B       		.uleb128 0xb
 1548 001a 03       		.uleb128 0x3
 1549 001b 0E       		.uleb128 0xe
 1550 001c 00       		.byte	0
 1551 001d 00       		.byte	0
 1552 001e 03       		.uleb128 0x3
 1553 001f 24       		.uleb128 0x24
 1554 0020 00       		.byte	0
 1555 0021 0B       		.uleb128 0xb
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 41


 1556 0022 0B       		.uleb128 0xb
 1557 0023 3E       		.uleb128 0x3e
 1558 0024 0B       		.uleb128 0xb
 1559 0025 03       		.uleb128 0x3
 1560 0026 08       		.uleb128 0x8
 1561 0027 00       		.byte	0
 1562 0028 00       		.byte	0
 1563 0029 04       		.uleb128 0x4
 1564 002a 16       		.uleb128 0x16
 1565 002b 00       		.byte	0
 1566 002c 03       		.uleb128 0x3
 1567 002d 0E       		.uleb128 0xe
 1568 002e 3A       		.uleb128 0x3a
 1569 002f 0B       		.uleb128 0xb
 1570 0030 3B       		.uleb128 0x3b
 1571 0031 05       		.uleb128 0x5
 1572 0032 49       		.uleb128 0x49
 1573 0033 13       		.uleb128 0x13
 1574 0034 00       		.byte	0
 1575 0035 00       		.byte	0
 1576 0036 05       		.uleb128 0x5
 1577 0037 35       		.uleb128 0x35
 1578 0038 00       		.byte	0
 1579 0039 49       		.uleb128 0x49
 1580 003a 13       		.uleb128 0x13
 1581 003b 00       		.byte	0
 1582 003c 00       		.byte	0
 1583 003d 06       		.uleb128 0x6
 1584 003e 2E       		.uleb128 0x2e
 1585 003f 01       		.byte	0x1
 1586 0040 3F       		.uleb128 0x3f
 1587 0041 19       		.uleb128 0x19
 1588 0042 03       		.uleb128 0x3
 1589 0043 0E       		.uleb128 0xe
 1590 0044 3A       		.uleb128 0x3a
 1591 0045 0B       		.uleb128 0xb
 1592 0046 3B       		.uleb128 0x3b
 1593 0047 0B       		.uleb128 0xb
 1594 0048 27       		.uleb128 0x27
 1595 0049 19       		.uleb128 0x19
 1596 004a 11       		.uleb128 0x11
 1597 004b 01       		.uleb128 0x1
 1598 004c 12       		.uleb128 0x12
 1599 004d 06       		.uleb128 0x6
 1600 004e 40       		.uleb128 0x40
 1601 004f 18       		.uleb128 0x18
 1602 0050 9742     		.uleb128 0x2117
 1603 0052 19       		.uleb128 0x19
 1604 0053 01       		.uleb128 0x1
 1605 0054 13       		.uleb128 0x13
 1606 0055 00       		.byte	0
 1607 0056 00       		.byte	0
 1608 0057 07       		.uleb128 0x7
 1609 0058 34       		.uleb128 0x34
 1610 0059 00       		.byte	0
 1611 005a 03       		.uleb128 0x3
 1612 005b 0E       		.uleb128 0xe
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 42


 1613 005c 3A       		.uleb128 0x3a
 1614 005d 0B       		.uleb128 0xb
 1615 005e 3B       		.uleb128 0x3b
 1616 005f 0B       		.uleb128 0xb
 1617 0060 49       		.uleb128 0x49
 1618 0061 13       		.uleb128 0x13
 1619 0062 02       		.uleb128 0x2
 1620 0063 17       		.uleb128 0x17
 1621 0064 00       		.byte	0
 1622 0065 00       		.byte	0
 1623 0066 08       		.uleb128 0x8
 1624 0067 898201   		.uleb128 0x4109
 1625 006a 00       		.byte	0
 1626 006b 11       		.uleb128 0x11
 1627 006c 01       		.uleb128 0x1
 1628 006d 31       		.uleb128 0x31
 1629 006e 13       		.uleb128 0x13
 1630 006f 00       		.byte	0
 1631 0070 00       		.byte	0
 1632 0071 09       		.uleb128 0x9
 1633 0072 2E       		.uleb128 0x2e
 1634 0073 01       		.byte	0x1
 1635 0074 3F       		.uleb128 0x3f
 1636 0075 19       		.uleb128 0x19
 1637 0076 03       		.uleb128 0x3
 1638 0077 0E       		.uleb128 0xe
 1639 0078 3A       		.uleb128 0x3a
 1640 0079 0B       		.uleb128 0xb
 1641 007a 3B       		.uleb128 0x3b
 1642 007b 0B       		.uleb128 0xb
 1643 007c 27       		.uleb128 0x27
 1644 007d 19       		.uleb128 0x19
 1645 007e 49       		.uleb128 0x49
 1646 007f 13       		.uleb128 0x13
 1647 0080 11       		.uleb128 0x11
 1648 0081 01       		.uleb128 0x1
 1649 0082 12       		.uleb128 0x12
 1650 0083 06       		.uleb128 0x6
 1651 0084 40       		.uleb128 0x40
 1652 0085 18       		.uleb128 0x18
 1653 0086 9742     		.uleb128 0x2117
 1654 0088 19       		.uleb128 0x19
 1655 0089 01       		.uleb128 0x1
 1656 008a 13       		.uleb128 0x13
 1657 008b 00       		.byte	0
 1658 008c 00       		.byte	0
 1659 008d 0A       		.uleb128 0xa
 1660 008e 05       		.uleb128 0x5
 1661 008f 00       		.byte	0
 1662 0090 03       		.uleb128 0x3
 1663 0091 0E       		.uleb128 0xe
 1664 0092 3A       		.uleb128 0x3a
 1665 0093 0B       		.uleb128 0xb
 1666 0094 3B       		.uleb128 0x3b
 1667 0095 0B       		.uleb128 0xb
 1668 0096 49       		.uleb128 0x49
 1669 0097 13       		.uleb128 0x13
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 43


 1670 0098 02       		.uleb128 0x2
 1671 0099 17       		.uleb128 0x17
 1672 009a 00       		.byte	0
 1673 009b 00       		.byte	0
 1674 009c 0B       		.uleb128 0xb
 1675 009d 34       		.uleb128 0x34
 1676 009e 00       		.byte	0
 1677 009f 03       		.uleb128 0x3
 1678 00a0 08       		.uleb128 0x8
 1679 00a1 3A       		.uleb128 0x3a
 1680 00a2 0B       		.uleb128 0xb
 1681 00a3 3B       		.uleb128 0x3b
 1682 00a4 0B       		.uleb128 0xb
 1683 00a5 49       		.uleb128 0x49
 1684 00a6 13       		.uleb128 0x13
 1685 00a7 02       		.uleb128 0x2
 1686 00a8 17       		.uleb128 0x17
 1687 00a9 00       		.byte	0
 1688 00aa 00       		.byte	0
 1689 00ab 0C       		.uleb128 0xc
 1690 00ac 898201   		.uleb128 0x4109
 1691 00af 01       		.byte	0x1
 1692 00b0 11       		.uleb128 0x11
 1693 00b1 01       		.uleb128 0x1
 1694 00b2 31       		.uleb128 0x31
 1695 00b3 13       		.uleb128 0x13
 1696 00b4 00       		.byte	0
 1697 00b5 00       		.byte	0
 1698 00b6 0D       		.uleb128 0xd
 1699 00b7 8A8201   		.uleb128 0x410a
 1700 00ba 00       		.byte	0
 1701 00bb 02       		.uleb128 0x2
 1702 00bc 18       		.uleb128 0x18
 1703 00bd 9142     		.uleb128 0x2111
 1704 00bf 18       		.uleb128 0x18
 1705 00c0 00       		.byte	0
 1706 00c1 00       		.byte	0
 1707 00c2 0E       		.uleb128 0xe
 1708 00c3 0F       		.uleb128 0xf
 1709 00c4 00       		.byte	0
 1710 00c5 0B       		.uleb128 0xb
 1711 00c6 0B       		.uleb128 0xb
 1712 00c7 49       		.uleb128 0x49
 1713 00c8 13       		.uleb128 0x13
 1714 00c9 00       		.byte	0
 1715 00ca 00       		.byte	0
 1716 00cb 0F       		.uleb128 0xf
 1717 00cc 05       		.uleb128 0x5
 1718 00cd 00       		.byte	0
 1719 00ce 03       		.uleb128 0x3
 1720 00cf 0E       		.uleb128 0xe
 1721 00d0 3A       		.uleb128 0x3a
 1722 00d1 0B       		.uleb128 0xb
 1723 00d2 3B       		.uleb128 0x3b
 1724 00d3 0B       		.uleb128 0xb
 1725 00d4 49       		.uleb128 0x49
 1726 00d5 13       		.uleb128 0x13
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 44


 1727 00d6 02       		.uleb128 0x2
 1728 00d7 18       		.uleb128 0x18
 1729 00d8 00       		.byte	0
 1730 00d9 00       		.byte	0
 1731 00da 10       		.uleb128 0x10
 1732 00db 26       		.uleb128 0x26
 1733 00dc 00       		.byte	0
 1734 00dd 49       		.uleb128 0x49
 1735 00de 13       		.uleb128 0x13
 1736 00df 00       		.byte	0
 1737 00e0 00       		.byte	0
 1738 00e1 11       		.uleb128 0x11
 1739 00e2 2E       		.uleb128 0x2e
 1740 00e3 01       		.byte	0x1
 1741 00e4 3F       		.uleb128 0x3f
 1742 00e5 19       		.uleb128 0x19
 1743 00e6 03       		.uleb128 0x3
 1744 00e7 0E       		.uleb128 0xe
 1745 00e8 3A       		.uleb128 0x3a
 1746 00e9 0B       		.uleb128 0xb
 1747 00ea 3B       		.uleb128 0x3b
 1748 00eb 05       		.uleb128 0x5
 1749 00ec 27       		.uleb128 0x27
 1750 00ed 19       		.uleb128 0x19
 1751 00ee 49       		.uleb128 0x49
 1752 00ef 13       		.uleb128 0x13
 1753 00f0 11       		.uleb128 0x11
 1754 00f1 01       		.uleb128 0x1
 1755 00f2 12       		.uleb128 0x12
 1756 00f3 06       		.uleb128 0x6
 1757 00f4 40       		.uleb128 0x40
 1758 00f5 18       		.uleb128 0x18
 1759 00f6 9742     		.uleb128 0x2117
 1760 00f8 19       		.uleb128 0x19
 1761 00f9 01       		.uleb128 0x1
 1762 00fa 13       		.uleb128 0x13
 1763 00fb 00       		.byte	0
 1764 00fc 00       		.byte	0
 1765 00fd 12       		.uleb128 0x12
 1766 00fe 05       		.uleb128 0x5
 1767 00ff 00       		.byte	0
 1768 0100 03       		.uleb128 0x3
 1769 0101 0E       		.uleb128 0xe
 1770 0102 3A       		.uleb128 0x3a
 1771 0103 0B       		.uleb128 0xb
 1772 0104 3B       		.uleb128 0x3b
 1773 0105 05       		.uleb128 0x5
 1774 0106 49       		.uleb128 0x49
 1775 0107 13       		.uleb128 0x13
 1776 0108 02       		.uleb128 0x2
 1777 0109 17       		.uleb128 0x17
 1778 010a 00       		.byte	0
 1779 010b 00       		.byte	0
 1780 010c 13       		.uleb128 0x13
 1781 010d 05       		.uleb128 0x5
 1782 010e 00       		.byte	0
 1783 010f 03       		.uleb128 0x3
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 45


 1784 0110 08       		.uleb128 0x8
 1785 0111 3A       		.uleb128 0x3a
 1786 0112 0B       		.uleb128 0xb
 1787 0113 3B       		.uleb128 0x3b
 1788 0114 05       		.uleb128 0x5
 1789 0115 49       		.uleb128 0x49
 1790 0116 13       		.uleb128 0x13
 1791 0117 02       		.uleb128 0x2
 1792 0118 17       		.uleb128 0x17
 1793 0119 00       		.byte	0
 1794 011a 00       		.byte	0
 1795 011b 14       		.uleb128 0x14
 1796 011c 34       		.uleb128 0x34
 1797 011d 00       		.byte	0
 1798 011e 03       		.uleb128 0x3
 1799 011f 0E       		.uleb128 0xe
 1800 0120 3A       		.uleb128 0x3a
 1801 0121 0B       		.uleb128 0xb
 1802 0122 3B       		.uleb128 0x3b
 1803 0123 05       		.uleb128 0x5
 1804 0124 49       		.uleb128 0x49
 1805 0125 13       		.uleb128 0x13
 1806 0126 02       		.uleb128 0x2
 1807 0127 17       		.uleb128 0x17
 1808 0128 00       		.byte	0
 1809 0129 00       		.byte	0
 1810 012a 15       		.uleb128 0x15
 1811 012b 34       		.uleb128 0x34
 1812 012c 00       		.byte	0
 1813 012d 03       		.uleb128 0x3
 1814 012e 08       		.uleb128 0x8
 1815 012f 3A       		.uleb128 0x3a
 1816 0130 0B       		.uleb128 0xb
 1817 0131 3B       		.uleb128 0x3b
 1818 0132 05       		.uleb128 0x5
 1819 0133 49       		.uleb128 0x49
 1820 0134 13       		.uleb128 0x13
 1821 0135 02       		.uleb128 0x2
 1822 0136 17       		.uleb128 0x17
 1823 0137 00       		.byte	0
 1824 0138 00       		.byte	0
 1825 0139 16       		.uleb128 0x16
 1826 013a 05       		.uleb128 0x5
 1827 013b 00       		.byte	0
 1828 013c 03       		.uleb128 0x3
 1829 013d 0E       		.uleb128 0xe
 1830 013e 3A       		.uleb128 0x3a
 1831 013f 0B       		.uleb128 0xb
 1832 0140 3B       		.uleb128 0x3b
 1833 0141 05       		.uleb128 0x5
 1834 0142 49       		.uleb128 0x49
 1835 0143 13       		.uleb128 0x13
 1836 0144 02       		.uleb128 0x2
 1837 0145 18       		.uleb128 0x18
 1838 0146 00       		.byte	0
 1839 0147 00       		.byte	0
 1840 0148 17       		.uleb128 0x17
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 46


 1841 0149 2E       		.uleb128 0x2e
 1842 014a 01       		.byte	0x1
 1843 014b 3F       		.uleb128 0x3f
 1844 014c 19       		.uleb128 0x19
 1845 014d 03       		.uleb128 0x3
 1846 014e 0E       		.uleb128 0xe
 1847 014f 3A       		.uleb128 0x3a
 1848 0150 0B       		.uleb128 0xb
 1849 0151 3B       		.uleb128 0x3b
 1850 0152 05       		.uleb128 0x5
 1851 0153 27       		.uleb128 0x27
 1852 0154 19       		.uleb128 0x19
 1853 0155 11       		.uleb128 0x11
 1854 0156 01       		.uleb128 0x1
 1855 0157 12       		.uleb128 0x12
 1856 0158 06       		.uleb128 0x6
 1857 0159 40       		.uleb128 0x40
 1858 015a 18       		.uleb128 0x18
 1859 015b 9742     		.uleb128 0x2117
 1860 015d 19       		.uleb128 0x19
 1861 015e 01       		.uleb128 0x1
 1862 015f 13       		.uleb128 0x13
 1863 0160 00       		.byte	0
 1864 0161 00       		.byte	0
 1865 0162 18       		.uleb128 0x18
 1866 0163 34       		.uleb128 0x34
 1867 0164 00       		.byte	0
 1868 0165 03       		.uleb128 0x3
 1869 0166 0E       		.uleb128 0xe
 1870 0167 3A       		.uleb128 0x3a
 1871 0168 0B       		.uleb128 0xb
 1872 0169 3B       		.uleb128 0x3b
 1873 016a 0B       		.uleb128 0xb
 1874 016b 49       		.uleb128 0x49
 1875 016c 13       		.uleb128 0x13
 1876 016d 02       		.uleb128 0x2
 1877 016e 18       		.uleb128 0x18
 1878 016f 00       		.byte	0
 1879 0170 00       		.byte	0
 1880 0171 19       		.uleb128 0x19
 1881 0172 34       		.uleb128 0x34
 1882 0173 00       		.byte	0
 1883 0174 03       		.uleb128 0x3
 1884 0175 0E       		.uleb128 0xe
 1885 0176 3A       		.uleb128 0x3a
 1886 0177 0B       		.uleb128 0xb
 1887 0178 3B       		.uleb128 0x3b
 1888 0179 0B       		.uleb128 0xb
 1889 017a 49       		.uleb128 0x49
 1890 017b 13       		.uleb128 0x13
 1891 017c 3F       		.uleb128 0x3f
 1892 017d 19       		.uleb128 0x19
 1893 017e 02       		.uleb128 0x2
 1894 017f 18       		.uleb128 0x18
 1895 0180 00       		.byte	0
 1896 0181 00       		.byte	0
 1897 0182 1A       		.uleb128 0x1a
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 47


 1898 0183 2E       		.uleb128 0x2e
 1899 0184 00       		.byte	0
 1900 0185 3F       		.uleb128 0x3f
 1901 0186 19       		.uleb128 0x19
 1902 0187 03       		.uleb128 0x3
 1903 0188 0E       		.uleb128 0xe
 1904 0189 3A       		.uleb128 0x3a
 1905 018a 0B       		.uleb128 0xb
 1906 018b 3B       		.uleb128 0x3b
 1907 018c 0B       		.uleb128 0xb
 1908 018d 27       		.uleb128 0x27
 1909 018e 19       		.uleb128 0x19
 1910 018f 49       		.uleb128 0x49
 1911 0190 13       		.uleb128 0x13
 1912 0191 3C       		.uleb128 0x3c
 1913 0192 19       		.uleb128 0x19
 1914 0193 00       		.byte	0
 1915 0194 00       		.byte	0
 1916 0195 1B       		.uleb128 0x1b
 1917 0196 2E       		.uleb128 0x2e
 1918 0197 01       		.byte	0x1
 1919 0198 3F       		.uleb128 0x3f
 1920 0199 19       		.uleb128 0x19
 1921 019a 03       		.uleb128 0x3
 1922 019b 0E       		.uleb128 0xe
 1923 019c 3A       		.uleb128 0x3a
 1924 019d 0B       		.uleb128 0xb
 1925 019e 3B       		.uleb128 0x3b
 1926 019f 0B       		.uleb128 0xb
 1927 01a0 27       		.uleb128 0x27
 1928 01a1 19       		.uleb128 0x19
 1929 01a2 3C       		.uleb128 0x3c
 1930 01a3 19       		.uleb128 0x19
 1931 01a4 01       		.uleb128 0x1
 1932 01a5 13       		.uleb128 0x13
 1933 01a6 00       		.byte	0
 1934 01a7 00       		.byte	0
 1935 01a8 1C       		.uleb128 0x1c
 1936 01a9 05       		.uleb128 0x5
 1937 01aa 00       		.byte	0
 1938 01ab 49       		.uleb128 0x49
 1939 01ac 13       		.uleb128 0x13
 1940 01ad 00       		.byte	0
 1941 01ae 00       		.byte	0
 1942 01af 1D       		.uleb128 0x1d
 1943 01b0 2E       		.uleb128 0x2e
 1944 01b1 01       		.byte	0x1
 1945 01b2 3F       		.uleb128 0x3f
 1946 01b3 19       		.uleb128 0x19
 1947 01b4 03       		.uleb128 0x3
 1948 01b5 0E       		.uleb128 0xe
 1949 01b6 3A       		.uleb128 0x3a
 1950 01b7 0B       		.uleb128 0xb
 1951 01b8 3B       		.uleb128 0x3b
 1952 01b9 0B       		.uleb128 0xb
 1953 01ba 27       		.uleb128 0x27
 1954 01bb 19       		.uleb128 0x19
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 48


 1955 01bc 3C       		.uleb128 0x3c
 1956 01bd 19       		.uleb128 0x19
 1957 01be 00       		.byte	0
 1958 01bf 00       		.byte	0
 1959 01c0 00       		.byte	0
 1960              		.section	.debug_loc,"",%progbits
 1961              	.Ldebug_loc0:
 1962              	.LLST0:
 1963 0000 06000000 		.4byte	.LVL0
 1964 0004 1D000000 		.4byte	.LVL1-1
 1965 0008 0100     		.2byte	0x1
 1966 000a 50       		.byte	0x50
 1967 000b 00000000 		.4byte	0
 1968 000f 00000000 		.4byte	0
 1969              	.LLST1:
 1970 0013 06000000 		.4byte	.LVL2
 1971 0017 1D000000 		.4byte	.LVL3-1
 1972 001b 0100     		.2byte	0x1
 1973 001d 50       		.byte	0x50
 1974 001e 00000000 		.4byte	0
 1975 0022 00000000 		.4byte	0
 1976              	.LLST2:
 1977 0026 00000000 		.4byte	.LVL4
 1978 002a 0A000000 		.4byte	.LVL6
 1979 002e 0100     		.2byte	0x1
 1980 0030 50       		.byte	0x50
 1981 0031 0A000000 		.4byte	.LVL6
 1982 0035 2C000000 		.4byte	.LVL10
 1983 0039 0100     		.2byte	0x1
 1984 003b 56       		.byte	0x56
 1985 003c 2C000000 		.4byte	.LVL10
 1986 0040 34000000 		.4byte	.LFE2
 1987 0044 0400     		.2byte	0x4
 1988 0046 F3       		.byte	0xf3
 1989 0047 01       		.uleb128 0x1
 1990 0048 50       		.byte	0x50
 1991 0049 9F       		.byte	0x9f
 1992 004a 00000000 		.4byte	0
 1993 004e 00000000 		.4byte	0
 1994              	.LLST3:
 1995 0052 00000000 		.4byte	.LVL4
 1996 0056 0A000000 		.4byte	.LVL6
 1997 005a 0100     		.2byte	0x1
 1998 005c 51       		.byte	0x51
 1999 005d 0A000000 		.4byte	.LVL6
 2000 0061 34000000 		.4byte	.LFE2
 2001 0065 0400     		.2byte	0x4
 2002 0067 F3       		.byte	0xf3
 2003 0068 01       		.uleb128 0x1
 2004 0069 51       		.byte	0x51
 2005 006a 9F       		.byte	0x9f
 2006 006b 00000000 		.4byte	0
 2007 006f 00000000 		.4byte	0
 2008              	.LLST4:
 2009 0073 06000000 		.4byte	.LVL5
 2010 0077 0A000000 		.4byte	.LVL6
 2011 007b 0200     		.2byte	0x2
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 49


 2012 007d 30       		.byte	0x30
 2013 007e 9F       		.byte	0x9f
 2014 007f 0A000000 		.4byte	.LVL6
 2015 0083 22000000 		.4byte	.LVL8
 2016 0087 0100     		.2byte	0x1
 2017 0089 54       		.byte	0x54
 2018 008a 24000000 		.4byte	.LVL9
 2019 008e 2C000000 		.4byte	.LVL10
 2020 0092 0100     		.2byte	0x1
 2021 0094 54       		.byte	0x54
 2022 0095 00000000 		.4byte	0
 2023 0099 00000000 		.4byte	0
 2024              	.LLST5:
 2025 009d 00000000 		.4byte	.LVL11
 2026 00a1 3C000000 		.4byte	.LVL13
 2027 00a5 0100     		.2byte	0x1
 2028 00a7 50       		.byte	0x50
 2029 00a8 3C000000 		.4byte	.LVL13
 2030 00ac 3E000000 		.4byte	.LVL14
 2031 00b0 0200     		.2byte	0x2
 2032 00b2 74       		.byte	0x74
 2033 00b3 00       		.sleb128 0
 2034 00b4 3E000000 		.4byte	.LVL14
 2035 00b8 5E000000 		.4byte	.LVL20
 2036 00bc 0400     		.2byte	0x4
 2037 00be F3       		.byte	0xf3
 2038 00bf 01       		.uleb128 0x1
 2039 00c0 50       		.byte	0x50
 2040 00c1 9F       		.byte	0x9f
 2041 00c2 5E000000 		.4byte	.LVL20
 2042 00c6 60000000 		.4byte	.LVL21
 2043 00ca 0100     		.2byte	0x1
 2044 00cc 50       		.byte	0x50
 2045 00cd 60000000 		.4byte	.LVL21
 2046 00d1 62000000 		.4byte	.LVL22
 2047 00d5 0400     		.2byte	0x4
 2048 00d7 F3       		.byte	0xf3
 2049 00d8 01       		.uleb128 0x1
 2050 00d9 50       		.byte	0x50
 2051 00da 9F       		.byte	0x9f
 2052 00db 62000000 		.4byte	.LVL22
 2053 00df 64000000 		.4byte	.LVL23
 2054 00e3 0100     		.2byte	0x1
 2055 00e5 50       		.byte	0x50
 2056 00e6 64000000 		.4byte	.LVL23
 2057 00ea 66000000 		.4byte	.LVL24
 2058 00ee 0400     		.2byte	0x4
 2059 00f0 F3       		.byte	0xf3
 2060 00f1 01       		.uleb128 0x1
 2061 00f2 50       		.byte	0x50
 2062 00f3 9F       		.byte	0x9f
 2063 00f4 66000000 		.4byte	.LVL24
 2064 00f8 68000000 		.4byte	.LVL25
 2065 00fc 0100     		.2byte	0x1
 2066 00fe 50       		.byte	0x50
 2067 00ff 68000000 		.4byte	.LVL25
 2068 0103 6A000000 		.4byte	.LVL26
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 50


 2069 0107 0400     		.2byte	0x4
 2070 0109 F3       		.byte	0xf3
 2071 010a 01       		.uleb128 0x1
 2072 010b 50       		.byte	0x50
 2073 010c 9F       		.byte	0x9f
 2074 010d 6A000000 		.4byte	.LVL26
 2075 0111 6C000000 		.4byte	.LVL27
 2076 0115 0100     		.2byte	0x1
 2077 0117 50       		.byte	0x50
 2078 0118 6C000000 		.4byte	.LVL27
 2079 011c 78000000 		.4byte	.LFE3
 2080 0120 0400     		.2byte	0x4
 2081 0122 F3       		.byte	0xf3
 2082 0123 01       		.uleb128 0x1
 2083 0124 50       		.byte	0x50
 2084 0125 9F       		.byte	0x9f
 2085 0126 00000000 		.4byte	0
 2086 012a 00000000 		.4byte	0
 2087              	.LLST6:
 2088 012e 00000000 		.4byte	.LVL11
 2089 0132 40000000 		.4byte	.LVL15
 2090 0136 0100     		.2byte	0x1
 2091 0138 51       		.byte	0x51
 2092 0139 40000000 		.4byte	.LVL15
 2093 013d 5E000000 		.4byte	.LVL20
 2094 0141 0400     		.2byte	0x4
 2095 0143 F3       		.byte	0xf3
 2096 0144 01       		.uleb128 0x1
 2097 0145 51       		.byte	0x51
 2098 0146 9F       		.byte	0x9f
 2099 0147 5E000000 		.4byte	.LVL20
 2100 014b 6C000000 		.4byte	.LVL27
 2101 014f 0100     		.2byte	0x1
 2102 0151 51       		.byte	0x51
 2103 0152 6C000000 		.4byte	.LVL27
 2104 0156 78000000 		.4byte	.LFE3
 2105 015a 0400     		.2byte	0x4
 2106 015c F3       		.byte	0xf3
 2107 015d 01       		.uleb128 0x1
 2108 015e 51       		.byte	0x51
 2109 015f 9F       		.byte	0x9f
 2110 0160 00000000 		.4byte	0
 2111 0164 00000000 		.4byte	0
 2112              	.LLST7:
 2113 0168 02000000 		.4byte	.LVL12
 2114 016c 6C000000 		.4byte	.LVL27
 2115 0170 0200     		.2byte	0x2
 2116 0172 37       		.byte	0x37
 2117 0173 9F       		.byte	0x9f
 2118 0174 6C000000 		.4byte	.LVL27
 2119 0178 78000000 		.4byte	.LFE3
 2120 017c 0100     		.2byte	0x1
 2121 017e 50       		.byte	0x50
 2122 017f 00000000 		.4byte	0
 2123 0183 00000000 		.4byte	0
 2124              	.LLST8:
 2125 0187 48000000 		.4byte	.LVL16
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 51


 2126 018b 4C000000 		.4byte	.LVL17
 2127 018f 0200     		.2byte	0x2
 2128 0191 30       		.byte	0x30
 2129 0192 9F       		.byte	0x9f
 2130 0193 4C000000 		.4byte	.LVL17
 2131 0197 54000000 		.4byte	.LVL18
 2132 019b 0100     		.2byte	0x1
 2133 019d 51       		.byte	0x51
 2134 019e 56000000 		.4byte	.LVL19
 2135 01a2 5E000000 		.4byte	.LVL20
 2136 01a6 0100     		.2byte	0x1
 2137 01a8 51       		.byte	0x51
 2138 01a9 00000000 		.4byte	0
 2139 01ad 00000000 		.4byte	0
 2140              	.LLST9:
 2141 01b1 00000000 		.4byte	.LVL28
 2142 01b5 2C000000 		.4byte	.LVL30
 2143 01b9 0100     		.2byte	0x1
 2144 01bb 50       		.byte	0x50
 2145 01bc 2C000000 		.4byte	.LVL30
 2146 01c0 3E000000 		.4byte	.LVL33
 2147 01c4 0400     		.2byte	0x4
 2148 01c6 F3       		.byte	0xf3
 2149 01c7 01       		.uleb128 0x1
 2150 01c8 50       		.byte	0x50
 2151 01c9 9F       		.byte	0x9f
 2152 01ca 3E000000 		.4byte	.LVL33
 2153 01ce 40000000 		.4byte	.LVL34
 2154 01d2 0100     		.2byte	0x1
 2155 01d4 50       		.byte	0x50
 2156 01d5 40000000 		.4byte	.LVL34
 2157 01d9 42000000 		.4byte	.LVL35
 2158 01dd 0400     		.2byte	0x4
 2159 01df F3       		.byte	0xf3
 2160 01e0 01       		.uleb128 0x1
 2161 01e1 50       		.byte	0x50
 2162 01e2 9F       		.byte	0x9f
 2163 01e3 42000000 		.4byte	.LVL35
 2164 01e7 44000000 		.4byte	.LVL36
 2165 01eb 0100     		.2byte	0x1
 2166 01ed 50       		.byte	0x50
 2167 01ee 44000000 		.4byte	.LVL36
 2168 01f2 54000000 		.4byte	.LFE4
 2169 01f6 0400     		.2byte	0x4
 2170 01f8 F3       		.byte	0xf3
 2171 01f9 01       		.uleb128 0x1
 2172 01fa 50       		.byte	0x50
 2173 01fb 9F       		.byte	0x9f
 2174 01fc 00000000 		.4byte	0
 2175 0200 00000000 		.4byte	0
 2176              	.LLST10:
 2177 0204 00000000 		.4byte	.LVL28
 2178 0208 40000000 		.4byte	.LVL34
 2179 020c 0200     		.2byte	0x2
 2180 020e 37       		.byte	0x37
 2181 020f 9F       		.byte	0x9f
 2182 0210 40000000 		.4byte	.LVL34
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 52


 2183 0214 42000000 		.4byte	.LVL35
 2184 0218 0100     		.2byte	0x1
 2185 021a 50       		.byte	0x50
 2186 021b 42000000 		.4byte	.LVL35
 2187 021f 44000000 		.4byte	.LVL36
 2188 0223 0200     		.2byte	0x2
 2189 0225 37       		.byte	0x37
 2190 0226 9F       		.byte	0x9f
 2191 0227 44000000 		.4byte	.LVL36
 2192 022b 54000000 		.4byte	.LFE4
 2193 022f 0100     		.2byte	0x1
 2194 0231 50       		.byte	0x50
 2195 0232 00000000 		.4byte	0
 2196 0236 00000000 		.4byte	0
 2197              	.LLST11:
 2198 023a 28000000 		.4byte	.LVL29
 2199 023e 2C000000 		.4byte	.LVL30
 2200 0242 0200     		.2byte	0x2
 2201 0244 30       		.byte	0x30
 2202 0245 9F       		.byte	0x9f
 2203 0246 2C000000 		.4byte	.LVL30
 2204 024a 34000000 		.4byte	.LVL31
 2205 024e 0100     		.2byte	0x1
 2206 0250 53       		.byte	0x53
 2207 0251 36000000 		.4byte	.LVL32
 2208 0255 3E000000 		.4byte	.LVL33
 2209 0259 0100     		.2byte	0x1
 2210 025b 53       		.byte	0x53
 2211 025c 00000000 		.4byte	0
 2212 0260 00000000 		.4byte	0
 2213              	.LLST12:
 2214 0264 00000000 		.4byte	.LVL37
 2215 0268 6C000000 		.4byte	.LVL46
 2216 026c 0100     		.2byte	0x1
 2217 026e 50       		.byte	0x50
 2218 026f 6C000000 		.4byte	.LVL46
 2219 0273 8A000000 		.4byte	.LVL54
 2220 0277 0400     		.2byte	0x4
 2221 0279 F3       		.byte	0xf3
 2222 027a 01       		.uleb128 0x1
 2223 027b 50       		.byte	0x50
 2224 027c 9F       		.byte	0x9f
 2225 027d 8A000000 		.4byte	.LVL54
 2226 0281 8C000000 		.4byte	.LVL55
 2227 0285 0100     		.2byte	0x1
 2228 0287 50       		.byte	0x50
 2229 0288 8C000000 		.4byte	.LVL55
 2230 028c 8E000000 		.4byte	.LVL56
 2231 0290 0400     		.2byte	0x4
 2232 0292 F3       		.byte	0xf3
 2233 0293 01       		.uleb128 0x1
 2234 0294 50       		.byte	0x50
 2235 0295 9F       		.byte	0x9f
 2236 0296 8E000000 		.4byte	.LVL56
 2237 029a 90000000 		.4byte	.LVL57
 2238 029e 0100     		.2byte	0x1
 2239 02a0 50       		.byte	0x50
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 53


 2240 02a1 90000000 		.4byte	.LVL57
 2241 02a5 92000000 		.4byte	.LVL58
 2242 02a9 0400     		.2byte	0x4
 2243 02ab F3       		.byte	0xf3
 2244 02ac 01       		.uleb128 0x1
 2245 02ad 50       		.byte	0x50
 2246 02ae 9F       		.byte	0x9f
 2247 02af 92000000 		.4byte	.LVL58
 2248 02b3 94000000 		.4byte	.LVL59
 2249 02b7 0100     		.2byte	0x1
 2250 02b9 50       		.byte	0x50
 2251 02ba 94000000 		.4byte	.LVL59
 2252 02be 96000000 		.4byte	.LVL60
 2253 02c2 0400     		.2byte	0x4
 2254 02c4 F3       		.byte	0xf3
 2255 02c5 01       		.uleb128 0x1
 2256 02c6 50       		.byte	0x50
 2257 02c7 9F       		.byte	0x9f
 2258 02c8 96000000 		.4byte	.LVL60
 2259 02cc 98000000 		.4byte	.LVL61
 2260 02d0 0100     		.2byte	0x1
 2261 02d2 50       		.byte	0x50
 2262 02d3 98000000 		.4byte	.LVL61
 2263 02d7 A4000000 		.4byte	.LFE5
 2264 02db 0400     		.2byte	0x4
 2265 02dd F3       		.byte	0xf3
 2266 02de 01       		.uleb128 0x1
 2267 02df 50       		.byte	0x50
 2268 02e0 9F       		.byte	0x9f
 2269 02e1 00000000 		.4byte	0
 2270 02e5 00000000 		.4byte	0
 2271              	.LLST13:
 2272 02e9 00000000 		.4byte	.LVL37
 2273 02ed 70000000 		.4byte	.LVL47
 2274 02f1 0100     		.2byte	0x1
 2275 02f3 51       		.byte	0x51
 2276 02f4 70000000 		.4byte	.LVL47
 2277 02f8 8A000000 		.4byte	.LVL54
 2278 02fc 0400     		.2byte	0x4
 2279 02fe F3       		.byte	0xf3
 2280 02ff 01       		.uleb128 0x1
 2281 0300 51       		.byte	0x51
 2282 0301 9F       		.byte	0x9f
 2283 0302 8A000000 		.4byte	.LVL54
 2284 0306 98000000 		.4byte	.LVL61
 2285 030a 0100     		.2byte	0x1
 2286 030c 51       		.byte	0x51
 2287 030d 98000000 		.4byte	.LVL61
 2288 0311 A4000000 		.4byte	.LFE5
 2289 0315 0400     		.2byte	0x4
 2290 0317 F3       		.byte	0xf3
 2291 0318 01       		.uleb128 0x1
 2292 0319 51       		.byte	0x51
 2293 031a 9F       		.byte	0x9f
 2294 031b 00000000 		.4byte	0
 2295 031f 00000000 		.4byte	0
 2296              	.LLST14:
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 54


 2297 0323 00000000 		.4byte	.LVL37
 2298 0327 76000000 		.4byte	.LVL50
 2299 032b 0100     		.2byte	0x1
 2300 032d 52       		.byte	0x52
 2301 032e 76000000 		.4byte	.LVL50
 2302 0332 8A000000 		.4byte	.LVL54
 2303 0336 0400     		.2byte	0x4
 2304 0338 F3       		.byte	0xf3
 2305 0339 01       		.uleb128 0x1
 2306 033a 52       		.byte	0x52
 2307 033b 9F       		.byte	0x9f
 2308 033c 8A000000 		.4byte	.LVL54
 2309 0340 98000000 		.4byte	.LVL61
 2310 0344 0100     		.2byte	0x1
 2311 0346 52       		.byte	0x52
 2312 0347 98000000 		.4byte	.LVL61
 2313 034b A4000000 		.4byte	.LFE5
 2314 034f 0400     		.2byte	0x4
 2315 0351 F3       		.byte	0xf3
 2316 0352 01       		.uleb128 0x1
 2317 0353 52       		.byte	0x52
 2318 0354 9F       		.byte	0x9f
 2319 0355 00000000 		.4byte	0
 2320 0359 00000000 		.4byte	0
 2321              	.LLST15:
 2322 035d 00000000 		.4byte	.LVL37
 2323 0361 74000000 		.4byte	.LVL49
 2324 0365 0100     		.2byte	0x1
 2325 0367 53       		.byte	0x53
 2326 0368 74000000 		.4byte	.LVL49
 2327 036c 8A000000 		.4byte	.LVL54
 2328 0370 0400     		.2byte	0x4
 2329 0372 F3       		.byte	0xf3
 2330 0373 01       		.uleb128 0x1
 2331 0374 53       		.byte	0x53
 2332 0375 9F       		.byte	0x9f
 2333 0376 8A000000 		.4byte	.LVL54
 2334 037a 98000000 		.4byte	.LVL61
 2335 037e 0100     		.2byte	0x1
 2336 0380 53       		.byte	0x53
 2337 0381 98000000 		.4byte	.LVL61
 2338 0385 A4000000 		.4byte	.LFE5
 2339 0389 0400     		.2byte	0x4
 2340 038b F3       		.byte	0xf3
 2341 038c 01       		.uleb128 0x1
 2342 038d 53       		.byte	0x53
 2343 038e 9F       		.byte	0x9f
 2344 038f 00000000 		.4byte	0
 2345 0393 00000000 		.4byte	0
 2346              	.LLST16:
 2347 0397 02000000 		.4byte	.LVL38
 2348 039b 98000000 		.4byte	.LVL61
 2349 039f 0200     		.2byte	0x2
 2350 03a1 37       		.byte	0x37
 2351 03a2 9F       		.byte	0x9f
 2352 03a3 98000000 		.4byte	.LVL61
 2353 03a7 A4000000 		.4byte	.LFE5
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 55


 2354 03ab 0100     		.2byte	0x1
 2355 03ad 50       		.byte	0x50
 2356 03ae 00000000 		.4byte	0
 2357 03b2 00000000 		.4byte	0
 2358              	.LLST17:
 2359 03b6 3A000000 		.4byte	.LVL39
 2360 03ba 3E000000 		.4byte	.LVL40
 2361 03be 0200     		.2byte	0x2
 2362 03c0 30       		.byte	0x30
 2363 03c1 9F       		.byte	0x9f
 2364 03c2 3E000000 		.4byte	.LVL40
 2365 03c6 48000000 		.4byte	.LVL41
 2366 03ca 0100     		.2byte	0x1
 2367 03cc 54       		.byte	0x54
 2368 03cd 4A000000 		.4byte	.LVL42
 2369 03d1 58000000 		.4byte	.LVL44
 2370 03d5 0100     		.2byte	0x1
 2371 03d7 54       		.byte	0x54
 2372 03d8 5A000000 		.4byte	.LVL45
 2373 03dc 72000000 		.4byte	.LVL48
 2374 03e0 0100     		.2byte	0x1
 2375 03e2 54       		.byte	0x54
 2376 03e3 72000000 		.4byte	.LVL48
 2377 03e7 76000000 		.4byte	.LVL50
 2378 03eb 0200     		.2byte	0x2
 2379 03ed 30       		.byte	0x30
 2380 03ee 9F       		.byte	0x9f
 2381 03ef 76000000 		.4byte	.LVL50
 2382 03f3 80000000 		.4byte	.LVL51
 2383 03f7 0100     		.2byte	0x1
 2384 03f9 53       		.byte	0x53
 2385 03fa 82000000 		.4byte	.LVL52
 2386 03fe 8A000000 		.4byte	.LVL54
 2387 0402 0100     		.2byte	0x1
 2388 0404 53       		.byte	0x53
 2389 0405 92000000 		.4byte	.LVL58
 2390 0409 98000000 		.4byte	.LVL61
 2391 040d 0100     		.2byte	0x1
 2392 040f 54       		.byte	0x54
 2393 0410 00000000 		.4byte	0
 2394 0414 00000000 		.4byte	0
 2395              	.LLST18:
 2396 0418 3A000000 		.4byte	.LVL39
 2397 041c 50000000 		.4byte	.LVL43
 2398 0420 0100     		.2byte	0x1
 2399 0422 57       		.byte	0x57
 2400 0423 72000000 		.4byte	.LVL48
 2401 0427 88000000 		.4byte	.LVL53
 2402 042b 0100     		.2byte	0x1
 2403 042d 50       		.byte	0x50
 2404 042e 00000000 		.4byte	0
 2405 0432 00000000 		.4byte	0
 2406              	.LLST19:
 2407 0436 00000000 		.4byte	.LVL62
 2408 043a 2A000000 		.4byte	.LVL64
 2409 043e 0100     		.2byte	0x1
 2410 0440 50       		.byte	0x50
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 56


 2411 0441 2A000000 		.4byte	.LVL64
 2412 0445 2C000000 		.4byte	.LVL65
 2413 0449 0200     		.2byte	0x2
 2414 044b 74       		.byte	0x74
 2415 044c 00       		.sleb128 0
 2416 044d 2C000000 		.4byte	.LVL65
 2417 0451 38000000 		.4byte	.LVL67
 2418 0455 0400     		.2byte	0x4
 2419 0457 F3       		.byte	0xf3
 2420 0458 01       		.uleb128 0x1
 2421 0459 50       		.byte	0x50
 2422 045a 9F       		.byte	0x9f
 2423 045b 38000000 		.4byte	.LVL67
 2424 045f 3A000000 		.4byte	.LVL68
 2425 0463 0100     		.2byte	0x1
 2426 0465 50       		.byte	0x50
 2427 0466 3A000000 		.4byte	.LVL68
 2428 046a 3C000000 		.4byte	.LVL69
 2429 046e 0400     		.2byte	0x4
 2430 0470 F3       		.byte	0xf3
 2431 0471 01       		.uleb128 0x1
 2432 0472 50       		.byte	0x50
 2433 0473 9F       		.byte	0x9f
 2434 0474 3C000000 		.4byte	.LVL69
 2435 0478 3E000000 		.4byte	.LVL70
 2436 047c 0100     		.2byte	0x1
 2437 047e 50       		.byte	0x50
 2438 047f 3E000000 		.4byte	.LVL70
 2439 0483 4C000000 		.4byte	.LFE6
 2440 0487 0400     		.2byte	0x4
 2441 0489 F3       		.byte	0xf3
 2442 048a 01       		.uleb128 0x1
 2443 048b 50       		.byte	0x50
 2444 048c 9F       		.byte	0x9f
 2445 048d 00000000 		.4byte	0
 2446 0491 00000000 		.4byte	0
 2447              	.LLST20:
 2448 0495 00000000 		.4byte	.LVL62
 2449 0499 2E000000 		.4byte	.LVL66
 2450 049d 0100     		.2byte	0x1
 2451 049f 51       		.byte	0x51
 2452 04a0 2E000000 		.4byte	.LVL66
 2453 04a4 38000000 		.4byte	.LVL67
 2454 04a8 0400     		.2byte	0x4
 2455 04aa F3       		.byte	0xf3
 2456 04ab 01       		.uleb128 0x1
 2457 04ac 51       		.byte	0x51
 2458 04ad 9F       		.byte	0x9f
 2459 04ae 38000000 		.4byte	.LVL67
 2460 04b2 3E000000 		.4byte	.LVL70
 2461 04b6 0100     		.2byte	0x1
 2462 04b8 51       		.byte	0x51
 2463 04b9 3E000000 		.4byte	.LVL70
 2464 04bd 4C000000 		.4byte	.LFE6
 2465 04c1 0400     		.2byte	0x4
 2466 04c3 F3       		.byte	0xf3
 2467 04c4 01       		.uleb128 0x1
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 57


 2468 04c5 51       		.byte	0x51
 2469 04c6 9F       		.byte	0x9f
 2470 04c7 00000000 		.4byte	0
 2471 04cb 00000000 		.4byte	0
 2472              	.LLST21:
 2473 04cf 02000000 		.4byte	.LVL63
 2474 04d3 3E000000 		.4byte	.LVL70
 2475 04d7 0200     		.2byte	0x2
 2476 04d9 37       		.byte	0x37
 2477 04da 9F       		.byte	0x9f
 2478 04db 3E000000 		.4byte	.LVL70
 2479 04df 4C000000 		.4byte	.LFE6
 2480 04e3 0100     		.2byte	0x1
 2481 04e5 50       		.byte	0x50
 2482 04e6 00000000 		.4byte	0
 2483 04ea 00000000 		.4byte	0
 2484              	.LLST22:
 2485 04ee 00000000 		.4byte	.LVL71
 2486 04f2 2A000000 		.4byte	.LVL72
 2487 04f6 0100     		.2byte	0x1
 2488 04f8 50       		.byte	0x50
 2489 04f9 2A000000 		.4byte	.LVL72
 2490 04fd 2C000000 		.4byte	.LVL73
 2491 0501 0400     		.2byte	0x4
 2492 0503 F3       		.byte	0xf3
 2493 0504 01       		.uleb128 0x1
 2494 0505 50       		.byte	0x50
 2495 0506 9F       		.byte	0x9f
 2496 0507 2C000000 		.4byte	.LVL73
 2497 050b 2E000000 		.4byte	.LVL74
 2498 050f 0100     		.2byte	0x1
 2499 0511 50       		.byte	0x50
 2500 0512 2E000000 		.4byte	.LVL74
 2501 0516 30000000 		.4byte	.LVL75
 2502 051a 0400     		.2byte	0x4
 2503 051c F3       		.byte	0xf3
 2504 051d 01       		.uleb128 0x1
 2505 051e 50       		.byte	0x50
 2506 051f 9F       		.byte	0x9f
 2507 0520 30000000 		.4byte	.LVL75
 2508 0524 32000000 		.4byte	.LVL76
 2509 0528 0100     		.2byte	0x1
 2510 052a 50       		.byte	0x50
 2511 052b 32000000 		.4byte	.LVL76
 2512 052f 3C000000 		.4byte	.LFE7
 2513 0533 0400     		.2byte	0x4
 2514 0535 F3       		.byte	0xf3
 2515 0536 01       		.uleb128 0x1
 2516 0537 50       		.byte	0x50
 2517 0538 9F       		.byte	0x9f
 2518 0539 00000000 		.4byte	0
 2519 053d 00000000 		.4byte	0
 2520              	.LLST23:
 2521 0541 00000000 		.4byte	.LVL71
 2522 0545 32000000 		.4byte	.LVL76
 2523 0549 0200     		.2byte	0x2
 2524 054b 37       		.byte	0x37
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 58


 2525 054c 9F       		.byte	0x9f
 2526 054d 32000000 		.4byte	.LVL76
 2527 0551 3C000000 		.4byte	.LFE7
 2528 0555 0100     		.2byte	0x1
 2529 0557 50       		.byte	0x50
 2530 0558 00000000 		.4byte	0
 2531 055c 00000000 		.4byte	0
 2532              	.LLST24:
 2533 0560 00000000 		.4byte	.LVL77
 2534 0564 28000000 		.4byte	.LVL78
 2535 0568 0100     		.2byte	0x1
 2536 056a 50       		.byte	0x50
 2537 056b 28000000 		.4byte	.LVL78
 2538 056f 2A000000 		.4byte	.LVL79
 2539 0573 0200     		.2byte	0x2
 2540 0575 73       		.byte	0x73
 2541 0576 00       		.sleb128 0
 2542 0577 2A000000 		.4byte	.LVL79
 2543 057b 2C000000 		.4byte	.LVL80
 2544 057f 0100     		.2byte	0x1
 2545 0581 50       		.byte	0x50
 2546 0582 2C000000 		.4byte	.LVL80
 2547 0586 2E000000 		.4byte	.LVL81
 2548 058a 0400     		.2byte	0x4
 2549 058c F3       		.byte	0xf3
 2550 058d 01       		.uleb128 0x1
 2551 058e 50       		.byte	0x50
 2552 058f 9F       		.byte	0x9f
 2553 0590 2E000000 		.4byte	.LVL81
 2554 0594 30000000 		.4byte	.LVL82
 2555 0598 0100     		.2byte	0x1
 2556 059a 50       		.byte	0x50
 2557 059b 30000000 		.4byte	.LVL82
 2558 059f 3C000000 		.4byte	.LFE8
 2559 05a3 0400     		.2byte	0x4
 2560 05a5 F3       		.byte	0xf3
 2561 05a6 01       		.uleb128 0x1
 2562 05a7 50       		.byte	0x50
 2563 05a8 9F       		.byte	0x9f
 2564 05a9 00000000 		.4byte	0
 2565 05ad 00000000 		.4byte	0
 2566              	.LLST25:
 2567 05b1 00000000 		.4byte	.LVL77
 2568 05b5 30000000 		.4byte	.LVL82
 2569 05b9 0200     		.2byte	0x2
 2570 05bb 37       		.byte	0x37
 2571 05bc 9F       		.byte	0x9f
 2572 05bd 30000000 		.4byte	.LVL82
 2573 05c1 3C000000 		.4byte	.LFE8
 2574 05c5 0100     		.2byte	0x1
 2575 05c7 50       		.byte	0x50
 2576 05c8 00000000 		.4byte	0
 2577 05cc 00000000 		.4byte	0
 2578              	.LLST26:
 2579 05d0 02000000 		.4byte	.LVL83
 2580 05d4 12000000 		.4byte	.LVL85
 2581 05d8 0200     		.2byte	0x2
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 59


 2582 05da 34       		.byte	0x34
 2583 05db 9F       		.byte	0x9f
 2584 05dc 12000000 		.4byte	.LVL85
 2585 05e0 36000000 		.4byte	.LVL86
 2586 05e4 0200     		.2byte	0x2
 2587 05e6 30       		.byte	0x30
 2588 05e7 9F       		.byte	0x9f
 2589 05e8 36000000 		.4byte	.LVL86
 2590 05ec 3A000000 		.4byte	.LVL87
 2591 05f0 0200     		.2byte	0x2
 2592 05f2 34       		.byte	0x34
 2593 05f3 9F       		.byte	0x9f
 2594 05f4 3A000000 		.4byte	.LVL87
 2595 05f8 3C000000 		.4byte	.LVL88
 2596 05fc 0200     		.2byte	0x2
 2597 05fe 30       		.byte	0x30
 2598 05ff 9F       		.byte	0x9f
 2599 0600 3C000000 		.4byte	.LVL88
 2600 0604 44000000 		.4byte	.LVL90
 2601 0608 0100     		.2byte	0x1
 2602 060a 54       		.byte	0x54
 2603 060b 44000000 		.4byte	.LVL90
 2604 060f 4C000000 		.4byte	.LFE9
 2605 0613 0100     		.2byte	0x1
 2606 0615 50       		.byte	0x50
 2607 0616 00000000 		.4byte	0
 2608 061a 00000000 		.4byte	0
 2609              	.LLST27:
 2610 061e 06000000 		.4byte	.LVL84
 2611 0622 3F000000 		.4byte	.LVL89-1
 2612 0626 0100     		.2byte	0x1
 2613 0628 50       		.byte	0x50
 2614 0629 00000000 		.4byte	0
 2615 062d 00000000 		.4byte	0
 2616              	.LLST28:
 2617 0631 06000000 		.4byte	.LVL91
 2618 0635 2B000000 		.4byte	.LVL92-1
 2619 0639 0100     		.2byte	0x1
 2620 063b 50       		.byte	0x50
 2621 063c 00000000 		.4byte	0
 2622 0640 00000000 		.4byte	0
 2623              	.LLST29:
 2624 0644 00000000 		.4byte	.LVL93
 2625 0648 1E000000 		.4byte	.LVL94
 2626 064c 0200     		.2byte	0x2
 2627 064e 37       		.byte	0x37
 2628 064f 9F       		.byte	0x9f
 2629 0650 1E000000 		.4byte	.LVL94
 2630 0654 28000000 		.4byte	.LFE11
 2631 0658 0100     		.2byte	0x1
 2632 065a 50       		.byte	0x50
 2633 065b 00000000 		.4byte	0
 2634 065f 00000000 		.4byte	0
 2635              		.section	.debug_aranges,"",%progbits
 2636 0000 74000000 		.4byte	0x74
 2637 0004 0200     		.2byte	0x2
 2638 0006 00000000 		.4byte	.Ldebug_info0
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 60


 2639 000a 04       		.byte	0x4
 2640 000b 00       		.byte	0
 2641 000c 0000     		.2byte	0
 2642 000e 0000     		.2byte	0
 2643 0010 00000000 		.4byte	.LFB0
 2644 0014 24000000 		.4byte	.LFE0-.LFB0
 2645 0018 00000000 		.4byte	.LFB1
 2646 001c 24000000 		.4byte	.LFE1-.LFB1
 2647 0020 00000000 		.4byte	.LFB2
 2648 0024 34000000 		.4byte	.LFE2-.LFB2
 2649 0028 00000000 		.4byte	.LFB3
 2650 002c 78000000 		.4byte	.LFE3-.LFB3
 2651 0030 00000000 		.4byte	.LFB4
 2652 0034 54000000 		.4byte	.LFE4-.LFB4
 2653 0038 00000000 		.4byte	.LFB5
 2654 003c A4000000 		.4byte	.LFE5-.LFB5
 2655 0040 00000000 		.4byte	.LFB6
 2656 0044 4C000000 		.4byte	.LFE6-.LFB6
 2657 0048 00000000 		.4byte	.LFB7
 2658 004c 3C000000 		.4byte	.LFE7-.LFB7
 2659 0050 00000000 		.4byte	.LFB8
 2660 0054 3C000000 		.4byte	.LFE8-.LFB8
 2661 0058 00000000 		.4byte	.LFB9
 2662 005c 4C000000 		.4byte	.LFE9-.LFB9
 2663 0060 00000000 		.4byte	.LFB10
 2664 0064 38000000 		.4byte	.LFE10-.LFB10
 2665 0068 00000000 		.4byte	.LFB11
 2666 006c 28000000 		.4byte	.LFE11-.LFB11
 2667 0070 00000000 		.4byte	0
 2668 0074 00000000 		.4byte	0
 2669              		.section	.debug_ranges,"",%progbits
 2670              	.Ldebug_ranges0:
 2671 0000 00000000 		.4byte	.LFB0
 2672 0004 24000000 		.4byte	.LFE0
 2673 0008 00000000 		.4byte	.LFB1
 2674 000c 24000000 		.4byte	.LFE1
 2675 0010 00000000 		.4byte	.LFB2
 2676 0014 34000000 		.4byte	.LFE2
 2677 0018 00000000 		.4byte	.LFB3
 2678 001c 78000000 		.4byte	.LFE3
 2679 0020 00000000 		.4byte	.LFB4
 2680 0024 54000000 		.4byte	.LFE4
 2681 0028 00000000 		.4byte	.LFB5
 2682 002c A4000000 		.4byte	.LFE5
 2683 0030 00000000 		.4byte	.LFB6
 2684 0034 4C000000 		.4byte	.LFE6
 2685 0038 00000000 		.4byte	.LFB7
 2686 003c 3C000000 		.4byte	.LFE7
 2687 0040 00000000 		.4byte	.LFB8
 2688 0044 3C000000 		.4byte	.LFE8
 2689 0048 00000000 		.4byte	.LFB9
 2690 004c 4C000000 		.4byte	.LFE9
 2691 0050 00000000 		.4byte	.LFB10
 2692 0054 38000000 		.4byte	.LFE10
 2693 0058 00000000 		.4byte	.LFB11
 2694 005c 28000000 		.4byte	.LFE11
 2695 0060 00000000 		.4byte	0
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 61


 2696 0064 00000000 		.4byte	0
 2697              		.section	.debug_line,"",%progbits
 2698              	.Ldebug_line0:
 2699 0000 5A020000 		.section	.debug_str,"MS",%progbits,1
 2699      02004D00 
 2699      00000201 
 2699      FB0E0D00 
 2699      01010101 
 2700              	.LASF25:
 2701 0000 43795370 		.ascii	"CySpcLoadMultiByte\000"
 2701      634C6F61 
 2701      644D756C 
 2701      74694279 
 2701      746500
 2702              	.LASF15:
 2703 0013 63797374 		.ascii	"cystatus\000"
 2703      61747573 
 2703      00
 2704              	.LASF17:
 2705 001c 72656733 		.ascii	"reg32\000"
 2705      3200
 2706              	.LASF19:
 2707 0022 43795370 		.ascii	"CySpcStart\000"
 2707      63537461 
 2707      727400
 2708              	.LASF32:
 2709 002d 43795370 		.ascii	"CySpcWriteRow\000"
 2709      63577269 
 2709      7465526F 
 2709      7700
 2710              	.LASF20:
 2711 003b 43795370 		.ascii	"CySpcStop\000"
 2711      6353746F 
 2711      7000
 2712              	.LASF3:
 2713 0045 73686F72 		.ascii	"short unsigned int\000"
 2713      7420756E 
 2713      7369676E 
 2713      65642069 
 2713      6E7400
 2714              	.LASF24:
 2715 0058 43795370 		.ascii	"CySpcReadData\000"
 2715      63526561 
 2715      64446174 
 2715      6100
 2716              	.LASF28:
 2717 0066 73746174 		.ascii	"status\000"
 2717      757300
 2718              	.LASF12:
 2719 006d 666C6F61 		.ascii	"float\000"
 2719      7400
 2720              	.LASF7:
 2721 0073 6C6F6E67 		.ascii	"long long unsigned int\000"
 2721      206C6F6E 
 2721      6720756E 
 2721      7369676E 
 2721      65642069 
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 62


 2722              	.LASF23:
 2723 008a 73697A65 		.ascii	"size\000"
 2723      00
 2724              	.LASF16:
 2725 008f 72656738 		.ascii	"reg8\000"
 2725      00
 2726              	.LASF21:
 2727 0094 696E7465 		.ascii	"interruptState\000"
 2727      72727570 
 2727      74537461 
 2727      746500
 2728              	.LASF5:
 2729 00a3 6C6F6E67 		.ascii	"long unsigned int\000"
 2729      20756E73 
 2729      69676E65 
 2729      6420696E 
 2729      7400
 2730              	.LASF9:
 2731 00b5 75696E74 		.ascii	"uint8\000"
 2731      3800
 2732              	.LASF46:
 2733 00bb 5370634C 		.ascii	"SpcLockState\000"
 2733      6F636B53 
 2733      74617465 
 2733      00
 2734              	.LASF33:
 2735 00c8 74656D70 		.ascii	"tempPolarity\000"
 2735      506F6C61 
 2735      72697479 
 2735      00
 2736              	.LASF26:
 2737 00d5 61727261 		.ascii	"array\000"
 2737      7900
 2738              	.LASF1:
 2739 00db 756E7369 		.ascii	"unsigned char\000"
 2739      676E6564 
 2739      20636861 
 2739      7200
 2740              	.LASF13:
 2741 00e9 646F7562 		.ascii	"double\000"
 2741      6C6500
 2742              	.LASF37:
 2743 00f0 43795370 		.ascii	"CySpcGetTemp\000"
 2743      63476574 
 2743      54656D70 
 2743      00
 2744              	.LASF10:
 2745 00fd 75696E74 		.ascii	"uint16\000"
 2745      313600
 2746              	.LASF39:
 2747 0104 43795370 		.ascii	"CySpcLock\000"
 2747      634C6F63 
 2747      6B00
 2748              	.LASF11:
 2749 010e 75696E74 		.ascii	"uint32\000"
 2749      333200
 2750              	.LASF43:
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 63


 2751 0115 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2751      4320342E 
 2751      392E3320 
 2751      32303135 
 2751      30333033 
 2752 0148 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 2752      20726576 
 2752      6973696F 
 2752      6E203232 
 2752      31323230 
 2753 017b 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2753      66756E63 
 2753      74696F6E 
 2753      2D736563 
 2753      74696F6E 
 2754              	.LASF47:
 2755 01a3 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2755      74657243 
 2755      72697469 
 2755      63616C53 
 2755      65637469 
 2756              	.LASF44:
 2757 01ba 47656E65 		.ascii	"Generated_Source\\PSoC5\\CySpc.c\000"
 2757      72617465 
 2757      645F536F 
 2757      75726365 
 2757      5C50536F 
 2758              	.LASF8:
 2759 01d9 756E7369 		.ascii	"unsigned int\000"
 2759      676E6564 
 2759      20696E74 
 2759      00
 2760              	.LASF27:
 2761 01e6 61646472 		.ascii	"address\000"
 2761      65737300 
 2762              	.LASF48:
 2763 01ee 43794578 		.ascii	"CyExitCriticalSection\000"
 2763      69744372 
 2763      69746963 
 2763      616C5365 
 2763      6374696F 
 2764              	.LASF34:
 2765 0204 74656D70 		.ascii	"tempMagnitude\000"
 2765      4D61676E 
 2765      69747564 
 2765      6500
 2766              	.LASF29:
 2767 0212 43795370 		.ascii	"CySpcLoadRow\000"
 2767      634C6F61 
 2767      64526F77 
 2767      00
 2768              	.LASF18:
 2769 021f 73697A65 		.ascii	"sizetype\000"
 2769      74797065 
 2769      00
 2770              	.LASF40:
 2771 0228 43795370 		.ascii	"CySpcUnlock\000"
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 64


 2771      63556E6C 
 2771      6F636B00 
 2772              	.LASF35:
 2773 0234 43795370 		.ascii	"CySpcEraseSector\000"
 2773      63457261 
 2773      73655365 
 2773      63746F72 
 2773      00
 2774              	.LASF6:
 2775 0245 6C6F6E67 		.ascii	"long long int\000"
 2775      206C6F6E 
 2775      6720696E 
 2775      7400
 2776              	.LASF49:
 2777 0253 43794465 		.ascii	"CyDelayUs\000"
 2777      6C617955 
 2777      7300
 2778              	.LASF14:
 2779 025d 63686172 		.ascii	"char\000"
 2779      00
 2780              	.LASF41:
 2781 0262 43795370 		.ascii	"CySpcGetAlgorithm\000"
 2781      63476574 
 2781      416C676F 
 2781      72697468 
 2781      6D00
 2782              	.LASF31:
 2783 0274 6F666673 		.ascii	"offset\000"
 2783      657400
 2784              	.LASF45:
 2785 027b 433A5C55 		.ascii	"C:\\Users\\miker\\Documents\\My Libraries\\Code_Rep"
 2785      73657273 
 2785      5C6D696B 
 2785      65725C44 
 2785      6F63756D 
 2786 02a9 6F5C5053 		.ascii	"o\\PSoC_Grbl\\PSoC_Grbl.cydsn\000"
 2786      6F435F47 
 2786      72626C5C 
 2786      50536F43 
 2786      5F477262 
 2787              	.LASF2:
 2788 02c5 73686F72 		.ascii	"short int\000"
 2788      7420696E 
 2788      7400
 2789              	.LASF22:
 2790 02cf 62756666 		.ascii	"buffer\000"
 2790      657200
 2791              	.LASF36:
 2792 02d6 73656374 		.ascii	"sectorNumber\000"
 2792      6F724E75 
 2792      6D626572 
 2792      00
 2793              	.LASF4:
 2794 02e3 6C6F6E67 		.ascii	"long int\000"
 2794      20696E74 
 2794      00
 2795              	.LASF42:
ARM GAS  C:\Users\miker\AppData\Local\Temp\ccgqhLvV.s 			page 65


 2796 02ec 73706357 		.ascii	"spcWaitPipeBypass\000"
 2796      61697450 
 2796      69706542 
 2796      79706173 
 2796      7300
 2797              	.LASF0:
 2798 02fe 7369676E 		.ascii	"signed char\000"
 2798      65642063 
 2798      68617200 
 2799              	.LASF30:
 2800 030a 43795370 		.ascii	"CySpcLoadRowFull\000"
 2800      634C6F61 
 2800      64526F77 
 2800      46756C6C 
 2800      00
 2801              	.LASF38:
 2802 031b 6E756D53 		.ascii	"numSamples\000"
 2802      616D706C 
 2802      657300
 2803              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
