ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"system.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.system_init,"ax",%progbits
  19              		.align	2
  20              		.global	system_init
  21              		.thumb
  22              		.thumb_func
  23              		.type	system_init, %function
  24              	system_init:
  25              	.LFB63:
  26              		.file 1 "system.c"
   1:system.c      **** /*
   2:system.c      ****   system.c - Handles system level commands and real-time processes
   3:system.c      ****   Part of Grbl
   4:system.c      **** 
   5:system.c      ****   Copyright (c) 2014-2015 Sungeun K. Jeon  
   6:system.c      **** 
   7:system.c      ****   Grbl is free software: you can redistribute it and/or modify
   8:system.c      ****   it under the terms of the GNU General Public License as published by
   9:system.c      ****   the Free Software Foundation, either version 3 of the License, or
  10:system.c      ****   (at your option) any later version.
  11:system.c      **** 
  12:system.c      ****   Grbl is distributed in the hope that it will be useful,
  13:system.c      ****   but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:system.c      ****   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:system.c      ****   GNU General Public License for more details.
  16:system.c      **** 
  17:system.c      ****   You should have received a copy of the GNU General Public License
  18:system.c      ****   along with Grbl.  If not, see <http://www.gnu.org/licenses/>.
  19:system.c      **** */
  20:system.c      **** 
  21:system.c      **** #include "grbl.h"
  22:system.c      **** 
  23:system.c      **** void system_init()
  24:system.c      **** {
  27              		.loc 1 24 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 08B5     		push	{r3, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 2


  34              		.cfi_offset 14, -4
  25:system.c      ****   // setup of control pins is done in hardware
  26:system.c      ****   
  27:system.c      ****   isr_Control_StartEx(control_isr_handler);
  35              		.loc 1 27 0
  36 0002 0348     		ldr	r0, .L3
  37 0004 FFF7FEFF 		bl	isr_Control_StartEx
  38              	.LVL0:
  28:system.c      ****   Status_Control_InterruptEnable();
  39              		.loc 1 28 0
  40 0008 FFF7FEFF 		bl	Status_Control_InterruptEnable
  41              	.LVL1:
  42 000c 08BD     		pop	{r3, pc}
  43              	.L4:
  44 000e 00BF     		.align	2
  45              	.L3:
  46 0010 00000000 		.word	control_isr_handler
  47              		.cfi_endproc
  48              	.LFE63:
  49              		.size	system_init, .-system_init
  50              		.section	.text.system_control_get_state,"ax",%progbits
  51              		.align	2
  52              		.global	system_control_get_state
  53              		.thumb
  54              		.thumb_func
  55              		.type	system_control_get_state, %function
  56              	system_control_get_state:
  57              	.LFB64:
  29:system.c      ****   
  30:system.c      **** }
  31:system.c      **** 
  32:system.c      **** // Returns control pin state as a uint8 bitfield. Each bit indicates the input pin state, where 
  33:system.c      **** // triggered is 1 and not triggered is 0. Invert mask is applied. Bitfield organization is
  34:system.c      **** // defined by the CONTROL_PIN_INDEX in the header file.
  35:system.c      **** uint8_t system_control_get_state()
  36:system.c      **** {
  58              		.loc 1 36 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62 0000 08B5     		push	{r3, lr}
  63              		.cfi_def_cfa_offset 8
  64              		.cfi_offset 3, -8
  65              		.cfi_offset 14, -4
  37:system.c      ****    /*
  38:system.c      ****     This is simplified over grbl because the pins are always in the same order
  39:system.c      ****     in the status register regardless of the placement.  Inverted applications
  40:system.c      ****     will be handle using a logic NOT
  41:system.c      ****    */
  42:system.c      ****    return(Status_Control_Read());  
  66              		.loc 1 42 0
  67 0002 FFF7FEFF 		bl	Status_Control_Read
  68              	.LVL2:
  43:system.c      ****   
  44:system.c      **** }
  69              		.loc 1 44 0
  70 0006 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 3


  71              		.cfi_endproc
  72              	.LFE64:
  73              		.size	system_control_get_state, .-system_control_get_state
  74              		.section	.text.control_isr_handler,"ax",%progbits
  75              		.align	2
  76              		.global	control_isr_handler
  77              		.thumb
  78              		.thumb_func
  79              		.type	control_isr_handler, %function
  80              	control_isr_handler:
  81              	.LFB65:
  45:system.c      **** 
  46:system.c      **** // Pin change interrupt for pin-out commands, i.e. cycle start, feed hold, and reset. Sets
  47:system.c      **** // only the realtime command execute variable to have the main program execute these when 
  48:system.c      **** // its ready. This works exactly like the character-based realtime commands when picked off
  49:system.c      **** // directly from the incoming serial data stream.
  50:system.c      **** CY_ISR (control_isr_handler) //ISR(CONTROL_INT_vect) 
  51:system.c      **** {
  82              		.loc 1 51 0
  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 0
  85              		@ frame_needed = 0, uses_anonymous_args = 0
  86 0000 08B5     		push	{r3, lr}
  87              		.cfi_def_cfa_offset 8
  88              		.cfi_offset 3, -8
  89              		.cfi_offset 14, -4
  52:system.c      ****   uint8_t pin = system_control_get_state();
  90              		.loc 1 52 0
  91 0002 FFF7FEFF 		bl	system_control_get_state
  92              	.LVL3:
  53:system.c      ****   if (pin) {
  93              		.loc 1 53 0
  94 0006 B0B1     		cbz	r0, .L8
  54:system.c      ****     if (bit_istrue(pin,CONTROL_PIN_INDEX_RESET)) {
  95              		.loc 1 54 0
  96 0008 10F0010F 		tst	r0, #1
  97 000c 02D0     		beq	.L9
  55:system.c      ****       mc_reset();
  98              		.loc 1 55 0
  99 000e FFF7FEFF 		bl	mc_reset
 100              	.LVL4:
 101 0012 10E0     		b	.L8
 102              	.LVL5:
 103              	.L9:
  56:system.c      ****     } else if (bit_istrue(pin,CONTROL_PIN_INDEX_CYCLE_START)) {
 104              		.loc 1 56 0
 105 0014 10F0040F 		tst	r0, #4
 106 0018 05D0     		beq	.L10
  57:system.c      ****       bit_true(sys_rt_exec_state, EXEC_CYCLE_START);
 107              		.loc 1 57 0
 108 001a 084A     		ldr	r2, .L12
 109 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 110 001e 43F00203 		orr	r3, r3, #2
 111 0022 1370     		strb	r3, [r2]
 112 0024 07E0     		b	.L8
 113              	.L10:
  58:system.c      ****     #ifndef ENABLE_SAFETY_DOOR_INPUT_PIN
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 4


  59:system.c      ****       } else if (bit_istrue(pin,CONTROL_PIN_INDEX_FEED_HOLD)) {
 114              		.loc 1 59 0
 115 0026 10F0020F 		tst	r0, #2
 116 002a 04D0     		beq	.L8
  60:system.c      ****         bit_true(sys_rt_exec_state, EXEC_FEED_HOLD);
 117              		.loc 1 60 0
 118 002c 034A     		ldr	r2, .L12
 119 002e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 120 0030 43F00803 		orr	r3, r3, #8
 121 0034 1370     		strb	r3, [r2]
 122              	.LVL6:
 123              	.L8:
  61:system.c      ****     #else
  62:system.c      ****       } else if (bit_istrue(pin,CONTROL_PIN_INDEX_SAFETY_DOOR)) {
  63:system.c      ****         bit_true(sys_rt_exec_state, EXEC_SAFETY_DOOR);
  64:system.c      ****     #endif
  65:system.c      ****     }
  66:system.c      ****   }
  67:system.c      ****     
  68:system.c      ****   isr_Control_ClearPending();
 124              		.loc 1 68 0
 125 0036 FFF7FEFF 		bl	isr_Control_ClearPending
 126              	.LVL7:
 127 003a 08BD     		pop	{r3, pc}
 128              	.L13:
 129              		.align	2
 130              	.L12:
 131 003c 00000000 		.word	sys_rt_exec_state
 132              		.cfi_endproc
 133              	.LFE65:
 134              		.size	control_isr_handler, .-control_isr_handler
 135              		.section	.text.system_check_safety_door_ajar,"ax",%progbits
 136              		.align	2
 137              		.global	system_check_safety_door_ajar
 138              		.thumb
 139              		.thumb_func
 140              		.type	system_check_safety_door_ajar, %function
 141              	system_check_safety_door_ajar:
 142              	.LFB66:
  69:system.c      ****   
  70:system.c      **** }
  71:system.c      **** 
  72:system.c      **** // Returns if safety door is ajar(T) or closed(F), based on pin state.
  73:system.c      **** uint8_t system_check_safety_door_ajar()
  74:system.c      **** {
 143              		.loc 1 74 0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              		@ link register save eliminated.
  75:system.c      ****   #ifdef ENABLE_SAFETY_DOOR_INPUT_PIN
  76:system.c      ****     return(system_control_get_state() & CONTROL_PIN_INDEX_SAFETY_DOOR);
  77:system.c      ****   #else
  78:system.c      ****     return(false); // Input pin not enabled, so just return that it's closed.
  79:system.c      ****   #endif
  80:system.c      **** }
 148              		.loc 1 80 0
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 5


 149 0000 0020     		movs	r0, #0
 150 0002 7047     		bx	lr
 151              		.cfi_endproc
 152              	.LFE66:
 153              		.size	system_check_safety_door_ajar, .-system_check_safety_door_ajar
 154              		.section	.text.system_execute_startup,"ax",%progbits
 155              		.align	2
 156              		.global	system_execute_startup
 157              		.thumb
 158              		.thumb_func
 159              		.type	system_execute_startup, %function
 160              	system_execute_startup:
 161              	.LFB67:
  81:system.c      **** 
  82:system.c      **** 
  83:system.c      **** // Executes user startup script, if stored.
  84:system.c      **** void system_execute_startup(char *line)
  85:system.c      **** {
 162              		.loc 1 85 0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166              	.LVL8:
 167 0000 38B5     		push	{r3, r4, r5, lr}
 168              		.cfi_def_cfa_offset 16
 169              		.cfi_offset 3, -16
 170              		.cfi_offset 4, -12
 171              		.cfi_offset 5, -8
 172              		.cfi_offset 14, -4
 173 0002 0546     		mov	r5, r0
 174              	.LVL9:
  86:system.c      ****   uint8_t n;
  87:system.c      ****   for (n=0; n < N_STARTUP_LINE; n++) {
 175              		.loc 1 87 0
 176 0004 0024     		movs	r4, #0
 177 0006 16E0     		b	.L16
 178              	.LVL10:
 179              	.L19:
  88:system.c      ****     if (!(settings_read_startup_line(n, line))) {
 180              		.loc 1 88 0
 181 0008 2046     		mov	r0, r4
 182 000a 2946     		mov	r1, r5
 183 000c FFF7FEFF 		bl	settings_read_startup_line
 184              	.LVL11:
 185 0010 30B9     		cbnz	r0, .L17
  89:system.c      ****       line[0] = 0;
 186              		.loc 1 89 0
 187 0012 0023     		movs	r3, #0
 188 0014 2B70     		strb	r3, [r5]
  90:system.c      ****       report_execute_startup_message(line,STATUS_SETTING_READ_FAIL);
 189              		.loc 1 90 0
 190 0016 2846     		mov	r0, r5
 191 0018 0721     		movs	r1, #7
 192 001a FFF7FEFF 		bl	report_execute_startup_message
 193              	.LVL12:
 194 001e 08E0     		b	.L18
 195              	.L17:
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 6


  91:system.c      ****     } else {
  92:system.c      ****       if (line[0] != 0) {
 196              		.loc 1 92 0
 197 0020 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 198 0022 33B1     		cbz	r3, .L18
 199              	.LBB2:
  93:system.c      ****         uint8_t status_code = gc_execute_line(line);
 200              		.loc 1 93 0
 201 0024 2846     		mov	r0, r5
 202 0026 FFF7FEFF 		bl	gc_execute_line
 203              	.LVL13:
 204 002a 0146     		mov	r1, r0
 205              	.LVL14:
  94:system.c      ****         report_execute_startup_message(line,status_code);
 206              		.loc 1 94 0
 207 002c 2846     		mov	r0, r5
 208 002e FFF7FEFF 		bl	report_execute_startup_message
 209              	.LVL15:
 210              	.L18:
 211              	.LBE2:
  87:system.c      ****     if (!(settings_read_startup_line(n, line))) {
 212              		.loc 1 87 0 discriminator 2
 213 0032 0134     		adds	r4, r4, #1
 214              	.LVL16:
 215 0034 E4B2     		uxtb	r4, r4
 216              	.LVL17:
 217              	.L16:
  87:system.c      ****     if (!(settings_read_startup_line(n, line))) {
 218              		.loc 1 87 0 is_stmt 0 discriminator 1
 219 0036 012C     		cmp	r4, #1
 220 0038 E6D9     		bls	.L19
  95:system.c      ****       }
  96:system.c      ****     }
  97:system.c      ****   }
  98:system.c      **** }
 221              		.loc 1 98 0 is_stmt 1
 222 003a 38BD     		pop	{r3, r4, r5, pc}
 223              		.cfi_endproc
 224              	.LFE67:
 225              		.size	system_execute_startup, .-system_execute_startup
 226              		.section	.text.system_flag_wco_change,"ax",%progbits
 227              		.align	2
 228              		.global	system_flag_wco_change
 229              		.thumb
 230              		.thumb_func
 231              		.type	system_flag_wco_change, %function
 232              	system_flag_wco_change:
 233              	.LFB69:
  99:system.c      **** 
 100:system.c      **** // Directs and executes one line of formatted input from protocol_process. While mostly
 101:system.c      **** // incoming streaming g-code blocks, this also executes Grbl internal commands, such as
 102:system.c      **** // settings, initiating the homing cycle, and toggling switch states. This differs from
 103:system.c      **** // the realtime command module by being susceptible to when Grbl is ready to execute the
 104:system.c      **** // next line during a cycle, so for switches like block delete, the switch only effects
 105:system.c      **** // the lines that are processed afterward, not necessarily real-time during a cycle,
 106:system.c      **** // since there are motions already stored in the buffer. However, this 'lag' should not
 107:system.c      **** // be an issue, since these commands are not typically used during a cycle.
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 7


 108:system.c      **** uint8_t system_execute_line(char *line)
 109:system.c      **** {
 110:system.c      ****   uint8_t char_counter = 1;
 111:system.c      ****   uint8_t helper_var = 0; // Helper variable
 112:system.c      ****   float parameter, value;
 113:system.c      ****   switch( line[char_counter] ) {
 114:system.c      ****     case 0 : report_grbl_help(); break;
 115:system.c      ****     case 'J' : // Jogging
 116:system.c      ****       // Execute only if in IDLE or JOG states.
 117:system.c      ****       if (sys.state != STATE_IDLE && sys.state != STATE_JOG) { return(STATUS_IDLE_ERROR); }
 118:system.c      ****       if(line[2] != '=') { return(STATUS_INVALID_STATEMENT); }
 119:system.c      ****       return(gc_execute_line(line)); // NOTE: $J= is ignored inside g-code parser and used to detec
 120:system.c      ****       break;
 121:system.c      ****     case '$': case 'G': case 'C': case 'X':
 122:system.c      ****       if ( line[2] != 0 ) { return(STATUS_INVALID_STATEMENT); }
 123:system.c      ****       switch( line[1] ) {
 124:system.c      ****         case '$' : // Prints Grbl settings
 125:system.c      ****           if ( sys.state & (STATE_CYCLE | STATE_HOLD) ) { return(STATUS_IDLE_ERROR); } // Block dur
 126:system.c      ****           else { report_grbl_settings(); }
 127:system.c      ****           break;
 128:system.c      ****         case 'G' : // Prints gcode parser state
 129:system.c      ****           // TODO: Move this to realtime commands for GUIs to request this data during suspend-stat
 130:system.c      ****           report_gcode_modes();
 131:system.c      ****           break;
 132:system.c      ****         case 'C' : // Set check g-code mode [IDLE/CHECK]
 133:system.c      ****           // Perform reset when toggling off. Check g-code mode should only work if Grbl
 134:system.c      ****           // is idle and ready, regardless of alarm locks. This is mainly to keep things
 135:system.c      ****           // simple and consistent.
 136:system.c      ****           if ( sys.state == STATE_CHECK_MODE ) {
 137:system.c      ****             mc_reset();
 138:system.c      ****             report_feedback_message(MESSAGE_DISABLED);
 139:system.c      ****           } else {
 140:system.c      ****             if (sys.state) { return(STATUS_IDLE_ERROR); } // Requires no alarm mode.
 141:system.c      ****             sys.state = STATE_CHECK_MODE;
 142:system.c      ****             report_feedback_message(MESSAGE_ENABLED);
 143:system.c      ****           }
 144:system.c      ****           break;
 145:system.c      ****         case 'X' : // Disable alarm lock [ALARM]
 146:system.c      ****           if (sys.state == STATE_ALARM) {
 147:system.c      ****             // Block if safety door is ajar.
 148:system.c      ****             if (system_check_safety_door_ajar()) { return(STATUS_CHECK_DOOR); }
 149:system.c      ****             report_feedback_message(MESSAGE_ALARM_UNLOCK);
 150:system.c      ****             sys.state = STATE_IDLE;
 151:system.c      ****             // Don't run startup script. Prevents stored moves in startup from causing accidents.
 152:system.c      ****           } // Otherwise, no effect.
 153:system.c      ****           break;
 154:system.c      ****       }
 155:system.c      ****       break;
 156:system.c      ****     default :
 157:system.c      ****       // Block any system command that requires the state as IDLE/ALARM. (i.e. EEPROM, homing)
 158:system.c      ****       if ( !(sys.state == STATE_IDLE || sys.state == STATE_ALARM) ) { return(STATUS_IDLE_ERROR); }
 159:system.c      ****       switch( line[1] ) {
 160:system.c      ****         case '#' : // Print Grbl NGC parameters
 161:system.c      ****           if ( line[2] != 0 ) { return(STATUS_INVALID_STATEMENT); }
 162:system.c      ****           else { report_ngc_parameters(); }
 163:system.c      ****           break;
 164:system.c      ****         case 'H' : // Perform homing cycle [IDLE/ALARM]
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 8


 165:system.c      ****           if (bit_isfalse(settings.flags,BITFLAG_HOMING_ENABLE)) {return(STATUS_SETTING_DISABLED); 
 166:system.c      ****           if (system_check_safety_door_ajar()) { return(STATUS_CHECK_DOOR); } // Block if safety do
 167:system.c      ****           sys.state = STATE_HOMING; // Set system state variable
 168:system.c      ****           if (line[2] == 0) {
 169:system.c      ****             mc_homing_cycle(HOMING_CYCLE_ALL);
 170:system.c      ****           #ifdef HOMING_SINGLE_AXIS_COMMANDS
 171:system.c      ****             } else if (line[3] == 0) {
 172:system.c      ****               switch (line[2]) {
 173:system.c      ****                 case 'X': mc_homing_cycle(HOMING_CYCLE_X); break;
 174:system.c      ****                 case 'Y': mc_homing_cycle(HOMING_CYCLE_Y); break;
 175:system.c      ****                 case 'Z': mc_homing_cycle(HOMING_CYCLE_Z); break;
 176:system.c      ****                 default: return(STATUS_INVALID_STATEMENT);
 177:system.c      ****               }
 178:system.c      ****           #endif
 179:system.c      ****           } else { return(STATUS_INVALID_STATEMENT); }
 180:system.c      ****           if (!sys.abort) {  // Execute startup scripts after successful homing.
 181:system.c      ****             sys.state = STATE_IDLE; // Set to IDLE when complete.
 182:system.c      ****             st_go_idle(); // Set steppers to the settings idle state before returning.
 183:system.c      ****             if (line[2] == 0) { system_execute_startup(line); }
 184:system.c      ****           }
 185:system.c      ****           break;
 186:system.c      ****         case 'S' : // Puts Grbl to sleep [IDLE/ALARM]
 187:system.c      ****           if ((line[2] != 'L') || (line[3] != 'P') || (line[4] != 0)) { return(STATUS_INVALID_STATE
 188:system.c      ****           system_set_exec_state_flag(EXEC_SLEEP); // Set to execute sleep mode immediately
 189:system.c      ****           break;
 190:system.c      ****         case 'I' : // Print or store build info. [IDLE/ALARM]
 191:system.c      ****           if ( line[++char_counter] == 0 ) {
 192:system.c      ****             settings_read_build_info(line);
 193:system.c      ****             report_build_info(line);
 194:system.c      ****           #ifdef ENABLE_BUILD_INFO_WRITE_COMMAND
 195:system.c      ****             } else { // Store startup line [IDLE/ALARM]
 196:system.c      ****               if(line[char_counter++] != '=') { return(STATUS_INVALID_STATEMENT); }
 197:system.c      ****               helper_var = char_counter; // Set helper variable as counter to start of user info li
 198:system.c      ****               do {
 199:system.c      ****                 line[char_counter-helper_var] = line[char_counter];
 200:system.c      ****               } while (line[char_counter++] != 0);
 201:system.c      ****               settings_store_build_info(line);
 202:system.c      ****           #endif
 203:system.c      ****           }
 204:system.c      ****           break;
 205:system.c      ****         case 'R' : // Restore defaults [IDLE/ALARM]
 206:system.c      ****           if ((line[2] != 'S') || (line[3] != 'T') || (line[4] != '=') || (line[6] != 0)) { return(
 207:system.c      ****           switch (line[5]) {
 208:system.c      ****             #ifdef ENABLE_RESTORE_EEPROM_DEFAULT_SETTINGS
 209:system.c      ****               case '$': settings_restore(SETTINGS_RESTORE_DEFAULTS); break;
 210:system.c      ****             #endif
 211:system.c      ****             #ifdef ENABLE_RESTORE_EEPROM_CLEAR_PARAMETERS
 212:system.c      ****               case '#': settings_restore(SETTINGS_RESTORE_PARAMETERS); break;
 213:system.c      ****             #endif
 214:system.c      ****             #ifdef ENABLE_RESTORE_EEPROM_WIPE_ALL
 215:system.c      ****               case '*': settings_restore(SETTINGS_RESTORE_ALL); break;
 216:system.c      ****             #endif
 217:system.c      ****             default: return(STATUS_INVALID_STATEMENT);
 218:system.c      ****           }
 219:system.c      ****           report_feedback_message(MESSAGE_RESTORE_DEFAULTS);
 220:system.c      ****           mc_reset(); // Force reset to ensure settings are initialized correctly.
 221:system.c      ****           break;
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 9


 222:system.c      ****         case 'N' : // Startup lines. [IDLE/ALARM]
 223:system.c      ****           if ( line[++char_counter] == 0 ) { // Print startup lines
 224:system.c      ****             for (helper_var=0; helper_var < N_STARTUP_LINE; helper_var++) {
 225:system.c      ****               if (!(settings_read_startup_line(helper_var, line))) {
 226:system.c      ****                 report_status_message(STATUS_SETTING_READ_FAIL);
 227:system.c      ****               } else {
 228:system.c      ****                 report_startup_line(helper_var,line);
 229:system.c      ****               }
 230:system.c      ****             }
 231:system.c      ****             break;
 232:system.c      ****           } else { // Store startup line [IDLE Only] Prevents motion during ALARM.
 233:system.c      ****             if (sys.state != STATE_IDLE) { return(STATUS_IDLE_ERROR); } // Store only when idle.
 234:system.c      ****             helper_var = true;  // Set helper_var to flag storing method.
 235:system.c      ****             // No break. Continues into default: to read remaining command characters.
 236:system.c      ****           }
 237:system.c      ****         default :  // Storing setting methods [IDLE/ALARM]
 238:system.c      ****           if(!read_float(line, &char_counter, &parameter)) { return(STATUS_BAD_NUMBER_FORMAT); }
 239:system.c      ****           if(line[char_counter++] != '=') { return(STATUS_INVALID_STATEMENT); }
 240:system.c      ****           if (helper_var) { // Store startup line
 241:system.c      ****             // Prepare sending gcode block to gcode parser by shifting all characters
 242:system.c      ****             helper_var = char_counter; // Set helper variable as counter to start of gcode block
 243:system.c      ****             do {
 244:system.c      ****               line[char_counter-helper_var] = line[char_counter];
 245:system.c      ****             } while (line[char_counter++] != 0);
 246:system.c      ****             // Execute gcode block to ensure block is valid.
 247:system.c      ****             helper_var = gc_execute_line(line); // Set helper_var to returned status code.
 248:system.c      ****             if (helper_var) { return(helper_var); }
 249:system.c      ****             else {
 250:system.c      ****               helper_var = trunc(parameter); // Set helper_var to int value of parameter
 251:system.c      ****               settings_store_startup_line(helper_var,line);
 252:system.c      ****             }
 253:system.c      ****           } else { // Store global setting.
 254:system.c      ****             if(!read_float(line, &char_counter, &value)) { return(STATUS_BAD_NUMBER_FORMAT); }
 255:system.c      ****             if((line[char_counter] != 0) || (parameter > 255)) { return(STATUS_INVALID_STATEMENT); 
 256:system.c      ****             return(settings_store_global_setting((uint8_t)parameter, value));
 257:system.c      ****           }
 258:system.c      ****       }
 259:system.c      ****   }
 260:system.c      ****   return(STATUS_OK); // If '$' command makes it to here, then everything's ok.
 261:system.c      **** }
 262:system.c      **** 
 263:system.c      **** 
 264:system.c      **** 
 265:system.c      **** void system_flag_wco_change()
 266:system.c      **** {
 234              		.loc 1 266 0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238 0000 08B5     		push	{r3, lr}
 239              		.cfi_def_cfa_offset 8
 240              		.cfi_offset 3, -8
 241              		.cfi_offset 14, -4
 267:system.c      ****   #ifdef FORCE_BUFFER_SYNC_DURING_WCO_CHANGE
 268:system.c      ****     protocol_buffer_synchronize();
 242              		.loc 1 268 0
 243 0002 FFF7FEFF 		bl	protocol_buffer_synchronize
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 10


 244              	.LVL18:
 269:system.c      ****   #endif
 270:system.c      ****   sys.report_wco_counter = 0;
 245              		.loc 1 270 0
 246 0006 0022     		movs	r2, #0
 247 0008 014B     		ldr	r3, .L23
 248 000a 1A73     		strb	r2, [r3, #12]
 249 000c 08BD     		pop	{r3, pc}
 250              	.L24:
 251 000e 00BF     		.align	2
 252              	.L23:
 253 0010 00000000 		.word	sys
 254              		.cfi_endproc
 255              	.LFE69:
 256              		.size	system_flag_wco_change, .-system_flag_wco_change
 257              		.global	__aeabi_i2f
 258              		.global	__aeabi_fdiv
 259              		.section	.text.system_convert_axis_steps_to_mpos,"ax",%progbits
 260              		.align	2
 261              		.global	system_convert_axis_steps_to_mpos
 262              		.thumb
 263              		.thumb_func
 264              		.type	system_convert_axis_steps_to_mpos, %function
 265              	system_convert_axis_steps_to_mpos:
 266              	.LFB70:
 271:system.c      **** }
 272:system.c      **** 
 273:system.c      **** 
 274:system.c      **** // Returns machine position of axis 'idx'. Must be sent a 'step' array.
 275:system.c      **** // NOTE: If motor steps and machine position are not in the same coordinate frame, this function
 276:system.c      **** //   serves as a central place to compute the transformation.
 277:system.c      **** float system_convert_axis_steps_to_mpos(int32_t *steps, uint8_t idx)
 278:system.c      **** {
 267              		.loc 1 278 0
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 0
 270              		@ frame_needed = 0, uses_anonymous_args = 0
 271              	.LVL19:
 272 0000 10B5     		push	{r4, lr}
 273              		.cfi_def_cfa_offset 8
 274              		.cfi_offset 4, -8
 275              		.cfi_offset 14, -4
 276 0002 0C46     		mov	r4, r1
 279:system.c      ****   float pos;
 280:system.c      ****   #ifdef COREXY
 281:system.c      ****     if (idx==X_AXIS) {
 282:system.c      ****       pos = (float)system_convert_corexy_to_x_axis_steps(steps) / settings.steps_per_mm[idx];
 283:system.c      ****     } else if (idx==Y_AXIS) {
 284:system.c      ****       pos = (float)system_convert_corexy_to_y_axis_steps(steps) / settings.steps_per_mm[idx];
 285:system.c      ****     } else {
 286:system.c      ****       pos = steps[idx]/settings.steps_per_mm[idx];
 287:system.c      ****     }
 288:system.c      ****   #else
 289:system.c      ****     pos = steps[idx]/settings.steps_per_mm[idx];
 277              		.loc 1 289 0
 278 0004 50F82100 		ldr	r0, [r0, r1, lsl #2]
 279              	.LVL20:
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 11


 280 0008 FFF7FEFF 		bl	__aeabi_i2f
 281              	.LVL21:
 282 000c 024B     		ldr	r3, .L27
 283 000e 53F82410 		ldr	r1, [r3, r4, lsl #2]	@ float
 284 0012 FFF7FEFF 		bl	__aeabi_fdiv
 285              	.LVL22:
 290:system.c      ****   #endif
 291:system.c      ****   return(pos);
 292:system.c      **** }
 286              		.loc 1 292 0
 287 0016 10BD     		pop	{r4, pc}
 288              	.L28:
 289              		.align	2
 290              	.L27:
 291 0018 00000000 		.word	settings
 292              		.cfi_endproc
 293              	.LFE70:
 294              		.size	system_convert_axis_steps_to_mpos, .-system_convert_axis_steps_to_mpos
 295              		.section	.text.system_convert_array_steps_to_mpos,"ax",%progbits
 296              		.align	2
 297              		.global	system_convert_array_steps_to_mpos
 298              		.thumb
 299              		.thumb_func
 300              		.type	system_convert_array_steps_to_mpos, %function
 301              	system_convert_array_steps_to_mpos:
 302              	.LFB71:
 293:system.c      **** 
 294:system.c      **** 
 295:system.c      **** void system_convert_array_steps_to_mpos(float *position, int32_t *steps)
 296:system.c      **** {
 303              		.loc 1 296 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307              	.LVL23:
 308 0000 70B5     		push	{r4, r5, r6, lr}
 309              		.cfi_def_cfa_offset 16
 310              		.cfi_offset 4, -16
 311              		.cfi_offset 5, -12
 312              		.cfi_offset 6, -8
 313              		.cfi_offset 14, -4
 314 0002 0646     		mov	r6, r0
 315 0004 0D46     		mov	r5, r1
 316              	.LVL24:
 297:system.c      ****   uint8_t idx;
 298:system.c      ****   for (idx=0; idx<N_AXIS; idx++) {
 317              		.loc 1 298 0
 318 0006 0024     		movs	r4, #0
 319 0008 07E0     		b	.L30
 320              	.LVL25:
 321              	.L31:
 299:system.c      ****     position[idx] = system_convert_axis_steps_to_mpos(steps, idx);
 322              		.loc 1 299 0 discriminator 3
 323 000a 2846     		mov	r0, r5
 324 000c 2146     		mov	r1, r4
 325 000e FFF7FEFF 		bl	system_convert_axis_steps_to_mpos
 326              	.LVL26:
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 12


 327 0012 46F82400 		str	r0, [r6, r4, lsl #2]	@ float
 298:system.c      ****     position[idx] = system_convert_axis_steps_to_mpos(steps, idx);
 328              		.loc 1 298 0 discriminator 3
 329 0016 0134     		adds	r4, r4, #1
 330              	.LVL27:
 331 0018 E4B2     		uxtb	r4, r4
 332              	.LVL28:
 333              	.L30:
 298:system.c      ****     position[idx] = system_convert_axis_steps_to_mpos(steps, idx);
 334              		.loc 1 298 0 is_stmt 0 discriminator 1
 335 001a 022C     		cmp	r4, #2
 336 001c F5D9     		bls	.L31
 300:system.c      ****   }
 301:system.c      ****   return;
 302:system.c      **** }
 337              		.loc 1 302 0 is_stmt 1
 338 001e 70BD     		pop	{r4, r5, r6, pc}
 339              		.cfi_endproc
 340              	.LFE71:
 341              		.size	system_convert_array_steps_to_mpos, .-system_convert_array_steps_to_mpos
 342              		.global	__aeabi_fcmpgt
 343              		.global	__aeabi_fcmplt
 344              		.section	.text.system_check_travel_limits,"ax",%progbits
 345              		.align	2
 346              		.global	system_check_travel_limits
 347              		.thumb
 348              		.thumb_func
 349              		.type	system_check_travel_limits, %function
 350              	system_check_travel_limits:
 351              	.LFB72:
 303:system.c      **** 
 304:system.c      **** 
 305:system.c      **** // CoreXY calculation only. Returns x or y-axis "steps" based on CoreXY motor steps.
 306:system.c      **** #ifdef COREXY
 307:system.c      ****   int32_t system_convert_corexy_to_x_axis_steps(int32_t *steps)
 308:system.c      ****   {
 309:system.c      ****     return( (steps[A_MOTOR] + steps[B_MOTOR])/2 );
 310:system.c      ****   }
 311:system.c      ****   int32_t system_convert_corexy_to_y_axis_steps(int32_t *steps)
 312:system.c      ****   {
 313:system.c      ****     return( (steps[A_MOTOR] - steps[B_MOTOR])/2 );
 314:system.c      ****   }
 315:system.c      **** #endif
 316:system.c      **** 
 317:system.c      **** 
 318:system.c      **** // Checks and reports if target array exceeds machine travel limits.
 319:system.c      **** uint8_t system_check_travel_limits(float *target)
 320:system.c      **** {
 352              		.loc 1 320 0
 353              		.cfi_startproc
 354              		@ args = 0, pretend = 0, frame = 0
 355              		@ frame_needed = 0, uses_anonymous_args = 0
 356              	.LVL29:
 357 0000 70B5     		push	{r4, r5, r6, lr}
 358              		.cfi_def_cfa_offset 16
 359              		.cfi_offset 4, -16
 360              		.cfi_offset 5, -12
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 13


 361              		.cfi_offset 6, -8
 362              		.cfi_offset 14, -4
 363 0002 0646     		mov	r6, r0
 364              	.LVL30:
 321:system.c      ****   uint8_t idx;
 322:system.c      ****   for (idx=0; idx<N_AXIS; idx++) {
 365              		.loc 1 322 0
 366 0004 0024     		movs	r4, #0
 367 0006 10E0     		b	.L34
 368              	.LVL31:
 369              	.L36:
 323:system.c      ****     #ifdef HOMING_FORCE_SET_ORIGIN
 324:system.c      ****       // When homing forced set origin is enabled, soft limits checks need to account for direction
 325:system.c      ****       // NOTE: max_travel is stored as negative
 326:system.c      ****       if (bit_istrue(settings.homing_dir_mask,bit(idx))) {
 327:system.c      ****         if (target[idx] < 0 || target[idx] > -settings.max_travel[idx]) { return(true); }
 328:system.c      ****       } else {
 329:system.c      ****         if (target[idx] > 0 || target[idx] < settings.max_travel[idx]) { return(true); }
 330:system.c      ****       }
 331:system.c      ****     #else
 332:system.c      ****       // NOTE: max_travel is stored as negative
 333:system.c      ****       if (target[idx] > 0 || target[idx] < settings.max_travel[idx]) { return(true); }
 370              		.loc 1 333 0
 371 0008 56F82450 		ldr	r5, [r6, r4, lsl #2]	@ float
 372 000c 2846     		mov	r0, r5
 373 000e 0021     		movs	r1, #0
 374 0010 FFF7FEFF 		bl	__aeabi_fcmpgt
 375              	.LVL32:
 376 0014 68B9     		cbnz	r0, .L37
 377              		.loc 1 333 0 is_stmt 0 discriminator 2
 378 0016 094B     		ldr	r3, .L40
 379 0018 03EB8403 		add	r3, r3, r4, lsl #2
 380 001c 2846     		mov	r0, r5
 381 001e 596A     		ldr	r1, [r3, #36]	@ float
 382 0020 FFF7FEFF 		bl	__aeabi_fcmplt
 383              	.LVL33:
 384 0024 38B9     		cbnz	r0, .L38
 322:system.c      ****     #ifdef HOMING_FORCE_SET_ORIGIN
 385              		.loc 1 322 0 is_stmt 1 discriminator 2
 386 0026 0134     		adds	r4, r4, #1
 387              	.LVL34:
 388 0028 E4B2     		uxtb	r4, r4
 389              	.LVL35:
 390              	.L34:
 322:system.c      ****     #ifdef HOMING_FORCE_SET_ORIGIN
 391              		.loc 1 322 0 is_stmt 0 discriminator 1
 392 002a 022C     		cmp	r4, #2
 393 002c ECD9     		bls	.L36
 334:system.c      ****     #endif
 335:system.c      ****   }
 336:system.c      ****   return(false);
 394              		.loc 1 336 0 is_stmt 1
 395 002e 0020     		movs	r0, #0
 396 0030 70BD     		pop	{r4, r5, r6, pc}
 397              	.LVL36:
 398              	.L37:
 333:system.c      ****     #endif
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 14


 399              		.loc 1 333 0
 400 0032 0120     		movs	r0, #1
 401 0034 70BD     		pop	{r4, r5, r6, pc}
 402              	.LVL37:
 403              	.L38:
 404 0036 0120     		movs	r0, #1
 337:system.c      **** }
 405              		.loc 1 337 0
 406 0038 70BD     		pop	{r4, r5, r6, pc}
 407              	.LVL38:
 408              	.L41:
 409 003a 00BF     		.align	2
 410              	.L40:
 411 003c 00000000 		.word	settings
 412              		.cfi_endproc
 413              	.LFE72:
 414              		.size	system_check_travel_limits, .-system_check_travel_limits
 415              		.section	.text.system_set_exec_state_flag,"ax",%progbits
 416              		.align	2
 417              		.global	system_set_exec_state_flag
 418              		.thumb
 419              		.thumb_func
 420              		.type	system_set_exec_state_flag, %function
 421              	system_set_exec_state_flag:
 422              	.LFB73:
 338:system.c      **** 
 339:system.c      **** 
 340:system.c      **** // Special handlers for setting and clearing Grbl's real-time execution flags.
 341:system.c      **** void system_set_exec_state_flag(uint8_t mask) {  
 423              		.loc 1 341 0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 0
 426              		@ frame_needed = 0, uses_anonymous_args = 0
 427              		@ link register save eliminated.
 428              	.LVL39:
 342:system.c      ****   CyGlobalIntDisable; 
 429              		.loc 1 342 0
 430              	@ 342 "system.c" 1
 431 0000 72B6     		CPSID   i
 432              	@ 0 "" 2
 343:system.c      ****   sys_rt_exec_state |= (mask);
 433              		.loc 1 343 0
 434              		.thumb
 435 0002 034B     		ldr	r3, .L43
 436 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 437 0006 1043     		orrs	r0, r0, r2
 438              	.LVL40:
 439 0008 1870     		strb	r0, [r3]
 344:system.c      ****   CyGlobalIntEnable;
 440              		.loc 1 344 0
 441              	@ 344 "system.c" 1
 442 000a 62B6     		CPSIE   i
 443              	@ 0 "" 2
 444              		.thumb
 445 000c 7047     		bx	lr
 446              	.L44:
 447 000e 00BF     		.align	2
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 15


 448              	.L43:
 449 0010 00000000 		.word	sys_rt_exec_state
 450              		.cfi_endproc
 451              	.LFE73:
 452              		.size	system_set_exec_state_flag, .-system_set_exec_state_flag
 453              		.global	__aeabi_f2d
 454              		.global	__aeabi_d2uiz
 455              		.global	__aeabi_f2uiz
 456              		.section	.text.system_execute_line,"ax",%progbits
 457              		.align	2
 458              		.global	system_execute_line
 459              		.thumb
 460              		.thumb_func
 461              		.type	system_execute_line, %function
 462              	system_execute_line:
 463              	.LFB68:
 109:system.c      ****   uint8_t char_counter = 1;
 464              		.loc 1 109 0
 465              		.cfi_startproc
 466              		@ args = 0, pretend = 0, frame = 16
 467              		@ frame_needed = 0, uses_anonymous_args = 0
 468              	.LVL41:
 469 0000 70B5     		push	{r4, r5, r6, lr}
 470              		.cfi_def_cfa_offset 16
 471              		.cfi_offset 4, -16
 472              		.cfi_offset 5, -12
 473              		.cfi_offset 6, -8
 474              		.cfi_offset 14, -4
 475 0002 84B0     		sub	sp, sp, #16
 476              		.cfi_def_cfa_offset 32
 477 0004 0446     		mov	r4, r0
 110:system.c      ****   uint8_t helper_var = 0; // Helper variable
 478              		.loc 1 110 0
 479 0006 0123     		movs	r3, #1
 480 0008 8DF80F30 		strb	r3, [sp, #15]
 481              	.LVL42:
 113:system.c      ****     case 0 : report_grbl_help(); break;
 482              		.loc 1 113 0
 483 000c 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 484 000e 432B     		cmp	r3, #67
 485 0010 1ED0     		beq	.L47
 486 0012 03D8     		bhi	.L48
 487 0014 4BB1     		cbz	r3, .L49
 488 0016 242B     		cmp	r3, #36
 489 0018 5ED1     		bne	.L46
 490 001a 19E0     		b	.L47
 491              	.L48:
 492 001c 4A2B     		cmp	r3, #74
 493 001e 08D0     		beq	.L50
 494 0020 582B     		cmp	r3, #88
 495 0022 15D0     		beq	.L47
 496 0024 472B     		cmp	r3, #71
 497 0026 57D1     		bne	.L46
 498 0028 12E0     		b	.L47
 499              	.L49:
 114:system.c      ****     case 'J' : // Jogging
 500              		.loc 1 114 0
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 16


 501 002a FFF7FEFF 		bl	report_grbl_help
 502              	.LVL43:
 260:system.c      **** }
 503              		.loc 1 260 0
 504 002e 0025     		movs	r5, #0
 114:system.c      ****     case 'J' : // Jogging
 505              		.loc 1 114 0
 506 0030 E1E1     		b	.L51
 507              	.LVL44:
 508              	.L50:
 117:system.c      ****       if(line[2] != '=') { return(STATUS_INVALID_STATEMENT); }
 509              		.loc 1 117 0
 510 0032 AA4B     		ldr	r3, .L122
 511 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 512 0036 13B1     		cbz	r3, .L52
 117:system.c      ****       if(line[2] != '=') { return(STATUS_INVALID_STATEMENT); }
 513              		.loc 1 117 0 is_stmt 0 discriminator 1
 514 0038 202B     		cmp	r3, #32
 515 003a 40F0A181 		bne	.L85
 516              	.L52:
 118:system.c      ****       return(gc_execute_line(line)); // NOTE: $J= is ignored inside g-code parser and used to detec
 517              		.loc 1 118 0 is_stmt 1
 518 003e A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 519 0040 3D2B     		cmp	r3, #61
 520 0042 40F09F81 		bne	.L86
 119:system.c      ****       break;
 521              		.loc 1 119 0
 522 0046 2046     		mov	r0, r4
 523              	.LVL45:
 524 0048 FFF7FEFF 		bl	gc_execute_line
 525              	.LVL46:
 526 004c 0546     		mov	r5, r0
 527 004e D2E1     		b	.L51
 528              	.LVL47:
 529              	.L47:
 122:system.c      ****       switch( line[1] ) {
 530              		.loc 1 122 0
 531 0050 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 532 0052 002B     		cmp	r3, #0
 533 0054 40F09881 		bne	.L87
 123:system.c      ****         case '$' : // Prints Grbl settings
 534              		.loc 1 123 0
 535 0058 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 536 005a 432B     		cmp	r3, #67
 537 005c 15D0     		beq	.L53
 538 005e 02D8     		bhi	.L54
 539 0060 242B     		cmp	r3, #36
 540 0062 05D0     		beq	.L55
 541 0064 92E1     		b	.L88
 542              	.L54:
 543 0066 472B     		cmp	r3, #71
 544 0068 0BD0     		beq	.L56
 545 006a 582B     		cmp	r3, #88
 546 006c 22D0     		beq	.L57
 547 006e 8DE1     		b	.L88
 548              	.L55:
 125:system.c      ****           else { report_grbl_settings(); }
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 17


 549              		.loc 1 125 0
 550 0070 9A4B     		ldr	r3, .L122
 551 0072 1D78     		ldrb	r5, [r3]	@ zero_extendqisi2
 552 0074 15F01805 		ands	r5, r5, #24
 553 0078 40F08A81 		bne	.L89
 126:system.c      ****           break;
 554              		.loc 1 126 0
 555 007c FFF7FEFF 		bl	report_grbl_settings
 556              	.LVL48:
 127:system.c      ****         case 'G' : // Prints gcode parser state
 557              		.loc 1 127 0
 558 0080 B9E1     		b	.L51
 559              	.LVL49:
 560              	.L56:
 130:system.c      ****           break;
 561              		.loc 1 130 0
 562 0082 FFF7FEFF 		bl	report_gcode_modes
 563              	.LVL50:
 260:system.c      **** }
 564              		.loc 1 260 0
 565 0086 0025     		movs	r5, #0
 131:system.c      ****         case 'C' : // Set check g-code mode [IDLE/CHECK]
 566              		.loc 1 131 0
 567 0088 B5E1     		b	.L51
 568              	.LVL51:
 569              	.L53:
 136:system.c      ****             mc_reset();
 570              		.loc 1 136 0
 571 008a 944B     		ldr	r3, .L122
 572 008c 1D78     		ldrb	r5, [r3]	@ zero_extendqisi2
 573 008e 022D     		cmp	r5, #2
 574 0090 06D1     		bne	.L58
 137:system.c      ****             report_feedback_message(MESSAGE_DISABLED);
 575              		.loc 1 137 0
 576 0092 FFF7FEFF 		bl	mc_reset
 577              	.LVL52:
 138:system.c      ****           } else {
 578              		.loc 1 138 0
 579 0096 0520     		movs	r0, #5
 580 0098 FFF7FEFF 		bl	report_feedback_message
 581              	.LVL53:
 260:system.c      **** }
 582              		.loc 1 260 0
 583 009c 0025     		movs	r5, #0
 584 009e AAE1     		b	.L51
 585              	.LVL54:
 586              	.L58:
 140:system.c      ****             sys.state = STATE_CHECK_MODE;
 587              		.loc 1 140 0
 588 00a0 002D     		cmp	r5, #0
 589 00a2 40F07781 		bne	.L90
 141:system.c      ****             report_feedback_message(MESSAGE_ENABLED);
 590              		.loc 1 141 0
 591 00a6 0222     		movs	r2, #2
 592 00a8 8C4B     		ldr	r3, .L122
 593 00aa 1A70     		strb	r2, [r3]
 142:system.c      ****           }
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 18


 594              		.loc 1 142 0
 595 00ac 0420     		movs	r0, #4
 596              	.LVL55:
 597 00ae FFF7FEFF 		bl	report_feedback_message
 598              	.LVL56:
 599 00b2 A0E1     		b	.L51
 600              	.LVL57:
 601              	.L57:
 146:system.c      ****             // Block if safety door is ajar.
 602              		.loc 1 146 0
 603 00b4 894B     		ldr	r3, .L122
 604 00b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 605 00b8 012B     		cmp	r3, #1
 606 00ba 40F06D81 		bne	.L91
 148:system.c      ****             report_feedback_message(MESSAGE_ALARM_UNLOCK);
 607              		.loc 1 148 0
 608 00be FFF7FEFF 		bl	system_check_safety_door_ajar
 609              	.LVL58:
 610 00c2 0546     		mov	r5, r0
 611 00c4 0028     		cmp	r0, #0
 612 00c6 40F06981 		bne	.L92
 149:system.c      ****             sys.state = STATE_IDLE;
 613              		.loc 1 149 0
 614 00ca 0320     		movs	r0, #3
 615 00cc FFF7FEFF 		bl	report_feedback_message
 616              	.LVL59:
 150:system.c      ****             // Don't run startup script. Prevents stored moves in startup from causing accidents.
 617              		.loc 1 150 0
 618 00d0 0022     		movs	r2, #0
 619 00d2 824B     		ldr	r3, .L122
 620 00d4 1A70     		strb	r2, [r3]
 621 00d6 8EE1     		b	.L51
 622              	.LVL60:
 623              	.L46:
 158:system.c      ****       switch( line[1] ) {
 624              		.loc 1 158 0
 625 00d8 804B     		ldr	r3, .L122
 626 00da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 627 00dc 012B     		cmp	r3, #1
 628 00de 00F25F81 		bhi	.L93
 159:system.c      ****         case '#' : // Print Grbl NGC parameters
 629              		.loc 1 159 0
 630 00e2 6278     		ldrb	r2, [r4, #1]	@ zero_extendqisi2
 631 00e4 233A     		subs	r2, r2, #35
 632 00e6 302A     		cmp	r2, #48
 633 00e8 00F2FC80 		bhi	.L94
 634 00ec DFE812F0 		tbh	[pc, r2, lsl #1]
 635              	.L61:
 636 00f0 3100     		.2byte	(.L60-.L61)/2
 637 00f2 FA00     		.2byte	(.L94-.L61)/2
 638 00f4 FA00     		.2byte	(.L94-.L61)/2
 639 00f6 FA00     		.2byte	(.L94-.L61)/2
 640 00f8 FA00     		.2byte	(.L94-.L61)/2
 641 00fa FA00     		.2byte	(.L94-.L61)/2
 642 00fc FA00     		.2byte	(.L94-.L61)/2
 643 00fe FA00     		.2byte	(.L94-.L61)/2
 644 0100 FA00     		.2byte	(.L94-.L61)/2
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 19


 645 0102 FA00     		.2byte	(.L94-.L61)/2
 646 0104 FA00     		.2byte	(.L94-.L61)/2
 647 0106 FA00     		.2byte	(.L94-.L61)/2
 648 0108 FA00     		.2byte	(.L94-.L61)/2
 649 010a FA00     		.2byte	(.L94-.L61)/2
 650 010c FA00     		.2byte	(.L94-.L61)/2
 651 010e FA00     		.2byte	(.L94-.L61)/2
 652 0110 FA00     		.2byte	(.L94-.L61)/2
 653 0112 FA00     		.2byte	(.L94-.L61)/2
 654 0114 FA00     		.2byte	(.L94-.L61)/2
 655 0116 FA00     		.2byte	(.L94-.L61)/2
 656 0118 FA00     		.2byte	(.L94-.L61)/2
 657 011a FA00     		.2byte	(.L94-.L61)/2
 658 011c FA00     		.2byte	(.L94-.L61)/2
 659 011e FA00     		.2byte	(.L94-.L61)/2
 660 0120 FA00     		.2byte	(.L94-.L61)/2
 661 0122 FA00     		.2byte	(.L94-.L61)/2
 662 0124 FA00     		.2byte	(.L94-.L61)/2
 663 0126 FA00     		.2byte	(.L94-.L61)/2
 664 0128 FA00     		.2byte	(.L94-.L61)/2
 665 012a FA00     		.2byte	(.L94-.L61)/2
 666 012c FA00     		.2byte	(.L94-.L61)/2
 667 012e FA00     		.2byte	(.L94-.L61)/2
 668 0130 FA00     		.2byte	(.L94-.L61)/2
 669 0132 FA00     		.2byte	(.L94-.L61)/2
 670 0134 FA00     		.2byte	(.L94-.L61)/2
 671 0136 FA00     		.2byte	(.L94-.L61)/2
 672 0138 FA00     		.2byte	(.L94-.L61)/2
 673 013a 3900     		.2byte	(.L62-.L61)/2
 674 013c 8600     		.2byte	(.L63-.L61)/2
 675 013e FA00     		.2byte	(.L94-.L61)/2
 676 0140 FA00     		.2byte	(.L94-.L61)/2
 677 0142 FA00     		.2byte	(.L94-.L61)/2
 678 0144 FA00     		.2byte	(.L94-.L61)/2
 679 0146 D500     		.2byte	(.L64-.L61)/2
 680 0148 FA00     		.2byte	(.L94-.L61)/2
 681 014a FA00     		.2byte	(.L94-.L61)/2
 682 014c FA00     		.2byte	(.L94-.L61)/2
 683 014e AA00     		.2byte	(.L65-.L61)/2
 684 0150 7500     		.2byte	(.L66-.L61)/2
 685              		.p2align 1
 686              	.L60:
 161:system.c      ****           else { report_ngc_parameters(); }
 687              		.loc 1 161 0
 688 0152 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 689 0154 002B     		cmp	r3, #0
 690 0156 40F02581 		bne	.L95
 162:system.c      ****           break;
 691              		.loc 1 162 0
 692 015a FFF7FEFF 		bl	report_ngc_parameters
 693              	.LVL61:
 260:system.c      **** }
 694              		.loc 1 260 0
 695 015e 0025     		movs	r5, #0
 163:system.c      ****         case 'H' : // Perform homing cycle [IDLE/ALARM]
 696              		.loc 1 163 0
 697 0160 49E1     		b	.L51
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 20


 698              	.LVL62:
 699              	.L62:
 165:system.c      ****           if (system_check_safety_door_ajar()) { return(STATUS_CHECK_DOOR); } // Block if safety do
 700              		.loc 1 165 0
 701 0162 5F4B     		ldr	r3, .L122+4
 702 0164 93F84830 		ldrb	r3, [r3, #72]	@ zero_extendqisi2
 703 0168 13F0100F 		tst	r3, #16
 704 016c 00F01C81 		beq	.L96
 166:system.c      ****           sys.state = STATE_HOMING; // Set system state variable
 705              		.loc 1 166 0
 706 0170 FFF7FEFF 		bl	system_check_safety_door_ajar
 707              	.LVL63:
 708 0174 0646     		mov	r6, r0
 709 0176 0028     		cmp	r0, #0
 710 0178 40F01881 		bne	.L97
 167:system.c      ****           if (line[2] == 0) {
 711              		.loc 1 167 0
 712 017c 0422     		movs	r2, #4
 713 017e 574B     		ldr	r3, .L122
 714 0180 1A70     		strb	r2, [r3]
 168:system.c      ****             mc_homing_cycle(HOMING_CYCLE_ALL);
 715              		.loc 1 168 0
 716 0182 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 717 0184 13B9     		cbnz	r3, .L67
 169:system.c      ****           #ifdef HOMING_SINGLE_AXIS_COMMANDS
 718              		.loc 1 169 0
 719 0186 FFF7FEFF 		bl	mc_homing_cycle
 720              	.LVL64:
 721 018a 15E0     		b	.L68
 722              	.L67:
 171:system.c      ****               switch (line[2]) {
 723              		.loc 1 171 0
 724 018c E278     		ldrb	r2, [r4, #3]	@ zero_extendqisi2
 725 018e 002A     		cmp	r2, #0
 726 0190 40F00E81 		bne	.L98
 172:system.c      ****                 case 'X': mc_homing_cycle(HOMING_CYCLE_X); break;
 727              		.loc 1 172 0
 728 0194 592B     		cmp	r3, #89
 729 0196 08D0     		beq	.L69
 730 0198 5A2B     		cmp	r3, #90
 731 019a 0AD0     		beq	.L70
 732 019c 582B     		cmp	r3, #88
 733 019e 40F00981 		bne	.L118
 173:system.c      ****                 case 'Y': mc_homing_cycle(HOMING_CYCLE_Y); break;
 734              		.loc 1 173 0
 735 01a2 0120     		movs	r0, #1
 736 01a4 FFF7FEFF 		bl	mc_homing_cycle
 737              	.LVL65:
 738 01a8 06E0     		b	.L68
 739              	.L69:
 174:system.c      ****                 case 'Z': mc_homing_cycle(HOMING_CYCLE_Z); break;
 740              		.loc 1 174 0
 741 01aa 0220     		movs	r0, #2
 742 01ac FFF7FEFF 		bl	mc_homing_cycle
 743              	.LVL66:
 744 01b0 02E0     		b	.L68
 745              	.L70:
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 21


 175:system.c      ****                 default: return(STATUS_INVALID_STATEMENT);
 746              		.loc 1 175 0
 747 01b2 0420     		movs	r0, #4
 748 01b4 FFF7FEFF 		bl	mc_homing_cycle
 749              	.LVL67:
 750              	.L68:
 180:system.c      ****             sys.state = STATE_IDLE; // Set to IDLE when complete.
 751              		.loc 1 180 0
 752 01b8 484B     		ldr	r3, .L122
 753 01ba 5D78     		ldrb	r5, [r3, #1]	@ zero_extendqisi2
 754 01bc 002D     		cmp	r5, #0
 755 01be 40F0FB80 		bne	.L100
 181:system.c      ****             st_go_idle(); // Set steppers to the settings idle state before returning.
 756              		.loc 1 181 0
 757 01c2 0022     		movs	r2, #0
 758 01c4 1A70     		strb	r2, [r3]
 182:system.c      ****             if (line[2] == 0) { system_execute_startup(line); }
 759              		.loc 1 182 0
 760 01c6 FFF7FEFF 		bl	st_go_idle
 761              	.LVL68:
 183:system.c      ****           }
 762              		.loc 1 183 0
 763 01ca A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 764 01cc 002B     		cmp	r3, #0
 765 01ce 40F01281 		bne	.L51
 183:system.c      ****           }
 766              		.loc 1 183 0 is_stmt 0 discriminator 1
 767 01d2 2046     		mov	r0, r4
 768 01d4 FFF7FEFF 		bl	system_execute_startup
 769              	.LVL69:
 770 01d8 0DE1     		b	.L51
 771              	.LVL70:
 772              	.L66:
 187:system.c      ****           system_set_exec_state_flag(EXEC_SLEEP); // Set to execute sleep mode immediately
 773              		.loc 1 187 0 is_stmt 1
 774 01da A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 775 01dc 4C2B     		cmp	r3, #76
 776 01de 40F0ED80 		bne	.L101
 187:system.c      ****           system_set_exec_state_flag(EXEC_SLEEP); // Set to execute sleep mode immediately
 777              		.loc 1 187 0 is_stmt 0 discriminator 2
 778 01e2 E378     		ldrb	r3, [r4, #3]	@ zero_extendqisi2
 779 01e4 502B     		cmp	r3, #80
 780 01e6 40F0EB80 		bne	.L102
 187:system.c      ****           system_set_exec_state_flag(EXEC_SLEEP); // Set to execute sleep mode immediately
 781              		.loc 1 187 0 discriminator 4
 782 01ea 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 783 01ec 002B     		cmp	r3, #0
 784 01ee 40F0E980 		bne	.L103
 188:system.c      ****           break;
 785              		.loc 1 188 0 is_stmt 1
 786 01f2 8020     		movs	r0, #128
 787              	.LVL71:
 788 01f4 FFF7FEFF 		bl	system_set_exec_state_flag
 789              	.LVL72:
 260:system.c      **** }
 790              		.loc 1 260 0
 791 01f8 0025     		movs	r5, #0
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 22


 189:system.c      ****         case 'I' : // Print or store build info. [IDLE/ALARM]
 792              		.loc 1 189 0
 793 01fa FCE0     		b	.L51
 794              	.LVL73:
 795              	.L63:
 191:system.c      ****             settings_read_build_info(line);
 796              		.loc 1 191 0
 797 01fc 0223     		movs	r3, #2
 798 01fe 8DF80F30 		strb	r3, [sp, #15]
 799 0202 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 800 0204 3BB9     		cbnz	r3, .L72
 192:system.c      ****             report_build_info(line);
 801              		.loc 1 192 0
 802 0206 2046     		mov	r0, r4
 803              	.LVL74:
 804 0208 FFF7FEFF 		bl	settings_read_build_info
 805              	.LVL75:
 193:system.c      ****           #ifdef ENABLE_BUILD_INFO_WRITE_COMMAND
 806              		.loc 1 193 0
 807 020c 2046     		mov	r0, r4
 808 020e FFF7FEFF 		bl	report_build_info
 809              	.LVL76:
 260:system.c      **** }
 810              		.loc 1 260 0
 811 0212 0025     		movs	r5, #0
 812 0214 EFE0     		b	.L51
 813              	.LVL77:
 814              	.L72:
 196:system.c      ****               helper_var = char_counter; // Set helper variable as counter to start of user info li
 815              		.loc 1 196 0
 816 0216 0323     		movs	r3, #3
 817 0218 8DF80F30 		strb	r3, [sp, #15]
 818 021c A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 819 021e 3D2B     		cmp	r3, #61
 820 0220 40F0D280 		bne	.L104
 821              	.L73:
 199:system.c      ****               } while (line[char_counter++] != 0);
 822              		.loc 1 199 0 discriminator 1
 823 0224 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 824 0228 DA1E     		subs	r2, r3, #3
 825 022a E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 826 022c A154     		strb	r1, [r4, r2]
 200:system.c      ****               settings_store_build_info(line);
 827              		.loc 1 200 0 discriminator 1
 828 022e 5A1C     		adds	r2, r3, #1
 829 0230 8DF80F20 		strb	r2, [sp, #15]
 830 0234 E35C     		ldrb	r3, [r4, r3]	@ zero_extendqisi2
 831 0236 002B     		cmp	r3, #0
 832 0238 F4D1     		bne	.L73
 201:system.c      ****           #endif
 833              		.loc 1 201 0
 834 023a 2046     		mov	r0, r4
 835              	.LVL78:
 836 023c FFF7FEFF 		bl	settings_store_build_info
 837              	.LVL79:
 260:system.c      **** }
 838              		.loc 1 260 0
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 23


 839 0240 0025     		movs	r5, #0
 840 0242 D8E0     		b	.L51
 841              	.LVL80:
 842              	.L65:
 206:system.c      ****           switch (line[5]) {
 843              		.loc 1 206 0
 844 0244 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 845 0246 532B     		cmp	r3, #83
 846 0248 40F0C080 		bne	.L105
 206:system.c      ****           switch (line[5]) {
 847              		.loc 1 206 0 is_stmt 0 discriminator 2
 848 024c E378     		ldrb	r3, [r4, #3]	@ zero_extendqisi2
 849 024e 542B     		cmp	r3, #84
 850 0250 40F0BE80 		bne	.L106
 206:system.c      ****           switch (line[5]) {
 851              		.loc 1 206 0 discriminator 4
 852 0254 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 853 0256 3D2B     		cmp	r3, #61
 854 0258 40F0BC80 		bne	.L107
 206:system.c      ****           switch (line[5]) {
 855              		.loc 1 206 0 discriminator 6
 856 025c A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 857 025e 002B     		cmp	r3, #0
 858 0260 40F0BA80 		bne	.L108
 207:system.c      ****             #ifdef ENABLE_RESTORE_EEPROM_DEFAULT_SETTINGS
 859              		.loc 1 207 0 is_stmt 1
 860 0264 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 861 0266 242B     		cmp	r3, #36
 862 0268 05D0     		beq	.L74
 863 026a 2A2B     		cmp	r3, #42
 864 026c 0BD0     		beq	.L75
 865 026e 232B     		cmp	r3, #35
 866 0270 40F0B480 		bne	.L119
 867 0274 03E0     		b	.L76
 868              	.L74:
 209:system.c      ****             #endif
 869              		.loc 1 209 0
 870 0276 0120     		movs	r0, #1
 871              	.LVL81:
 872 0278 FFF7FEFF 		bl	settings_restore
 873              	.LVL82:
 874 027c 06E0     		b	.L77
 875              	.LVL83:
 876              	.L76:
 212:system.c      ****             #endif
 877              		.loc 1 212 0
 878 027e 0220     		movs	r0, #2
 879              	.LVL84:
 880 0280 FFF7FEFF 		bl	settings_restore
 881              	.LVL85:
 882 0284 02E0     		b	.L77
 883              	.LVL86:
 884              	.L75:
 215:system.c      ****             #endif
 885              		.loc 1 215 0
 886 0286 FF20     		movs	r0, #255
 887              	.LVL87:
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 24


 888 0288 FFF7FEFF 		bl	settings_restore
 889              	.LVL88:
 890              	.L77:
 219:system.c      ****           mc_reset(); // Force reset to ensure settings are initialized correctly.
 891              		.loc 1 219 0
 892 028c 0920     		movs	r0, #9
 893 028e FFF7FEFF 		bl	report_feedback_message
 894              	.LVL89:
 220:system.c      ****           break;
 895              		.loc 1 220 0
 896 0292 FFF7FEFF 		bl	mc_reset
 897              	.LVL90:
 260:system.c      **** }
 898              		.loc 1 260 0
 899 0296 0025     		movs	r5, #0
 221:system.c      ****         case 'N' : // Startup lines. [IDLE/ALARM]
 900              		.loc 1 221 0
 901 0298 ADE0     		b	.L51
 902              	.LVL91:
 903              	.L64:
 223:system.c      ****             for (helper_var=0; helper_var < N_STARTUP_LINE; helper_var++) {
 904              		.loc 1 223 0
 905 029a 0222     		movs	r2, #2
 906 029c 8DF80F20 		strb	r2, [sp, #15]
 907 02a0 A278     		ldrb	r2, [r4, #2]	@ zero_extendqisi2
 908 02a2 82B1     		cbz	r2, .L110
 909 02a4 14E0     		b	.L120
 910              	.LVL92:
 911              	.L82:
 225:system.c      ****                 report_status_message(STATUS_SETTING_READ_FAIL);
 912              		.loc 1 225 0
 913 02a6 2846     		mov	r0, r5
 914 02a8 2146     		mov	r1, r4
 915 02aa FFF7FEFF 		bl	settings_read_startup_line
 916              	.LVL93:
 917 02ae 18B9     		cbnz	r0, .L80
 226:system.c      ****               } else {
 918              		.loc 1 226 0
 919 02b0 0720     		movs	r0, #7
 920 02b2 FFF7FEFF 		bl	report_status_message
 921              	.LVL94:
 922 02b6 03E0     		b	.L81
 923              	.L80:
 228:system.c      ****               }
 924              		.loc 1 228 0
 925 02b8 2846     		mov	r0, r5
 926 02ba 2146     		mov	r1, r4
 927 02bc FFF7FEFF 		bl	report_startup_line
 928              	.LVL95:
 929              	.L81:
 224:system.c      ****               if (!(settings_read_startup_line(helper_var, line))) {
 930              		.loc 1 224 0 discriminator 2
 931 02c0 0135     		adds	r5, r5, #1
 932              	.LVL96:
 933 02c2 EDB2     		uxtb	r5, r5
 934              	.LVL97:
 935 02c4 00E0     		b	.L78
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 25


 936              	.LVL98:
 937              	.L110:
 938 02c6 0025     		movs	r5, #0
 939              	.LVL99:
 940              	.L78:
 224:system.c      ****               if (!(settings_read_startup_line(helper_var, line))) {
 941              		.loc 1 224 0 is_stmt 0 discriminator 1
 942 02c8 012D     		cmp	r5, #1
 943 02ca ECD9     		bls	.L82
 260:system.c      **** }
 944              		.loc 1 260 0 is_stmt 1
 945 02cc 0025     		movs	r5, #0
 946              	.LVL100:
 947 02ce 92E0     		b	.L51
 948              	.LVL101:
 949              	.L120:
 233:system.c      ****             helper_var = true;  // Set helper_var to flag storing method.
 950              		.loc 1 233 0
 951 02d0 002B     		cmp	r3, #0
 952 02d2 40F08580 		bne	.L111
 234:system.c      ****             // No break. Continues into default: to read remaining command characters.
 953              		.loc 1 234 0
 954 02d6 0125     		movs	r5, #1
 955 02d8 05E0     		b	.L59
 956              	.L123:
 957 02da 00BF     		.align	2
 958              	.L122:
 959 02dc 00000000 		.word	sys
 960 02e0 00000000 		.word	settings
 961              	.L94:
 111:system.c      ****   float parameter, value;
 962              		.loc 1 111 0
 963 02e4 0025     		movs	r5, #0
 964              	.L59:
 965              	.LVL102:
 238:system.c      ****           if(line[char_counter++] != '=') { return(STATUS_INVALID_STATEMENT); }
 966              		.loc 1 238 0
 967 02e6 2046     		mov	r0, r4
 968              	.LVL103:
 969 02e8 0DF10F01 		add	r1, sp, #15
 970 02ec 02AA     		add	r2, sp, #8
 971 02ee FFF7FEFF 		bl	read_float
 972              	.LVL104:
 973 02f2 0028     		cmp	r0, #0
 974 02f4 76D0     		beq	.L112
 239:system.c      ****           if (helper_var) { // Store startup line
 975              		.loc 1 239 0
 976 02f6 9DF80F20 		ldrb	r2, [sp, #15]	@ zero_extendqisi2
 977 02fa 531C     		adds	r3, r2, #1
 978 02fc DBB2     		uxtb	r3, r3
 979 02fe 8DF80F30 		strb	r3, [sp, #15]
 980 0302 A25C     		ldrb	r2, [r4, r2]	@ zero_extendqisi2
 981 0304 3D2A     		cmp	r2, #61
 982 0306 6FD1     		bne	.L113
 240:system.c      ****             // Prepare sending gcode block to gcode parser by shifting all characters
 983              		.loc 1 240 0
 984 0308 EDB1     		cbz	r5, .L83
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 26


 985              	.L84:
 244:system.c      ****             } while (line[char_counter++] != 0);
 986              		.loc 1 244 0 discriminator 1
 987 030a 9DF80F20 		ldrb	r2, [sp, #15]	@ zero_extendqisi2
 988 030e D11A     		subs	r1, r2, r3
 989 0310 A05C     		ldrb	r0, [r4, r2]	@ zero_extendqisi2
 990 0312 6054     		strb	r0, [r4, r1]
 245:system.c      ****             // Execute gcode block to ensure block is valid.
 991              		.loc 1 245 0 discriminator 1
 992 0314 511C     		adds	r1, r2, #1
 993 0316 8DF80F10 		strb	r1, [sp, #15]
 994 031a A25C     		ldrb	r2, [r4, r2]	@ zero_extendqisi2
 995 031c 002A     		cmp	r2, #0
 996 031e F4D1     		bne	.L84
 247:system.c      ****             if (helper_var) { return(helper_var); }
 997              		.loc 1 247 0
 998 0320 2046     		mov	r0, r4
 999 0322 FFF7FEFF 		bl	gc_execute_line
 1000              	.LVL105:
 248:system.c      ****             else {
 1001              		.loc 1 248 0
 1002 0326 0546     		mov	r5, r0
 1003 0328 0028     		cmp	r0, #0
 1004 032a 64D1     		bne	.L51
 250:system.c      ****               settings_store_startup_line(helper_var,line);
 1005              		.loc 1 250 0
 1006 032c 0298     		ldr	r0, [sp, #8]	@ float
 1007              	.LVL106:
 1008 032e FFF7FEFF 		bl	__aeabi_f2d
 1009              	.LVL107:
 1010 0332 FFF7FEFF 		bl	trunc
 1011              	.LVL108:
 1012 0336 FFF7FEFF 		bl	__aeabi_d2uiz
 1013              	.LVL109:
 251:system.c      ****             }
 1014              		.loc 1 251 0
 1015 033a C0B2     		uxtb	r0, r0
 1016 033c 2146     		mov	r1, r4
 1017 033e FFF7FEFF 		bl	settings_store_startup_line
 1018              	.LVL110:
 260:system.c      **** }
 1019              		.loc 1 260 0
 1020 0342 0025     		movs	r5, #0
 1021 0344 57E0     		b	.L51
 1022              	.LVL111:
 1023              	.L83:
 254:system.c      ****             if((line[char_counter] != 0) || (parameter > 255)) { return(STATUS_INVALID_STATEMENT); 
 1024              		.loc 1 254 0
 1025 0346 2046     		mov	r0, r4
 1026 0348 0DF10F01 		add	r1, sp, #15
 1027 034c 01AA     		add	r2, sp, #4
 1028 034e FFF7FEFF 		bl	read_float
 1029              	.LVL112:
 1030 0352 0028     		cmp	r0, #0
 1031 0354 4AD0     		beq	.L115
 255:system.c      ****             return(settings_store_global_setting((uint8_t)parameter, value));
 1032              		.loc 1 255 0
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 27


 1033 0356 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 1034 035a E35C     		ldrb	r3, [r4, r3]	@ zero_extendqisi2
 1035 035c 002B     		cmp	r3, #0
 1036 035e 47D1     		bne	.L116
 255:system.c      ****             return(settings_store_global_setting((uint8_t)parameter, value));
 1037              		.loc 1 255 0 is_stmt 0 discriminator 2
 1038 0360 029C     		ldr	r4, [sp, #8]	@ float
 1039              	.LVL113:
 1040 0362 2046     		mov	r0, r4
 1041 0364 2549     		ldr	r1, .L124
 1042 0366 FFF7FEFF 		bl	__aeabi_fcmpgt
 1043              	.LVL114:
 1044 036a 0028     		cmp	r0, #0
 1045 036c 42D1     		bne	.L117
 256:system.c      ****           }
 1046              		.loc 1 256 0 is_stmt 1
 1047 036e 2046     		mov	r0, r4
 1048 0370 FFF7FEFF 		bl	__aeabi_f2uiz
 1049              	.LVL115:
 1050 0374 C0B2     		uxtb	r0, r0
 1051 0376 0199     		ldr	r1, [sp, #4]	@ float
 1052 0378 FFF7FEFF 		bl	settings_store_global_setting
 1053              	.LVL116:
 1054 037c 0546     		mov	r5, r0
 1055              	.LVL117:
 1056 037e 3AE0     		b	.L51
 1057              	.LVL118:
 1058              	.L85:
 117:system.c      ****       if(line[2] != '=') { return(STATUS_INVALID_STATEMENT); }
 1059              		.loc 1 117 0
 1060 0380 0825     		movs	r5, #8
 1061 0382 38E0     		b	.L51
 1062              	.L86:
 118:system.c      ****       return(gc_execute_line(line)); // NOTE: $J= is ignored inside g-code parser and used to detec
 1063              		.loc 1 118 0
 1064 0384 0325     		movs	r5, #3
 1065 0386 36E0     		b	.L51
 1066              	.L87:
 122:system.c      ****       switch( line[1] ) {
 1067              		.loc 1 122 0
 1068 0388 0325     		movs	r5, #3
 1069 038a 34E0     		b	.L51
 1070              	.L88:
 260:system.c      **** }
 1071              		.loc 1 260 0
 1072 038c 0025     		movs	r5, #0
 1073 038e 32E0     		b	.L51
 1074              	.L89:
 125:system.c      ****           else { report_grbl_settings(); }
 1075              		.loc 1 125 0
 1076 0390 0825     		movs	r5, #8
 1077 0392 30E0     		b	.L51
 1078              	.L90:
 140:system.c      ****             sys.state = STATE_CHECK_MODE;
 1079              		.loc 1 140 0
 1080 0394 0825     		movs	r5, #8
 1081 0396 2EE0     		b	.L51
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 28


 1082              	.L91:
 260:system.c      **** }
 1083              		.loc 1 260 0
 1084 0398 0025     		movs	r5, #0
 1085 039a 2CE0     		b	.L51
 1086              	.LVL119:
 1087              	.L92:
 148:system.c      ****             report_feedback_message(MESSAGE_ALARM_UNLOCK);
 1088              		.loc 1 148 0
 1089 039c 0D25     		movs	r5, #13
 1090 039e 2AE0     		b	.L51
 1091              	.LVL120:
 1092              	.L93:
 158:system.c      ****       switch( line[1] ) {
 1093              		.loc 1 158 0
 1094 03a0 0825     		movs	r5, #8
 1095 03a2 28E0     		b	.L51
 1096              	.L95:
 161:system.c      ****           else { report_ngc_parameters(); }
 1097              		.loc 1 161 0
 1098 03a4 0325     		movs	r5, #3
 1099 03a6 26E0     		b	.L51
 1100              	.L96:
 165:system.c      ****           if (system_check_safety_door_ajar()) { return(STATUS_CHECK_DOOR); } // Block if safety do
 1101              		.loc 1 165 0
 1102 03a8 0525     		movs	r5, #5
 1103 03aa 24E0     		b	.L51
 1104              	.LVL121:
 1105              	.L97:
 166:system.c      ****           sys.state = STATE_HOMING; // Set system state variable
 1106              		.loc 1 166 0
 1107 03ac 0D25     		movs	r5, #13
 1108 03ae 22E0     		b	.L51
 1109              	.L98:
 179:system.c      ****           if (!sys.abort) {  // Execute startup scripts after successful homing.
 1110              		.loc 1 179 0
 1111 03b0 0325     		movs	r5, #3
 1112 03b2 20E0     		b	.L51
 1113              	.L118:
 176:system.c      ****               }
 1114              		.loc 1 176 0
 1115 03b4 0325     		movs	r5, #3
 1116 03b6 1EE0     		b	.L51
 1117              	.L100:
 260:system.c      **** }
 1118              		.loc 1 260 0
 1119 03b8 3546     		mov	r5, r6
 1120 03ba 1CE0     		b	.L51
 1121              	.LVL122:
 1122              	.L101:
 187:system.c      ****           system_set_exec_state_flag(EXEC_SLEEP); // Set to execute sleep mode immediately
 1123              		.loc 1 187 0
 1124 03bc 0325     		movs	r5, #3
 1125 03be 1AE0     		b	.L51
 1126              	.L102:
 1127 03c0 0325     		movs	r5, #3
 1128 03c2 18E0     		b	.L51
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 29


 1129              	.L103:
 1130 03c4 0325     		movs	r5, #3
 1131 03c6 16E0     		b	.L51
 1132              	.L104:
 196:system.c      ****               helper_var = char_counter; // Set helper variable as counter to start of user info li
 1133              		.loc 1 196 0
 1134 03c8 0325     		movs	r5, #3
 1135 03ca 14E0     		b	.L51
 1136              	.L105:
 206:system.c      ****           switch (line[5]) {
 1137              		.loc 1 206 0
 1138 03cc 0325     		movs	r5, #3
 1139 03ce 12E0     		b	.L51
 1140              	.L106:
 1141 03d0 0325     		movs	r5, #3
 1142 03d2 10E0     		b	.L51
 1143              	.L107:
 1144 03d4 0325     		movs	r5, #3
 1145 03d6 0EE0     		b	.L51
 1146              	.L108:
 1147 03d8 0325     		movs	r5, #3
 1148 03da 0CE0     		b	.L51
 1149              	.L119:
 217:system.c      ****           }
 1150              		.loc 1 217 0
 1151 03dc 0325     		movs	r5, #3
 1152 03de 0AE0     		b	.L51
 1153              	.L111:
 233:system.c      ****             helper_var = true;  // Set helper_var to flag storing method.
 1154              		.loc 1 233 0
 1155 03e0 0825     		movs	r5, #8
 1156 03e2 08E0     		b	.L51
 1157              	.LVL123:
 1158              	.L112:
 238:system.c      ****           if(line[char_counter++] != '=') { return(STATUS_INVALID_STATEMENT); }
 1159              		.loc 1 238 0
 1160 03e4 0225     		movs	r5, #2
 1161              	.LVL124:
 1162 03e6 06E0     		b	.L51
 1163              	.LVL125:
 1164              	.L113:
 239:system.c      ****           if (helper_var) { // Store startup line
 1165              		.loc 1 239 0
 1166 03e8 0325     		movs	r5, #3
 1167              	.LVL126:
 1168 03ea 04E0     		b	.L51
 1169              	.LVL127:
 1170              	.L115:
 254:system.c      ****             if((line[char_counter] != 0) || (parameter > 255)) { return(STATUS_INVALID_STATEMENT); 
 1171              		.loc 1 254 0
 1172 03ec 0225     		movs	r5, #2
 1173              	.LVL128:
 1174 03ee 02E0     		b	.L51
 1175              	.LVL129:
 1176              	.L116:
 255:system.c      ****             return(settings_store_global_setting((uint8_t)parameter, value));
 1177              		.loc 1 255 0
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 30


 1178 03f0 0325     		movs	r5, #3
 1179              	.LVL130:
 1180 03f2 00E0     		b	.L51
 1181              	.LVL131:
 1182              	.L117:
 1183 03f4 0325     		movs	r5, #3
 1184              	.LVL132:
 1185              	.L51:
 261:system.c      **** 
 1186              		.loc 1 261 0
 1187 03f6 2846     		mov	r0, r5
 1188 03f8 04B0     		add	sp, sp, #16
 1189              		.cfi_def_cfa_offset 16
 1190              		@ sp needed
 1191 03fa 70BD     		pop	{r4, r5, r6, pc}
 1192              	.L125:
 1193              		.align	2
 1194              	.L124:
 1195 03fc 00007F43 		.word	1132396544
 1196              		.cfi_endproc
 1197              	.LFE68:
 1198              		.size	system_execute_line, .-system_execute_line
 1199              		.section	.text.system_clear_exec_state_flag,"ax",%progbits
 1200              		.align	2
 1201              		.global	system_clear_exec_state_flag
 1202              		.thumb
 1203              		.thumb_func
 1204              		.type	system_clear_exec_state_flag, %function
 1205              	system_clear_exec_state_flag:
 1206              	.LFB74:
 345:system.c      **** }
 346:system.c      **** 
 347:system.c      **** void system_clear_exec_state_flag(uint8_t mask) {
 1207              		.loc 1 347 0
 1208              		.cfi_startproc
 1209              		@ args = 0, pretend = 0, frame = 0
 1210              		@ frame_needed = 0, uses_anonymous_args = 0
 1211              		@ link register save eliminated.
 1212              	.LVL133:
 348:system.c      ****   CyGlobalIntDisable; 
 1213              		.loc 1 348 0
 1214              	@ 348 "system.c" 1
 1215 0000 72B6     		CPSID   i
 1216              	@ 0 "" 2
 349:system.c      ****   sys_rt_exec_state &= ~(mask);
 1217              		.loc 1 349 0
 1218              		.thumb
 1219 0002 034A     		ldr	r2, .L127
 1220 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1221 0006 23EA0000 		bic	r0, r3, r0
 1222              	.LVL134:
 1223 000a 1070     		strb	r0, [r2]
 350:system.c      ****   CyGlobalIntEnable;
 1224              		.loc 1 350 0
 1225              	@ 350 "system.c" 1
 1226 000c 62B6     		CPSIE   i
 1227              	@ 0 "" 2
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 31


 1228              		.thumb
 1229 000e 7047     		bx	lr
 1230              	.L128:
 1231              		.align	2
 1232              	.L127:
 1233 0010 00000000 		.word	sys_rt_exec_state
 1234              		.cfi_endproc
 1235              	.LFE74:
 1236              		.size	system_clear_exec_state_flag, .-system_clear_exec_state_flag
 1237              		.section	.text.system_set_exec_alarm,"ax",%progbits
 1238              		.align	2
 1239              		.global	system_set_exec_alarm
 1240              		.thumb
 1241              		.thumb_func
 1242              		.type	system_set_exec_alarm, %function
 1243              	system_set_exec_alarm:
 1244              	.LFB75:
 351:system.c      **** }
 352:system.c      **** 
 353:system.c      **** void system_set_exec_alarm(uint8_t code) {
 1245              		.loc 1 353 0
 1246              		.cfi_startproc
 1247              		@ args = 0, pretend = 0, frame = 0
 1248              		@ frame_needed = 0, uses_anonymous_args = 0
 1249              		@ link register save eliminated.
 1250              	.LVL135:
 354:system.c      ****   CyGlobalIntDisable;  
 1251              		.loc 1 354 0
 1252              	@ 354 "system.c" 1
 1253 0000 72B6     		CPSID   i
 1254              	@ 0 "" 2
 355:system.c      ****   sys_rt_exec_alarm = code;
 1255              		.loc 1 355 0
 1256              		.thumb
 1257 0002 024B     		ldr	r3, .L130
 1258 0004 1870     		strb	r0, [r3]
 356:system.c      ****   CyGlobalIntEnable;
 1259              		.loc 1 356 0
 1260              	@ 356 "system.c" 1
 1261 0006 62B6     		CPSIE   i
 1262              	@ 0 "" 2
 1263              		.thumb
 1264 0008 7047     		bx	lr
 1265              	.L131:
 1266 000a 00BF     		.align	2
 1267              	.L130:
 1268 000c 00000000 		.word	sys_rt_exec_alarm
 1269              		.cfi_endproc
 1270              	.LFE75:
 1271              		.size	system_set_exec_alarm, .-system_set_exec_alarm
 1272              		.section	.text.system_clear_exec_alarm,"ax",%progbits
 1273              		.align	2
 1274              		.global	system_clear_exec_alarm
 1275              		.thumb
 1276              		.thumb_func
 1277              		.type	system_clear_exec_alarm, %function
 1278              	system_clear_exec_alarm:
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 32


 1279              	.LFB76:
 357:system.c      **** }
 358:system.c      **** 
 359:system.c      **** void system_clear_exec_alarm() {
 1280              		.loc 1 359 0
 1281              		.cfi_startproc
 1282              		@ args = 0, pretend = 0, frame = 0
 1283              		@ frame_needed = 0, uses_anonymous_args = 0
 1284              		@ link register save eliminated.
 360:system.c      ****   CyGlobalIntDisable;
 1285              		.loc 1 360 0
 1286              	@ 360 "system.c" 1
 1287 0000 72B6     		CPSID   i
 1288              	@ 0 "" 2
 361:system.c      ****   sys_rt_exec_alarm = 0;
 1289              		.loc 1 361 0
 1290              		.thumb
 1291 0002 0022     		movs	r2, #0
 1292 0004 014B     		ldr	r3, .L133
 1293 0006 1A70     		strb	r2, [r3]
 362:system.c      ****   CyGlobalIntEnable;
 1294              		.loc 1 362 0
 1295              	@ 362 "system.c" 1
 1296 0008 62B6     		CPSIE   i
 1297              	@ 0 "" 2
 1298              		.thumb
 1299 000a 7047     		bx	lr
 1300              	.L134:
 1301              		.align	2
 1302              	.L133:
 1303 000c 00000000 		.word	sys_rt_exec_alarm
 1304              		.cfi_endproc
 1305              	.LFE76:
 1306              		.size	system_clear_exec_alarm, .-system_clear_exec_alarm
 1307              		.section	.text.system_set_exec_alarm_flag,"ax",%progbits
 1308              		.align	2
 1309              		.global	system_set_exec_alarm_flag
 1310              		.thumb
 1311              		.thumb_func
 1312              		.type	system_set_exec_alarm_flag, %function
 1313              	system_set_exec_alarm_flag:
 1314              	.LFB77:
 363:system.c      **** }
 364:system.c      **** 
 365:system.c      **** void system_set_exec_alarm_flag(uint8_t mask) {
 1315              		.loc 1 365 0
 1316              		.cfi_startproc
 1317              		@ args = 0, pretend = 0, frame = 0
 1318              		@ frame_needed = 0, uses_anonymous_args = 0
 1319              		@ link register save eliminated.
 1320              	.LVL136:
 366:system.c      ****   CyGlobalIntDisable;
 1321              		.loc 1 366 0
 1322              	@ 366 "system.c" 1
 1323 0000 72B6     		CPSID   i
 1324              	@ 0 "" 2
 367:system.c      ****   sys_rt_exec_alarm |= (mask);
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 33


 1325              		.loc 1 367 0
 1326              		.thumb
 1327 0002 034B     		ldr	r3, .L136
 1328 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1329 0006 1043     		orrs	r0, r0, r2
 1330              	.LVL137:
 1331 0008 1870     		strb	r0, [r3]
 368:system.c      ****   CyGlobalIntEnable;
 1332              		.loc 1 368 0
 1333              	@ 368 "system.c" 1
 1334 000a 62B6     		CPSIE   i
 1335              	@ 0 "" 2
 1336              		.thumb
 1337 000c 7047     		bx	lr
 1338              	.L137:
 1339 000e 00BF     		.align	2
 1340              	.L136:
 1341 0010 00000000 		.word	sys_rt_exec_alarm
 1342              		.cfi_endproc
 1343              	.LFE77:
 1344              		.size	system_set_exec_alarm_flag, .-system_set_exec_alarm_flag
 1345              		.section	.text.system_clear_exec_alarm_flag,"ax",%progbits
 1346              		.align	2
 1347              		.global	system_clear_exec_alarm_flag
 1348              		.thumb
 1349              		.thumb_func
 1350              		.type	system_clear_exec_alarm_flag, %function
 1351              	system_clear_exec_alarm_flag:
 1352              	.LFB78:
 369:system.c      **** }
 370:system.c      **** 
 371:system.c      **** void system_clear_exec_alarm_flag(uint8_t mask) {
 1353              		.loc 1 371 0
 1354              		.cfi_startproc
 1355              		@ args = 0, pretend = 0, frame = 0
 1356              		@ frame_needed = 0, uses_anonymous_args = 0
 1357              		@ link register save eliminated.
 1358              	.LVL138:
 372:system.c      ****   CyGlobalIntDisable; 
 1359              		.loc 1 372 0
 1360              	@ 372 "system.c" 1
 1361 0000 72B6     		CPSID   i
 1362              	@ 0 "" 2
 373:system.c      ****   sys_rt_exec_alarm &= ~(mask);
 1363              		.loc 1 373 0
 1364              		.thumb
 1365 0002 034A     		ldr	r2, .L139
 1366 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1367 0006 23EA0000 		bic	r0, r3, r0
 1368              	.LVL139:
 1369 000a 1070     		strb	r0, [r2]
 374:system.c      ****   CyGlobalIntEnable;
 1370              		.loc 1 374 0
 1371              	@ 374 "system.c" 1
 1372 000c 62B6     		CPSIE   i
 1373              	@ 0 "" 2
 1374              		.thumb
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 34


 1375 000e 7047     		bx	lr
 1376              	.L140:
 1377              		.align	2
 1378              	.L139:
 1379 0010 00000000 		.word	sys_rt_exec_alarm
 1380              		.cfi_endproc
 1381              	.LFE78:
 1382              		.size	system_clear_exec_alarm_flag, .-system_clear_exec_alarm_flag
 1383              		.section	.text.system_set_exec_motion_override_flag,"ax",%progbits
 1384              		.align	2
 1385              		.global	system_set_exec_motion_override_flag
 1386              		.thumb
 1387              		.thumb_func
 1388              		.type	system_set_exec_motion_override_flag, %function
 1389              	system_set_exec_motion_override_flag:
 1390              	.LFB79:
 375:system.c      **** }
 376:system.c      **** 
 377:system.c      **** void system_set_exec_motion_override_flag(uint8_t mask) {
 1391              		.loc 1 377 0
 1392              		.cfi_startproc
 1393              		@ args = 0, pretend = 0, frame = 0
 1394              		@ frame_needed = 0, uses_anonymous_args = 0
 1395              		@ link register save eliminated.
 1396              	.LVL140:
 378:system.c      ****   CyGlobalIntDisable;
 1397              		.loc 1 378 0
 1398              	@ 378 "system.c" 1
 1399 0000 72B6     		CPSID   i
 1400              	@ 0 "" 2
 379:system.c      ****   sys_rt_exec_motion_override |= (mask);
 1401              		.loc 1 379 0
 1402              		.thumb
 1403 0002 034B     		ldr	r3, .L142
 1404 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1405 0006 1043     		orrs	r0, r0, r2
 1406              	.LVL141:
 1407 0008 1870     		strb	r0, [r3]
 380:system.c      ****   CyGlobalIntEnable;
 1408              		.loc 1 380 0
 1409              	@ 380 "system.c" 1
 1410 000a 62B6     		CPSIE   i
 1411              	@ 0 "" 2
 1412              		.thumb
 1413 000c 7047     		bx	lr
 1414              	.L143:
 1415 000e 00BF     		.align	2
 1416              	.L142:
 1417 0010 00000000 		.word	sys_rt_exec_motion_override
 1418              		.cfi_endproc
 1419              	.LFE79:
 1420              		.size	system_set_exec_motion_override_flag, .-system_set_exec_motion_override_flag
 1421              		.section	.text.system_set_exec_accessory_override_flag,"ax",%progbits
 1422              		.align	2
 1423              		.global	system_set_exec_accessory_override_flag
 1424              		.thumb
 1425              		.thumb_func
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 35


 1426              		.type	system_set_exec_accessory_override_flag, %function
 1427              	system_set_exec_accessory_override_flag:
 1428              	.LFB80:
 381:system.c      **** }
 382:system.c      **** 
 383:system.c      **** void system_set_exec_accessory_override_flag(uint8_t mask) {
 1429              		.loc 1 383 0
 1430              		.cfi_startproc
 1431              		@ args = 0, pretend = 0, frame = 0
 1432              		@ frame_needed = 0, uses_anonymous_args = 0
 1433              		@ link register save eliminated.
 1434              	.LVL142:
 384:system.c      ****   CyGlobalIntDisable;
 1435              		.loc 1 384 0
 1436              	@ 384 "system.c" 1
 1437 0000 72B6     		CPSID   i
 1438              	@ 0 "" 2
 385:system.c      ****   sys_rt_exec_accessory_override |= (mask);
 1439              		.loc 1 385 0
 1440              		.thumb
 1441 0002 034B     		ldr	r3, .L145
 1442 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1443 0006 1043     		orrs	r0, r0, r2
 1444              	.LVL143:
 1445 0008 1870     		strb	r0, [r3]
 386:system.c      ****   CyGlobalIntEnable;
 1446              		.loc 1 386 0
 1447              	@ 386 "system.c" 1
 1448 000a 62B6     		CPSIE   i
 1449              	@ 0 "" 2
 1450              		.thumb
 1451 000c 7047     		bx	lr
 1452              	.L146:
 1453 000e 00BF     		.align	2
 1454              	.L145:
 1455 0010 00000000 		.word	sys_rt_exec_accessory_override
 1456              		.cfi_endproc
 1457              	.LFE80:
 1458              		.size	system_set_exec_accessory_override_flag, .-system_set_exec_accessory_override_flag
 1459              		.section	.text.system_clear_exec_motion_overrides,"ax",%progbits
 1460              		.align	2
 1461              		.global	system_clear_exec_motion_overrides
 1462              		.thumb
 1463              		.thumb_func
 1464              		.type	system_clear_exec_motion_overrides, %function
 1465              	system_clear_exec_motion_overrides:
 1466              	.LFB81:
 387:system.c      **** }
 388:system.c      **** 
 389:system.c      **** void system_clear_exec_motion_overrides() {
 1467              		.loc 1 389 0
 1468              		.cfi_startproc
 1469              		@ args = 0, pretend = 0, frame = 0
 1470              		@ frame_needed = 0, uses_anonymous_args = 0
 1471              		@ link register save eliminated.
 390:system.c      ****   CyGlobalIntDisable;
 1472              		.loc 1 390 0
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 36


 1473              	@ 390 "system.c" 1
 1474 0000 72B6     		CPSID   i
 1475              	@ 0 "" 2
 391:system.c      ****   sys_rt_exec_motion_override = 0;
 1476              		.loc 1 391 0
 1477              		.thumb
 1478 0002 0022     		movs	r2, #0
 1479 0004 014B     		ldr	r3, .L148
 1480 0006 1A70     		strb	r2, [r3]
 392:system.c      ****   CyGlobalIntEnable;
 1481              		.loc 1 392 0
 1482              	@ 392 "system.c" 1
 1483 0008 62B6     		CPSIE   i
 1484              	@ 0 "" 2
 1485              		.thumb
 1486 000a 7047     		bx	lr
 1487              	.L149:
 1488              		.align	2
 1489              	.L148:
 1490 000c 00000000 		.word	sys_rt_exec_motion_override
 1491              		.cfi_endproc
 1492              	.LFE81:
 1493              		.size	system_clear_exec_motion_overrides, .-system_clear_exec_motion_overrides
 1494              		.section	.text.system_clear_exec_accessory_overrides,"ax",%progbits
 1495              		.align	2
 1496              		.global	system_clear_exec_accessory_overrides
 1497              		.thumb
 1498              		.thumb_func
 1499              		.type	system_clear_exec_accessory_overrides, %function
 1500              	system_clear_exec_accessory_overrides:
 1501              	.LFB82:
 393:system.c      **** }
 394:system.c      **** 
 395:system.c      **** void system_clear_exec_accessory_overrides() {
 1502              		.loc 1 395 0
 1503              		.cfi_startproc
 1504              		@ args = 0, pretend = 0, frame = 0
 1505              		@ frame_needed = 0, uses_anonymous_args = 0
 1506              		@ link register save eliminated.
 396:system.c      ****   CyGlobalIntDisable;
 1507              		.loc 1 396 0
 1508              	@ 396 "system.c" 1
 1509 0000 72B6     		CPSID   i
 1510              	@ 0 "" 2
 397:system.c      ****   sys_rt_exec_accessory_override = 0;
 1511              		.loc 1 397 0
 1512              		.thumb
 1513 0002 0022     		movs	r2, #0
 1514 0004 014B     		ldr	r3, .L151
 1515 0006 1A70     		strb	r2, [r3]
 398:system.c      ****   CyGlobalIntEnable;
 1516              		.loc 1 398 0
 1517              	@ 398 "system.c" 1
 1518 0008 62B6     		CPSIE   i
 1519              	@ 0 "" 2
 1520              		.thumb
 1521 000a 7047     		bx	lr
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 37


 1522              	.L152:
 1523              		.align	2
 1524              	.L151:
 1525 000c 00000000 		.word	sys_rt_exec_accessory_override
 1526              		.cfi_endproc
 1527              	.LFE82:
 1528              		.size	system_clear_exec_accessory_overrides, .-system_clear_exec_accessory_overrides
 1529              		.comm	exec_lcd_status,1,1
 1530              		.comm	sys_rt_exec_accessory_override,1,1
 1531              		.comm	sys_rt_exec_motion_override,1,1
 1532              		.comm	sys_rt_exec_alarm,1,1
 1533              		.comm	sys_rt_exec_state,1,1
 1534              		.comm	sys_probe_state,1,1
 1535              		.comm	sys_probe_position,12,4
 1536              		.comm	sys_position,12,4
 1537              		.text
 1538              	.Letext0:
 1539              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 1540              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 1541              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 1542              		.file 5 "settings.h"
 1543              		.file 6 "system.h"
 1544              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 1545              		.file 8 "lcd_report.h"
 1546              		.file 9 "Generated_Source\\PSoC5/Status_Control.h"
 1547              		.file 10 "Generated_Source\\PSoC5/isr_Control.h"
 1548              		.file 11 "report.h"
 1549              		.file 12 "gcode.h"
 1550              		.file 13 "motion_control.h"
 1551              		.file 14 "protocol.h"
 1552              		.file 15 "stepper.h"
 1553              		.file 16 "nuts_bolts.h"
 1554              		.file 17 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9
 1555              		.section	.debug_info,"",%progbits
 1556              	.Ldebug_info0:
 1557 0000 9D0B0000 		.4byte	0xb9d
 1558 0004 0400     		.2byte	0x4
 1559 0006 00000000 		.4byte	.Ldebug_abbrev0
 1560 000a 04       		.byte	0x4
 1561 000b 01       		.uleb128 0x1
 1562 000c EA060000 		.4byte	.LASF122
 1563 0010 01       		.byte	0x1
 1564 0011 14040000 		.4byte	.LASF123
 1565 0015 C6010000 		.4byte	.LASF124
 1566 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1567 001d 00000000 		.4byte	0
 1568 0021 00000000 		.4byte	.Ldebug_line0
 1569 0025 02       		.uleb128 0x2
 1570 0026 01       		.byte	0x1
 1571 0027 06       		.byte	0x6
 1572 0028 F6070000 		.4byte	.LASF0
 1573 002c 03       		.uleb128 0x3
 1574 002d 25060000 		.4byte	.LASF3
 1575 0031 02       		.byte	0x2
 1576 0032 1D       		.byte	0x1d
 1577 0033 37000000 		.4byte	0x37
 1578 0037 02       		.uleb128 0x2
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 38


 1579 0038 01       		.byte	0x1
 1580 0039 08       		.byte	0x8
 1581 003a C5060000 		.4byte	.LASF1
 1582 003e 02       		.uleb128 0x2
 1583 003f 02       		.byte	0x2
 1584 0040 05       		.byte	0x5
 1585 0041 7D050000 		.4byte	.LASF2
 1586 0045 03       		.uleb128 0x3
 1587 0046 E3020000 		.4byte	.LASF4
 1588 004a 02       		.byte	0x2
 1589 004b 2B       		.byte	0x2b
 1590 004c 50000000 		.4byte	0x50
 1591 0050 02       		.uleb128 0x2
 1592 0051 02       		.byte	0x2
 1593 0052 07       		.byte	0x7
 1594 0053 18080000 		.4byte	.LASF5
 1595 0057 03       		.uleb128 0x3
 1596 0058 C8000000 		.4byte	.LASF6
 1597 005c 02       		.byte	0x2
 1598 005d 3F       		.byte	0x3f
 1599 005e 62000000 		.4byte	0x62
 1600 0062 02       		.uleb128 0x2
 1601 0063 04       		.byte	0x4
 1602 0064 05       		.byte	0x5
 1603 0065 91050000 		.4byte	.LASF7
 1604 0069 02       		.uleb128 0x2
 1605 006a 04       		.byte	0x4
 1606 006b 07       		.byte	0x7
 1607 006c 80060000 		.4byte	.LASF8
 1608 0070 02       		.uleb128 0x2
 1609 0071 08       		.byte	0x8
 1610 0072 05       		.byte	0x5
 1611 0073 38040000 		.4byte	.LASF9
 1612 0077 02       		.uleb128 0x2
 1613 0078 08       		.byte	0x8
 1614 0079 07       		.byte	0x7
 1615 007a A7020000 		.4byte	.LASF10
 1616 007e 04       		.uleb128 0x4
 1617 007f 04       		.byte	0x4
 1618 0080 05       		.byte	0x5
 1619 0081 696E7400 		.ascii	"int\000"
 1620 0085 02       		.uleb128 0x2
 1621 0086 04       		.byte	0x4
 1622 0087 07       		.byte	0x7
 1623 0088 8B000000 		.4byte	.LASF11
 1624 008c 03       		.uleb128 0x3
 1625 008d 0C040000 		.4byte	.LASF12
 1626 0091 03       		.byte	0x3
 1627 0092 15       		.byte	0x15
 1628 0093 2C000000 		.4byte	0x2c
 1629 0097 03       		.uleb128 0x3
 1630 0098 17050000 		.4byte	.LASF13
 1631 009c 03       		.byte	0x3
 1632 009d 21       		.byte	0x21
 1633 009e 45000000 		.4byte	0x45
 1634 00a2 03       		.uleb128 0x3
 1635 00a3 A9060000 		.4byte	.LASF14
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 39


 1636 00a7 03       		.byte	0x3
 1637 00a8 2C       		.byte	0x2c
 1638 00a9 57000000 		.4byte	0x57
 1639 00ad 05       		.uleb128 0x5
 1640 00ae 73080000 		.4byte	.LASF15
 1641 00b2 04       		.byte	0x4
 1642 00b3 9201     		.2byte	0x192
 1643 00b5 37000000 		.4byte	0x37
 1644 00b9 02       		.uleb128 0x2
 1645 00ba 04       		.byte	0x4
 1646 00bb 04       		.byte	0x4
 1647 00bc 80020000 		.4byte	.LASF16
 1648 00c0 02       		.uleb128 0x2
 1649 00c1 08       		.byte	0x8
 1650 00c2 04       		.byte	0x4
 1651 00c3 79080000 		.4byte	.LASF17
 1652 00c7 02       		.uleb128 0x2
 1653 00c8 01       		.byte	0x1
 1654 00c9 08       		.byte	0x8
 1655 00ca CC030000 		.4byte	.LASF18
 1656 00ce 05       		.uleb128 0x5
 1657 00cf C2040000 		.4byte	.LASF19
 1658 00d3 04       		.byte	0x4
 1659 00d4 4E02     		.2byte	0x24e
 1660 00d6 DA000000 		.4byte	0xda
 1661 00da 06       		.uleb128 0x6
 1662 00db 04       		.byte	0x4
 1663 00dc E0000000 		.4byte	0xe0
 1664 00e0 07       		.uleb128 0x7
 1665 00e1 02       		.uleb128 0x2
 1666 00e2 04       		.byte	0x4
 1667 00e3 07       		.byte	0x7
 1668 00e4 5E060000 		.4byte	.LASF20
 1669 00e8 06       		.uleb128 0x6
 1670 00e9 04       		.byte	0x4
 1671 00ea C7000000 		.4byte	0xc7
 1672 00ee 08       		.uleb128 0x8
 1673 00ef 8C000000 		.4byte	0x8c
 1674 00f3 02       		.uleb128 0x2
 1675 00f4 08       		.byte	0x8
 1676 00f5 04       		.byte	0x4
 1677 00f6 0B050000 		.4byte	.LASF21
 1678 00fa 09       		.uleb128 0x9
 1679 00fb 5C       		.byte	0x5c
 1680 00fc 05       		.byte	0x5
 1681 00fd 4F       		.byte	0x4f
 1682 00fe E7010000 		.4byte	0x1e7
 1683 0102 0A       		.uleb128 0xa
 1684 0103 86040000 		.4byte	.LASF22
 1685 0107 05       		.byte	0x5
 1686 0108 51       		.byte	0x51
 1687 0109 E7010000 		.4byte	0x1e7
 1688 010d 00       		.byte	0
 1689 010e 0A       		.uleb128 0xa
 1690 010f 20050000 		.4byte	.LASF23
 1691 0113 05       		.byte	0x5
 1692 0114 52       		.byte	0x52
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 40


 1693 0115 E7010000 		.4byte	0x1e7
 1694 0119 0C       		.byte	0xc
 1695 011a 0A       		.uleb128 0xa
 1696 011b 10020000 		.4byte	.LASF24
 1697 011f 05       		.byte	0x5
 1698 0120 53       		.byte	0x53
 1699 0121 E7010000 		.4byte	0x1e7
 1700 0125 18       		.byte	0x18
 1701 0126 0A       		.uleb128 0xa
 1702 0127 C1030000 		.4byte	.LASF25
 1703 012b 05       		.byte	0x5
 1704 012c 54       		.byte	0x54
 1705 012d E7010000 		.4byte	0x1e7
 1706 0131 24       		.byte	0x24
 1707 0132 0A       		.uleb128 0xa
 1708 0133 00000000 		.4byte	.LASF26
 1709 0137 05       		.byte	0x5
 1710 0138 57       		.byte	0x57
 1711 0139 8C000000 		.4byte	0x8c
 1712 013d 30       		.byte	0x30
 1713 013e 0A       		.uleb128 0xa
 1714 013f FA040000 		.4byte	.LASF27
 1715 0143 05       		.byte	0x5
 1716 0144 58       		.byte	0x58
 1717 0145 8C000000 		.4byte	0x8c
 1718 0149 31       		.byte	0x31
 1719 014a 0A       		.uleb128 0xa
 1720 014b F2080000 		.4byte	.LASF28
 1721 014f 05       		.byte	0x5
 1722 0150 59       		.byte	0x59
 1723 0151 8C000000 		.4byte	0x8c
 1724 0155 32       		.byte	0x32
 1725 0156 0A       		.uleb128 0xa
 1726 0157 3C010000 		.4byte	.LASF29
 1727 015b 05       		.byte	0x5
 1728 015c 5A       		.byte	0x5a
 1729 015d 8C000000 		.4byte	0x8c
 1730 0161 33       		.byte	0x33
 1731 0162 0A       		.uleb128 0xa
 1732 0163 78000000 		.4byte	.LASF30
 1733 0167 05       		.byte	0x5
 1734 0168 5B       		.byte	0x5b
 1735 0169 8C000000 		.4byte	0x8c
 1736 016d 34       		.byte	0x34
 1737 016e 0A       		.uleb128 0xa
 1738 016f B8080000 		.4byte	.LASF31
 1739 0173 05       		.byte	0x5
 1740 0174 5C       		.byte	0x5c
 1741 0175 B9000000 		.4byte	0xb9
 1742 0179 38       		.byte	0x38
 1743 017a 0A       		.uleb128 0xa
 1744 017b 53010000 		.4byte	.LASF32
 1745 017f 05       		.byte	0x5
 1746 0180 5D       		.byte	0x5d
 1747 0181 B9000000 		.4byte	0xb9
 1748 0185 3C       		.byte	0x3c
 1749 0186 0A       		.uleb128 0xa
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 41


 1750 0187 D1030000 		.4byte	.LASF33
 1751 018b 05       		.byte	0x5
 1752 018c 5F       		.byte	0x5f
 1753 018d B9000000 		.4byte	0xb9
 1754 0191 40       		.byte	0x40
 1755 0192 0A       		.uleb128 0xa
 1756 0193 3D080000 		.4byte	.LASF34
 1757 0197 05       		.byte	0x5
 1758 0198 60       		.byte	0x60
 1759 0199 B9000000 		.4byte	0xb9
 1760 019d 44       		.byte	0x44
 1761 019e 0A       		.uleb128 0xa
 1762 019f 2E000000 		.4byte	.LASF35
 1763 01a3 05       		.byte	0x5
 1764 01a4 62       		.byte	0x62
 1765 01a5 8C000000 		.4byte	0x8c
 1766 01a9 48       		.byte	0x48
 1767 01aa 0A       		.uleb128 0xa
 1768 01ab 80080000 		.4byte	.LASF36
 1769 01af 05       		.byte	0x5
 1770 01b0 64       		.byte	0x64
 1771 01b1 8C000000 		.4byte	0x8c
 1772 01b5 49       		.byte	0x49
 1773 01b6 0A       		.uleb128 0xa
 1774 01b7 50020000 		.4byte	.LASF37
 1775 01bb 05       		.byte	0x5
 1776 01bc 65       		.byte	0x65
 1777 01bd B9000000 		.4byte	0xb9
 1778 01c1 4C       		.byte	0x4c
 1779 01c2 0A       		.uleb128 0xa
 1780 01c3 1D020000 		.4byte	.LASF38
 1781 01c7 05       		.byte	0x5
 1782 01c8 66       		.byte	0x66
 1783 01c9 B9000000 		.4byte	0xb9
 1784 01cd 50       		.byte	0x50
 1785 01ce 0A       		.uleb128 0xa
 1786 01cf 02080000 		.4byte	.LASF39
 1787 01d3 05       		.byte	0x5
 1788 01d4 67       		.byte	0x67
 1789 01d5 97000000 		.4byte	0x97
 1790 01d9 54       		.byte	0x54
 1791 01da 0A       		.uleb128 0xa
 1792 01db 4C030000 		.4byte	.LASF40
 1793 01df 05       		.byte	0x5
 1794 01e0 68       		.byte	0x68
 1795 01e1 B9000000 		.4byte	0xb9
 1796 01e5 58       		.byte	0x58
 1797 01e6 00       		.byte	0
 1798 01e7 0B       		.uleb128 0xb
 1799 01e8 B9000000 		.4byte	0xb9
 1800 01ec F7010000 		.4byte	0x1f7
 1801 01f0 0C       		.uleb128 0xc
 1802 01f1 E1000000 		.4byte	0xe1
 1803 01f5 02       		.byte	0x2
 1804 01f6 00       		.byte	0
 1805 01f7 03       		.uleb128 0x3
 1806 01f8 45080000 		.4byte	.LASF41
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 42


 1807 01fc 05       		.byte	0x5
 1808 01fd 69       		.byte	0x69
 1809 01fe FA000000 		.4byte	0xfa
 1810 0202 09       		.uleb128 0x9
 1811 0203 14       		.byte	0x14
 1812 0204 06       		.byte	0x6
 1813 0205 80       		.byte	0x80
 1814 0206 B3020000 		.4byte	0x2b3
 1815 020a 0A       		.uleb128 0xa
 1816 020b 9B070000 		.4byte	.LASF42
 1817 020f 06       		.byte	0x6
 1818 0210 81       		.byte	0x81
 1819 0211 8C000000 		.4byte	0x8c
 1820 0215 00       		.byte	0
 1821 0216 0A       		.uleb128 0xa
 1822 0217 46030000 		.4byte	.LASF43
 1823 021b 06       		.byte	0x6
 1824 021c 82       		.byte	0x82
 1825 021d 8C000000 		.4byte	0x8c
 1826 0221 01       		.byte	0x1
 1827 0222 0A       		.uleb128 0xa
 1828 0223 72030000 		.4byte	.LASF44
 1829 0227 06       		.byte	0x6
 1830 0228 83       		.byte	0x83
 1831 0229 8C000000 		.4byte	0x8c
 1832 022d 02       		.byte	0x2
 1833 022e 0A       		.uleb128 0xa
 1834 022f C3050000 		.4byte	.LASF45
 1835 0233 06       		.byte	0x6
 1836 0234 84       		.byte	0x84
 1837 0235 8C000000 		.4byte	0x8c
 1838 0239 03       		.byte	0x3
 1839 023a 0A       		.uleb128 0xa
 1840 023b 45050000 		.4byte	.LASF46
 1841 023f 06       		.byte	0x6
 1842 0240 85       		.byte	0x85
 1843 0241 8C000000 		.4byte	0x8c
 1844 0245 04       		.byte	0x4
 1845 0246 0A       		.uleb128 0xa
 1846 0247 2F060000 		.4byte	.LASF47
 1847 024b 06       		.byte	0x6
 1848 024c 86       		.byte	0x86
 1849 024d 8C000000 		.4byte	0x8c
 1850 0251 05       		.byte	0x5
 1851 0252 0A       		.uleb128 0xa
 1852 0253 CB080000 		.4byte	.LASF48
 1853 0257 06       		.byte	0x6
 1854 0258 87       		.byte	0x87
 1855 0259 8C000000 		.4byte	0x8c
 1856 025d 06       		.byte	0x6
 1857 025e 0A       		.uleb128 0xa
 1858 025f BE020000 		.4byte	.LASF49
 1859 0263 06       		.byte	0x6
 1860 0264 88       		.byte	0x88
 1861 0265 8C000000 		.4byte	0x8c
 1862 0269 07       		.byte	0x7
 1863 026a 0A       		.uleb128 0xa
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 43


 1864 026b 98000000 		.4byte	.LASF50
 1865 026f 06       		.byte	0x6
 1866 0270 89       		.byte	0x89
 1867 0271 8C000000 		.4byte	0x8c
 1868 0275 08       		.byte	0x8
 1869 0276 0A       		.uleb128 0xa
 1870 0277 FA030000 		.4byte	.LASF51
 1871 027b 06       		.byte	0x6
 1872 027c 8A       		.byte	0x8a
 1873 027d 8C000000 		.4byte	0x8c
 1874 0281 09       		.byte	0x9
 1875 0282 0A       		.uleb128 0xa
 1876 0283 09030000 		.4byte	.LASF52
 1877 0287 06       		.byte	0x6
 1878 0288 8B       		.byte	0x8b
 1879 0289 8C000000 		.4byte	0x8c
 1880 028d 0A       		.byte	0xa
 1881 028e 0A       		.uleb128 0xa
 1882 028f E7030000 		.4byte	.LASF53
 1883 0293 06       		.byte	0x6
 1884 0294 8C       		.byte	0x8c
 1885 0295 8C000000 		.4byte	0x8c
 1886 0299 0B       		.byte	0xb
 1887 029a 0A       		.uleb128 0xa
 1888 029b B0050000 		.4byte	.LASF54
 1889 029f 06       		.byte	0x6
 1890 02a0 8D       		.byte	0x8d
 1891 02a1 8C000000 		.4byte	0x8c
 1892 02a5 0C       		.byte	0xc
 1893 02a6 0A       		.uleb128 0xa
 1894 02a7 D9030000 		.4byte	.LASF55
 1895 02ab 06       		.byte	0x6
 1896 02ac 8F       		.byte	0x8f
 1897 02ad B9000000 		.4byte	0xb9
 1898 02b1 10       		.byte	0x10
 1899 02b2 00       		.byte	0
 1900 02b3 03       		.uleb128 0x3
 1901 02b4 A7050000 		.4byte	.LASF56
 1902 02b8 06       		.byte	0x6
 1903 02b9 91       		.byte	0x91
 1904 02ba 02020000 		.4byte	0x202
 1905 02be 0D       		.uleb128 0xd
 1906 02bf 6C000000 		.4byte	.LASF61
 1907 02c3 01       		.byte	0x1
 1908 02c4 17       		.byte	0x17
 1909 02c5 00000000 		.4byte	.LFB63
 1910 02c9 14000000 		.4byte	.LFE63-.LFB63
 1911 02cd 01       		.uleb128 0x1
 1912 02ce 9C       		.byte	0x9c
 1913 02cf F4020000 		.4byte	0x2f4
 1914 02d3 0E       		.uleb128 0xe
 1915 02d4 08000000 		.4byte	.LVL0
 1916 02d8 DE090000 		.4byte	0x9de
 1917 02dc EA020000 		.4byte	0x2ea
 1918 02e0 0F       		.uleb128 0xf
 1919 02e1 01       		.uleb128 0x1
 1920 02e2 50       		.byte	0x50
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 44


 1921 02e3 05       		.uleb128 0x5
 1922 02e4 03       		.byte	0x3
 1923 02e5 00000000 		.4byte	control_isr_handler
 1924 02e9 00       		.byte	0
 1925 02ea 10       		.uleb128 0x10
 1926 02eb 0C000000 		.4byte	.LVL1
 1927 02ef EF090000 		.4byte	0x9ef
 1928 02f3 00       		.byte	0
 1929 02f4 11       		.uleb128 0x11
 1930 02f5 67060000 		.4byte	.LASF57
 1931 02f9 01       		.byte	0x1
 1932 02fa 23       		.byte	0x23
 1933 02fb 8C000000 		.4byte	0x8c
 1934 02ff 00000000 		.4byte	.LFB64
 1935 0303 08000000 		.4byte	.LFE64-.LFB64
 1936 0307 01       		.uleb128 0x1
 1937 0308 9C       		.byte	0x9c
 1938 0309 17030000 		.4byte	0x317
 1939 030d 10       		.uleb128 0x10
 1940 030e 06000000 		.4byte	.LVL2
 1941 0312 F6090000 		.4byte	0x9f6
 1942 0316 00       		.byte	0
 1943 0317 12       		.uleb128 0x12
 1944 0318 A4030000 		.4byte	.LASF58
 1945 031c 01       		.byte	0x1
 1946 031d 32       		.byte	0x32
 1947 031e 00000000 		.4byte	.LFB65
 1948 0322 40000000 		.4byte	.LFE65-.LFB65
 1949 0326 01       		.uleb128 0x1
 1950 0327 9C       		.byte	0x9c
 1951 0328 57030000 		.4byte	0x357
 1952 032c 13       		.uleb128 0x13
 1953 032d 70696E00 		.ascii	"pin\000"
 1954 0331 01       		.byte	0x1
 1955 0332 34       		.byte	0x34
 1956 0333 8C000000 		.4byte	0x8c
 1957 0337 00000000 		.4byte	.LLST0
 1958 033b 10       		.uleb128 0x10
 1959 033c 06000000 		.4byte	.LVL3
 1960 0340 F4020000 		.4byte	0x2f4
 1961 0344 10       		.uleb128 0x10
 1962 0345 12000000 		.4byte	.LVL4
 1963 0349 010A0000 		.4byte	0xa01
 1964 034d 10       		.uleb128 0x10
 1965 034e 3A000000 		.4byte	.LVL7
 1966 0352 0E0A0000 		.4byte	0xa0e
 1967 0356 00       		.byte	0
 1968 0357 14       		.uleb128 0x14
 1969 0358 7D070000 		.4byte	.LASF125
 1970 035c 01       		.byte	0x1
 1971 035d 49       		.byte	0x49
 1972 035e 8C000000 		.4byte	0x8c
 1973 0362 00000000 		.4byte	.LFB66
 1974 0366 04000000 		.4byte	.LFE66-.LFB66
 1975 036a 01       		.uleb128 0x1
 1976 036b 9C       		.byte	0x9c
 1977 036c 12       		.uleb128 0x12
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 45


 1978 036d D3060000 		.4byte	.LASF59
 1979 0371 01       		.byte	0x1
 1980 0372 54       		.byte	0x54
 1981 0373 00000000 		.4byte	.LFB67
 1982 0377 3C000000 		.4byte	.LFE67-.LFB67
 1983 037b 01       		.uleb128 0x1
 1984 037c 9C       		.byte	0x9c
 1985 037d 0E040000 		.4byte	0x40e
 1986 0381 15       		.uleb128 0x15
 1987 0382 78070000 		.4byte	.LASF63
 1988 0386 01       		.byte	0x1
 1989 0387 54       		.byte	0x54
 1990 0388 E8000000 		.4byte	0xe8
 1991 038c 1E000000 		.4byte	.LLST1
 1992 0390 13       		.uleb128 0x13
 1993 0391 6E00     		.ascii	"n\000"
 1994 0393 01       		.byte	0x1
 1995 0394 56       		.byte	0x56
 1996 0395 8C000000 		.4byte	0x8c
 1997 0399 3C000000 		.4byte	.LLST2
 1998 039d 16       		.uleb128 0x16
 1999 039e 24000000 		.4byte	.LBB2
 2000 03a2 0E000000 		.4byte	.LBE2-.LBB2
 2001 03a6 DE030000 		.4byte	0x3de
 2002 03aa 17       		.uleb128 0x17
 2003 03ab D0070000 		.4byte	.LASF60
 2004 03af 01       		.byte	0x1
 2005 03b0 5D       		.byte	0x5d
 2006 03b1 8C000000 		.4byte	0x8c
 2007 03b5 66000000 		.4byte	.LLST3
 2008 03b9 0E       		.uleb128 0xe
 2009 03ba 2A000000 		.4byte	.LVL13
 2010 03be 150A0000 		.4byte	0xa15
 2011 03c2 CD030000 		.4byte	0x3cd
 2012 03c6 0F       		.uleb128 0xf
 2013 03c7 01       		.uleb128 0x1
 2014 03c8 50       		.byte	0x50
 2015 03c9 02       		.uleb128 0x2
 2016 03ca 75       		.byte	0x75
 2017 03cb 00       		.sleb128 0
 2018 03cc 00       		.byte	0
 2019 03cd 18       		.uleb128 0x18
 2020 03ce 32000000 		.4byte	.LVL15
 2021 03d2 2A0A0000 		.4byte	0xa2a
 2022 03d6 0F       		.uleb128 0xf
 2023 03d7 01       		.uleb128 0x1
 2024 03d8 50       		.byte	0x50
 2025 03d9 02       		.uleb128 0x2
 2026 03da 75       		.byte	0x75
 2027 03db 00       		.sleb128 0
 2028 03dc 00       		.byte	0
 2029 03dd 00       		.byte	0
 2030 03de 0E       		.uleb128 0xe
 2031 03df 10000000 		.4byte	.LVL11
 2032 03e3 400A0000 		.4byte	0xa40
 2033 03e7 F8030000 		.4byte	0x3f8
 2034 03eb 0F       		.uleb128 0xf
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 46


 2035 03ec 01       		.uleb128 0x1
 2036 03ed 51       		.byte	0x51
 2037 03ee 02       		.uleb128 0x2
 2038 03ef 75       		.byte	0x75
 2039 03f0 00       		.sleb128 0
 2040 03f1 0F       		.uleb128 0xf
 2041 03f2 01       		.uleb128 0x1
 2042 03f3 50       		.byte	0x50
 2043 03f4 02       		.uleb128 0x2
 2044 03f5 74       		.byte	0x74
 2045 03f6 00       		.sleb128 0
 2046 03f7 00       		.byte	0
 2047 03f8 18       		.uleb128 0x18
 2048 03f9 1E000000 		.4byte	.LVL12
 2049 03fd 2A0A0000 		.4byte	0xa2a
 2050 0401 0F       		.uleb128 0xf
 2051 0402 01       		.uleb128 0x1
 2052 0403 51       		.byte	0x51
 2053 0404 01       		.uleb128 0x1
 2054 0405 37       		.byte	0x37
 2055 0406 0F       		.uleb128 0xf
 2056 0407 01       		.uleb128 0x1
 2057 0408 50       		.byte	0x50
 2058 0409 02       		.uleb128 0x2
 2059 040a 75       		.byte	0x75
 2060 040b 00       		.sleb128 0
 2061 040c 00       		.byte	0
 2062 040d 00       		.byte	0
 2063 040e 19       		.uleb128 0x19
 2064 040f 92060000 		.4byte	.LASF62
 2065 0413 01       		.byte	0x1
 2066 0414 0901     		.2byte	0x109
 2067 0416 00000000 		.4byte	.LFB69
 2068 041a 14000000 		.4byte	.LFE69-.LFB69
 2069 041e 01       		.uleb128 0x1
 2070 041f 9C       		.byte	0x9c
 2071 0420 2E040000 		.4byte	0x42e
 2072 0424 10       		.uleb128 0x10
 2073 0425 06000000 		.4byte	.LVL18
 2074 0429 5A0A0000 		.4byte	0xa5a
 2075 042d 00       		.byte	0
 2076 042e 1A       		.uleb128 0x1a
 2077 042f 2E020000 		.4byte	.LASF67
 2078 0433 01       		.byte	0x1
 2079 0434 1501     		.2byte	0x115
 2080 0436 B9000000 		.4byte	0xb9
 2081 043a 00000000 		.4byte	.LFB70
 2082 043e 1C000000 		.4byte	.LFE70-.LFB70
 2083 0442 01       		.uleb128 0x1
 2084 0443 9C       		.byte	0x9c
 2085 0444 77040000 		.4byte	0x477
 2086 0448 1B       		.uleb128 0x1b
 2087 0449 7A020000 		.4byte	.LASF64
 2088 044d 01       		.byte	0x1
 2089 044e 1501     		.2byte	0x115
 2090 0450 77040000 		.4byte	0x477
 2091 0454 79000000 		.4byte	.LLST4
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 47


 2092 0458 1C       		.uleb128 0x1c
 2093 0459 69647800 		.ascii	"idx\000"
 2094 045d 01       		.byte	0x1
 2095 045e 1501     		.2byte	0x115
 2096 0460 8C000000 		.4byte	0x8c
 2097 0464 9A000000 		.4byte	.LLST5
 2098 0468 1D       		.uleb128 0x1d
 2099 0469 706F7300 		.ascii	"pos\000"
 2100 046d 01       		.byte	0x1
 2101 046e 1701     		.2byte	0x117
 2102 0470 B9000000 		.4byte	0xb9
 2103 0474 01       		.uleb128 0x1
 2104 0475 50       		.byte	0x50
 2105 0476 00       		.byte	0
 2106 0477 06       		.uleb128 0x6
 2107 0478 04       		.byte	0x4
 2108 0479 A2000000 		.4byte	0xa2
 2109 047d 1E       		.uleb128 0x1e
 2110 047e F1000000 		.4byte	.LASF65
 2111 0482 01       		.byte	0x1
 2112 0483 2701     		.2byte	0x127
 2113 0485 00000000 		.4byte	.LFB71
 2114 0489 20000000 		.4byte	.LFE71-.LFB71
 2115 048d 01       		.uleb128 0x1
 2116 048e 9C       		.byte	0x9c
 2117 048f DA040000 		.4byte	0x4da
 2118 0493 1B       		.uleb128 0x1b
 2119 0494 E9080000 		.4byte	.LASF66
 2120 0498 01       		.byte	0x1
 2121 0499 2701     		.2byte	0x127
 2122 049b DA040000 		.4byte	0x4da
 2123 049f BB000000 		.4byte	.LLST6
 2124 04a3 1B       		.uleb128 0x1b
 2125 04a4 7A020000 		.4byte	.LASF64
 2126 04a8 01       		.byte	0x1
 2127 04a9 2701     		.2byte	0x127
 2128 04ab 77040000 		.4byte	0x477
 2129 04af D9000000 		.4byte	.LLST7
 2130 04b3 1F       		.uleb128 0x1f
 2131 04b4 69647800 		.ascii	"idx\000"
 2132 04b8 01       		.byte	0x1
 2133 04b9 2901     		.2byte	0x129
 2134 04bb 8C000000 		.4byte	0x8c
 2135 04bf F7000000 		.4byte	.LLST8
 2136 04c3 18       		.uleb128 0x18
 2137 04c4 12000000 		.4byte	.LVL26
 2138 04c8 2E040000 		.4byte	0x42e
 2139 04cc 0F       		.uleb128 0xf
 2140 04cd 01       		.uleb128 0x1
 2141 04ce 51       		.byte	0x51
 2142 04cf 02       		.uleb128 0x2
 2143 04d0 74       		.byte	0x74
 2144 04d1 00       		.sleb128 0
 2145 04d2 0F       		.uleb128 0xf
 2146 04d3 01       		.uleb128 0x1
 2147 04d4 50       		.byte	0x50
 2148 04d5 02       		.uleb128 0x2
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 48


 2149 04d6 75       		.byte	0x75
 2150 04d7 00       		.sleb128 0
 2151 04d8 00       		.byte	0
 2152 04d9 00       		.byte	0
 2153 04da 06       		.uleb128 0x6
 2154 04db 04       		.byte	0x4
 2155 04dc B9000000 		.4byte	0xb9
 2156 04e0 1A       		.uleb128 0x1a
 2157 04e1 EE020000 		.4byte	.LASF68
 2158 04e5 01       		.byte	0x1
 2159 04e6 3F01     		.2byte	0x13f
 2160 04e8 8C000000 		.4byte	0x8c
 2161 04ec 00000000 		.4byte	.LFB72
 2162 04f0 40000000 		.4byte	.LFE72-.LFB72
 2163 04f4 01       		.uleb128 0x1
 2164 04f5 9C       		.byte	0x9c
 2165 04f6 1B050000 		.4byte	0x51b
 2166 04fa 1B       		.uleb128 0x1b
 2167 04fb 5B030000 		.4byte	.LASF69
 2168 04ff 01       		.byte	0x1
 2169 0500 3F01     		.2byte	0x13f
 2170 0502 DA040000 		.4byte	0x4da
 2171 0506 21010000 		.4byte	.LLST9
 2172 050a 1F       		.uleb128 0x1f
 2173 050b 69647800 		.ascii	"idx\000"
 2174 050f 01       		.byte	0x1
 2175 0510 4101     		.2byte	0x141
 2176 0512 8C000000 		.4byte	0x8c
 2177 0516 4D010000 		.4byte	.LLST10
 2178 051a 00       		.byte	0
 2179 051b 1E       		.uleb128 0x1e
 2180 051c 1D040000 		.4byte	.LASF70
 2181 0520 01       		.byte	0x1
 2182 0521 5501     		.2byte	0x155
 2183 0523 00000000 		.4byte	.LFB73
 2184 0527 14000000 		.4byte	.LFE73-.LFB73
 2185 052b 01       		.uleb128 0x1
 2186 052c 9C       		.byte	0x9c
 2187 052d 42050000 		.4byte	0x542
 2188 0531 1B       		.uleb128 0x1b
 2189 0532 CF040000 		.4byte	.LASF71
 2190 0536 01       		.byte	0x1
 2191 0537 5501     		.2byte	0x155
 2192 0539 8C000000 		.4byte	0x8c
 2193 053d 77010000 		.4byte	.LLST11
 2194 0541 00       		.byte	0
 2195 0542 20       		.uleb128 0x20
 2196 0543 E2070000 		.4byte	.LASF72
 2197 0547 01       		.byte	0x1
 2198 0548 6C       		.byte	0x6c
 2199 0549 8C000000 		.4byte	0x8c
 2200 054d 00000000 		.4byte	.LFB68
 2201 0551 00040000 		.4byte	.LFE68-.LFB68
 2202 0555 01       		.uleb128 0x1
 2203 0556 9C       		.byte	0x9c
 2204 0557 01080000 		.4byte	0x801
 2205 055b 15       		.uleb128 0x15
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 49


 2206 055c 78070000 		.4byte	.LASF63
 2207 0560 01       		.byte	0x1
 2208 0561 6C       		.byte	0x6c
 2209 0562 E8000000 		.4byte	0xe8
 2210 0566 98010000 		.4byte	.LLST12
 2211 056a 21       		.uleb128 0x21
 2212 056b DC080000 		.4byte	.LASF73
 2213 056f 01       		.byte	0x1
 2214 0570 6E       		.byte	0x6e
 2215 0571 8C000000 		.4byte	0x8c
 2216 0575 02       		.uleb128 0x2
 2217 0576 91       		.byte	0x91
 2218 0577 6F       		.sleb128 -17
 2219 0578 17       		.uleb128 0x17
 2220 0579 23000000 		.4byte	.LASF74
 2221 057d 01       		.byte	0x1
 2222 057e 6F       		.byte	0x6f
 2223 057f 8C000000 		.4byte	0x8c
 2224 0583 8A030000 		.4byte	.LLST13
 2225 0587 21       		.uleb128 0x21
 2226 0588 87050000 		.4byte	.LASF75
 2227 058c 01       		.byte	0x1
 2228 058d 70       		.byte	0x70
 2229 058e B9000000 		.4byte	0xb9
 2230 0592 02       		.uleb128 0x2
 2231 0593 91       		.byte	0x91
 2232 0594 68       		.sleb128 -24
 2233 0595 21       		.uleb128 0x21
 2234 0596 1A030000 		.4byte	.LASF76
 2235 059a 01       		.byte	0x1
 2236 059b 70       		.byte	0x70
 2237 059c B9000000 		.4byte	0xb9
 2238 05a0 02       		.uleb128 0x2
 2239 05a1 91       		.byte	0x91
 2240 05a2 64       		.sleb128 -28
 2241 05a3 10       		.uleb128 0x10
 2242 05a4 2E000000 		.4byte	.LVL43
 2243 05a8 670A0000 		.4byte	0xa67
 2244 05ac 0E       		.uleb128 0xe
 2245 05ad 4C000000 		.4byte	.LVL46
 2246 05b1 150A0000 		.4byte	0xa15
 2247 05b5 C0050000 		.4byte	0x5c0
 2248 05b9 0F       		.uleb128 0xf
 2249 05ba 01       		.uleb128 0x1
 2250 05bb 50       		.byte	0x50
 2251 05bc 02       		.uleb128 0x2
 2252 05bd 74       		.byte	0x74
 2253 05be 00       		.sleb128 0
 2254 05bf 00       		.byte	0
 2255 05c0 10       		.uleb128 0x10
 2256 05c1 80000000 		.4byte	.LVL48
 2257 05c5 740A0000 		.4byte	0xa74
 2258 05c9 10       		.uleb128 0x10
 2259 05ca 86000000 		.4byte	.LVL50
 2260 05ce 810A0000 		.4byte	0xa81
 2261 05d2 10       		.uleb128 0x10
 2262 05d3 96000000 		.4byte	.LVL52
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 50


 2263 05d7 010A0000 		.4byte	0xa01
 2264 05db 0E       		.uleb128 0xe
 2265 05dc 9C000000 		.4byte	.LVL53
 2266 05e0 8E0A0000 		.4byte	0xa8e
 2267 05e4 EE050000 		.4byte	0x5ee
 2268 05e8 0F       		.uleb128 0xf
 2269 05e9 01       		.uleb128 0x1
 2270 05ea 50       		.byte	0x50
 2271 05eb 01       		.uleb128 0x1
 2272 05ec 35       		.byte	0x35
 2273 05ed 00       		.byte	0
 2274 05ee 0E       		.uleb128 0xe
 2275 05ef B2000000 		.4byte	.LVL56
 2276 05f3 8E0A0000 		.4byte	0xa8e
 2277 05f7 01060000 		.4byte	0x601
 2278 05fb 0F       		.uleb128 0xf
 2279 05fc 01       		.uleb128 0x1
 2280 05fd 50       		.byte	0x50
 2281 05fe 01       		.uleb128 0x1
 2282 05ff 34       		.byte	0x34
 2283 0600 00       		.byte	0
 2284 0601 10       		.uleb128 0x10
 2285 0602 C2000000 		.4byte	.LVL58
 2286 0606 57030000 		.4byte	0x357
 2287 060a 0E       		.uleb128 0xe
 2288 060b D0000000 		.4byte	.LVL59
 2289 060f 8E0A0000 		.4byte	0xa8e
 2290 0613 1D060000 		.4byte	0x61d
 2291 0617 0F       		.uleb128 0xf
 2292 0618 01       		.uleb128 0x1
 2293 0619 50       		.byte	0x50
 2294 061a 01       		.uleb128 0x1
 2295 061b 33       		.byte	0x33
 2296 061c 00       		.byte	0
 2297 061d 10       		.uleb128 0x10
 2298 061e 5E010000 		.4byte	.LVL61
 2299 0622 9F0A0000 		.4byte	0xa9f
 2300 0626 10       		.uleb128 0x10
 2301 0627 74010000 		.4byte	.LVL63
 2302 062b 57030000 		.4byte	0x357
 2303 062f 0E       		.uleb128 0xe
 2304 0630 8A010000 		.4byte	.LVL64
 2305 0634 AC0A0000 		.4byte	0xaac
 2306 0638 43060000 		.4byte	0x643
 2307 063c 0F       		.uleb128 0xf
 2308 063d 01       		.uleb128 0x1
 2309 063e 50       		.byte	0x50
 2310 063f 02       		.uleb128 0x2
 2311 0640 76       		.byte	0x76
 2312 0641 00       		.sleb128 0
 2313 0642 00       		.byte	0
 2314 0643 0E       		.uleb128 0xe
 2315 0644 A8010000 		.4byte	.LVL65
 2316 0648 AC0A0000 		.4byte	0xaac
 2317 064c 56060000 		.4byte	0x656
 2318 0650 0F       		.uleb128 0xf
 2319 0651 01       		.uleb128 0x1
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 51


 2320 0652 50       		.byte	0x50
 2321 0653 01       		.uleb128 0x1
 2322 0654 31       		.byte	0x31
 2323 0655 00       		.byte	0
 2324 0656 0E       		.uleb128 0xe
 2325 0657 B0010000 		.4byte	.LVL66
 2326 065b AC0A0000 		.4byte	0xaac
 2327 065f 69060000 		.4byte	0x669
 2328 0663 0F       		.uleb128 0xf
 2329 0664 01       		.uleb128 0x1
 2330 0665 50       		.byte	0x50
 2331 0666 01       		.uleb128 0x1
 2332 0667 32       		.byte	0x32
 2333 0668 00       		.byte	0
 2334 0669 0E       		.uleb128 0xe
 2335 066a B8010000 		.4byte	.LVL67
 2336 066e AC0A0000 		.4byte	0xaac
 2337 0672 7C060000 		.4byte	0x67c
 2338 0676 0F       		.uleb128 0xf
 2339 0677 01       		.uleb128 0x1
 2340 0678 50       		.byte	0x50
 2341 0679 01       		.uleb128 0x1
 2342 067a 34       		.byte	0x34
 2343 067b 00       		.byte	0
 2344 067c 10       		.uleb128 0x10
 2345 067d CA010000 		.4byte	.LVL68
 2346 0681 BD0A0000 		.4byte	0xabd
 2347 0685 0E       		.uleb128 0xe
 2348 0686 D8010000 		.4byte	.LVL69
 2349 068a 6C030000 		.4byte	0x36c
 2350 068e 99060000 		.4byte	0x699
 2351 0692 0F       		.uleb128 0xf
 2352 0693 01       		.uleb128 0x1
 2353 0694 50       		.byte	0x50
 2354 0695 02       		.uleb128 0x2
 2355 0696 74       		.byte	0x74
 2356 0697 00       		.sleb128 0
 2357 0698 00       		.byte	0
 2358 0699 0E       		.uleb128 0xe
 2359 069a F8010000 		.4byte	.LVL72
 2360 069e 1B050000 		.4byte	0x51b
 2361 06a2 AD060000 		.4byte	0x6ad
 2362 06a6 0F       		.uleb128 0xf
 2363 06a7 01       		.uleb128 0x1
 2364 06a8 50       		.byte	0x50
 2365 06a9 02       		.uleb128 0x2
 2366 06aa 09       		.byte	0x9
 2367 06ab 80       		.byte	0x80
 2368 06ac 00       		.byte	0
 2369 06ad 0E       		.uleb128 0xe
 2370 06ae 0C020000 		.4byte	.LVL75
 2371 06b2 CA0A0000 		.4byte	0xaca
 2372 06b6 C1060000 		.4byte	0x6c1
 2373 06ba 0F       		.uleb128 0xf
 2374 06bb 01       		.uleb128 0x1
 2375 06bc 50       		.byte	0x50
 2376 06bd 02       		.uleb128 0x2
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 52


 2377 06be 74       		.byte	0x74
 2378 06bf 00       		.sleb128 0
 2379 06c0 00       		.byte	0
 2380 06c1 0E       		.uleb128 0xe
 2381 06c2 12020000 		.4byte	.LVL76
 2382 06c6 DF0A0000 		.4byte	0xadf
 2383 06ca D5060000 		.4byte	0x6d5
 2384 06ce 0F       		.uleb128 0xf
 2385 06cf 01       		.uleb128 0x1
 2386 06d0 50       		.byte	0x50
 2387 06d1 02       		.uleb128 0x2
 2388 06d2 74       		.byte	0x74
 2389 06d3 00       		.sleb128 0
 2390 06d4 00       		.byte	0
 2391 06d5 0E       		.uleb128 0xe
 2392 06d6 40020000 		.4byte	.LVL79
 2393 06da F00A0000 		.4byte	0xaf0
 2394 06de E9060000 		.4byte	0x6e9
 2395 06e2 0F       		.uleb128 0xf
 2396 06e3 01       		.uleb128 0x1
 2397 06e4 50       		.byte	0x50
 2398 06e5 02       		.uleb128 0x2
 2399 06e6 74       		.byte	0x74
 2400 06e7 00       		.sleb128 0
 2401 06e8 00       		.byte	0
 2402 06e9 0E       		.uleb128 0xe
 2403 06ea 7C020000 		.4byte	.LVL82
 2404 06ee 010B0000 		.4byte	0xb01
 2405 06f2 FC060000 		.4byte	0x6fc
 2406 06f6 0F       		.uleb128 0xf
 2407 06f7 01       		.uleb128 0x1
 2408 06f8 50       		.byte	0x50
 2409 06f9 01       		.uleb128 0x1
 2410 06fa 31       		.byte	0x31
 2411 06fb 00       		.byte	0
 2412 06fc 0E       		.uleb128 0xe
 2413 06fd 84020000 		.4byte	.LVL85
 2414 0701 010B0000 		.4byte	0xb01
 2415 0705 0F070000 		.4byte	0x70f
 2416 0709 0F       		.uleb128 0xf
 2417 070a 01       		.uleb128 0x1
 2418 070b 50       		.byte	0x50
 2419 070c 01       		.uleb128 0x1
 2420 070d 32       		.byte	0x32
 2421 070e 00       		.byte	0
 2422 070f 0E       		.uleb128 0xe
 2423 0710 8C020000 		.4byte	.LVL88
 2424 0714 010B0000 		.4byte	0xb01
 2425 0718 23070000 		.4byte	0x723
 2426 071c 0F       		.uleb128 0xf
 2427 071d 01       		.uleb128 0x1
 2428 071e 50       		.byte	0x50
 2429 071f 02       		.uleb128 0x2
 2430 0720 09       		.byte	0x9
 2431 0721 FF       		.byte	0xff
 2432 0722 00       		.byte	0
 2433 0723 0E       		.uleb128 0xe
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 53


 2434 0724 92020000 		.4byte	.LVL89
 2435 0728 8E0A0000 		.4byte	0xa8e
 2436 072c 36070000 		.4byte	0x736
 2437 0730 0F       		.uleb128 0xf
 2438 0731 01       		.uleb128 0x1
 2439 0732 50       		.byte	0x50
 2440 0733 01       		.uleb128 0x1
 2441 0734 39       		.byte	0x39
 2442 0735 00       		.byte	0
 2443 0736 10       		.uleb128 0x10
 2444 0737 96020000 		.4byte	.LVL90
 2445 073b 010A0000 		.4byte	0xa01
 2446 073f 0E       		.uleb128 0xe
 2447 0740 AE020000 		.4byte	.LVL93
 2448 0744 400A0000 		.4byte	0xa40
 2449 0748 59070000 		.4byte	0x759
 2450 074c 0F       		.uleb128 0xf
 2451 074d 01       		.uleb128 0x1
 2452 074e 51       		.byte	0x51
 2453 074f 02       		.uleb128 0x2
 2454 0750 74       		.byte	0x74
 2455 0751 00       		.sleb128 0
 2456 0752 0F       		.uleb128 0xf
 2457 0753 01       		.uleb128 0x1
 2458 0754 50       		.byte	0x50
 2459 0755 02       		.uleb128 0x2
 2460 0756 75       		.byte	0x75
 2461 0757 00       		.sleb128 0
 2462 0758 00       		.byte	0
 2463 0759 0E       		.uleb128 0xe
 2464 075a B6020000 		.4byte	.LVL94
 2465 075e 120B0000 		.4byte	0xb12
 2466 0762 6C070000 		.4byte	0x76c
 2467 0766 0F       		.uleb128 0xf
 2468 0767 01       		.uleb128 0x1
 2469 0768 50       		.byte	0x50
 2470 0769 01       		.uleb128 0x1
 2471 076a 37       		.byte	0x37
 2472 076b 00       		.byte	0
 2473 076c 0E       		.uleb128 0xe
 2474 076d C0020000 		.4byte	.LVL95
 2475 0771 230B0000 		.4byte	0xb23
 2476 0775 86070000 		.4byte	0x786
 2477 0779 0F       		.uleb128 0xf
 2478 077a 01       		.uleb128 0x1
 2479 077b 51       		.byte	0x51
 2480 077c 02       		.uleb128 0x2
 2481 077d 74       		.byte	0x74
 2482 077e 00       		.sleb128 0
 2483 077f 0F       		.uleb128 0xf
 2484 0780 01       		.uleb128 0x1
 2485 0781 50       		.byte	0x50
 2486 0782 02       		.uleb128 0x2
 2487 0783 75       		.byte	0x75
 2488 0784 00       		.sleb128 0
 2489 0785 00       		.byte	0
 2490 0786 0E       		.uleb128 0xe
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 54


 2491 0787 F2020000 		.4byte	.LVL104
 2492 078b 390B0000 		.4byte	0xb39
 2493 078f A6070000 		.4byte	0x7a6
 2494 0793 0F       		.uleb128 0xf
 2495 0794 01       		.uleb128 0x1
 2496 0795 52       		.byte	0x52
 2497 0796 02       		.uleb128 0x2
 2498 0797 91       		.byte	0x91
 2499 0798 68       		.sleb128 -24
 2500 0799 0F       		.uleb128 0xf
 2501 079a 01       		.uleb128 0x1
 2502 079b 51       		.byte	0x51
 2503 079c 02       		.uleb128 0x2
 2504 079d 91       		.byte	0x91
 2505 079e 6F       		.sleb128 -17
 2506 079f 0F       		.uleb128 0xf
 2507 07a0 01       		.uleb128 0x1
 2508 07a1 50       		.byte	0x50
 2509 07a2 02       		.uleb128 0x2
 2510 07a3 74       		.byte	0x74
 2511 07a4 00       		.sleb128 0
 2512 07a5 00       		.byte	0
 2513 07a6 0E       		.uleb128 0xe
 2514 07a7 26030000 		.4byte	.LVL105
 2515 07ab 150A0000 		.4byte	0xa15
 2516 07af BA070000 		.4byte	0x7ba
 2517 07b3 0F       		.uleb128 0xf
 2518 07b4 01       		.uleb128 0x1
 2519 07b5 50       		.byte	0x50
 2520 07b6 02       		.uleb128 0x2
 2521 07b7 74       		.byte	0x74
 2522 07b8 00       		.sleb128 0
 2523 07b9 00       		.byte	0
 2524 07ba 10       		.uleb128 0x10
 2525 07bb 36030000 		.4byte	.LVL108
 2526 07bf 5E0B0000 		.4byte	0xb5e
 2527 07c3 0E       		.uleb128 0xe
 2528 07c4 42030000 		.4byte	.LVL110
 2529 07c8 740B0000 		.4byte	0xb74
 2530 07cc D7070000 		.4byte	0x7d7
 2531 07d0 0F       		.uleb128 0xf
 2532 07d1 01       		.uleb128 0x1
 2533 07d2 51       		.byte	0x51
 2534 07d3 02       		.uleb128 0x2
 2535 07d4 74       		.byte	0x74
 2536 07d5 00       		.sleb128 0
 2537 07d6 00       		.byte	0
 2538 07d7 0E       		.uleb128 0xe
 2539 07d8 52030000 		.4byte	.LVL112
 2540 07dc 390B0000 		.4byte	0xb39
 2541 07e0 F7070000 		.4byte	0x7f7
 2542 07e4 0F       		.uleb128 0xf
 2543 07e5 01       		.uleb128 0x1
 2544 07e6 52       		.byte	0x52
 2545 07e7 02       		.uleb128 0x2
 2546 07e8 91       		.byte	0x91
 2547 07e9 64       		.sleb128 -28
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 55


 2548 07ea 0F       		.uleb128 0xf
 2549 07eb 01       		.uleb128 0x1
 2550 07ec 51       		.byte	0x51
 2551 07ed 02       		.uleb128 0x2
 2552 07ee 91       		.byte	0x91
 2553 07ef 6F       		.sleb128 -17
 2554 07f0 0F       		.uleb128 0xf
 2555 07f1 01       		.uleb128 0x1
 2556 07f2 50       		.byte	0x50
 2557 07f3 02       		.uleb128 0x2
 2558 07f4 74       		.byte	0x74
 2559 07f5 00       		.sleb128 0
 2560 07f6 00       		.byte	0
 2561 07f7 10       		.uleb128 0x10
 2562 07f8 7C030000 		.4byte	.LVL116
 2563 07fc 8A0B0000 		.4byte	0xb8a
 2564 0800 00       		.byte	0
 2565 0801 1E       		.uleb128 0x1e
 2566 0802 08060000 		.4byte	.LASF77
 2567 0806 01       		.byte	0x1
 2568 0807 5B01     		.2byte	0x15b
 2569 0809 00000000 		.4byte	.LFB74
 2570 080d 14000000 		.4byte	.LFE74-.LFB74
 2571 0811 01       		.uleb128 0x1
 2572 0812 9C       		.byte	0x9c
 2573 0813 28080000 		.4byte	0x828
 2574 0817 1B       		.uleb128 0x1b
 2575 0818 CF040000 		.4byte	.LASF71
 2576 081c 01       		.byte	0x1
 2577 081d 5B01     		.2byte	0x15b
 2578 081f 8C000000 		.4byte	0x8c
 2579 0823 46040000 		.4byte	.LLST14
 2580 0827 00       		.byte	0
 2581 0828 1E       		.uleb128 0x1e
 2582 0829 61010000 		.4byte	.LASF78
 2583 082d 01       		.byte	0x1
 2584 082e 6101     		.2byte	0x161
 2585 0830 00000000 		.4byte	.LFB75
 2586 0834 10000000 		.4byte	.LFE75-.LFB75
 2587 0838 01       		.uleb128 0x1
 2588 0839 9C       		.byte	0x9c
 2589 083a 4D080000 		.4byte	0x84d
 2590 083e 22       		.uleb128 0x22
 2591 083f 13000000 		.4byte	.LASF79
 2592 0843 01       		.byte	0x1
 2593 0844 6101     		.2byte	0x161
 2594 0846 8C000000 		.4byte	0x8c
 2595 084a 01       		.uleb128 0x1
 2596 084b 50       		.byte	0x50
 2597 084c 00       		.byte	0
 2598 084d 23       		.uleb128 0x23
 2599 084e 8C030000 		.4byte	.LASF84
 2600 0852 01       		.byte	0x1
 2601 0853 6701     		.2byte	0x167
 2602 0855 00000000 		.4byte	.LFB76
 2603 0859 10000000 		.4byte	.LFE76-.LFB76
 2604 085d 01       		.uleb128 0x1
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 56


 2605 085e 9C       		.byte	0x9c
 2606 085f 1E       		.uleb128 0x1e
 2607 0860 62050000 		.4byte	.LASF80
 2608 0864 01       		.byte	0x1
 2609 0865 6D01     		.2byte	0x16d
 2610 0867 00000000 		.4byte	.LFB77
 2611 086b 14000000 		.4byte	.LFE77-.LFB77
 2612 086f 01       		.uleb128 0x1
 2613 0870 9C       		.byte	0x9c
 2614 0871 86080000 		.4byte	0x886
 2615 0875 1B       		.uleb128 0x1b
 2616 0876 CF040000 		.4byte	.LASF71
 2617 087a 01       		.byte	0x1
 2618 087b 6D01     		.2byte	0x16d
 2619 087d 8C000000 		.4byte	0x8c
 2620 0881 67040000 		.4byte	.LLST15
 2621 0885 00       		.byte	0
 2622 0886 1E       		.uleb128 0x1e
 2623 0887 B3070000 		.4byte	.LASF81
 2624 088b 01       		.byte	0x1
 2625 088c 7301     		.2byte	0x173
 2626 088e 00000000 		.4byte	.LFB78
 2627 0892 14000000 		.4byte	.LFE78-.LFB78
 2628 0896 01       		.uleb128 0x1
 2629 0897 9C       		.byte	0x9c
 2630 0898 AD080000 		.4byte	0x8ad
 2631 089c 1B       		.uleb128 0x1b
 2632 089d CF040000 		.4byte	.LASF71
 2633 08a1 01       		.byte	0x1
 2634 08a2 7301     		.2byte	0x173
 2635 08a4 8C000000 		.4byte	0x8c
 2636 08a8 88040000 		.4byte	.LLST16
 2637 08ac 00       		.byte	0
 2638 08ad 1E       		.uleb128 0x1e
 2639 08ae A3000000 		.4byte	.LASF82
 2640 08b2 01       		.byte	0x1
 2641 08b3 7901     		.2byte	0x179
 2642 08b5 00000000 		.4byte	.LFB79
 2643 08b9 14000000 		.4byte	.LFE79-.LFB79
 2644 08bd 01       		.uleb128 0x1
 2645 08be 9C       		.byte	0x9c
 2646 08bf D4080000 		.4byte	0x8d4
 2647 08c3 1B       		.uleb128 0x1b
 2648 08c4 CF040000 		.4byte	.LASF71
 2649 08c8 01       		.byte	0x1
 2650 08c9 7901     		.2byte	0x179
 2651 08cb 8C000000 		.4byte	0x8c
 2652 08cf A9040000 		.4byte	.LLST17
 2653 08d3 00       		.byte	0
 2654 08d4 1E       		.uleb128 0x1e
 2655 08d5 90080000 		.4byte	.LASF83
 2656 08d9 01       		.byte	0x1
 2657 08da 7F01     		.2byte	0x17f
 2658 08dc 00000000 		.4byte	.LFB80
 2659 08e0 14000000 		.4byte	.LFE80-.LFB80
 2660 08e4 01       		.uleb128 0x1
 2661 08e5 9C       		.byte	0x9c
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 57


 2662 08e6 FB080000 		.4byte	0x8fb
 2663 08ea 1B       		.uleb128 0x1b
 2664 08eb CF040000 		.4byte	.LASF71
 2665 08ef 01       		.byte	0x1
 2666 08f0 7F01     		.2byte	0x17f
 2667 08f2 8C000000 		.4byte	0x8c
 2668 08f6 CA040000 		.4byte	.LLST18
 2669 08fa 00       		.byte	0
 2670 08fb 23       		.uleb128 0x23
 2671 08fc 50080000 		.4byte	.LASF85
 2672 0900 01       		.byte	0x1
 2673 0901 8501     		.2byte	0x185
 2674 0903 00000000 		.4byte	.LFB81
 2675 0907 10000000 		.4byte	.LFE81-.LFB81
 2676 090b 01       		.uleb128 0x1
 2677 090c 9C       		.byte	0x9c
 2678 090d 23       		.uleb128 0x23
 2679 090e 20030000 		.4byte	.LASF86
 2680 0912 01       		.byte	0x1
 2681 0913 8B01     		.2byte	0x18b
 2682 0915 00000000 		.4byte	.LFB82
 2683 0919 10000000 		.4byte	.LFE82-.LFB82
 2684 091d 01       		.uleb128 0x1
 2685 091e 9C       		.byte	0x9c
 2686 091f 24       		.uleb128 0x24
 2687 0920 9A050000 		.4byte	.LASF87
 2688 0924 07       		.byte	0x7
 2689 0925 9606     		.2byte	0x696
 2690 0927 2B090000 		.4byte	0x92b
 2691 092b 08       		.uleb128 0x8
 2692 092c A2000000 		.4byte	0xa2
 2693 0930 25       		.uleb128 0x25
 2694 0931 B8030000 		.4byte	.LASF88
 2695 0935 05       		.byte	0x5
 2696 0936 6A       		.byte	0x6a
 2697 0937 F7010000 		.4byte	0x1f7
 2698 093b 26       		.uleb128 0x26
 2699 093c 73797300 		.ascii	"sys\000"
 2700 0940 06       		.byte	0x6
 2701 0941 92       		.byte	0x92
 2702 0942 B3020000 		.4byte	0x2b3
 2703 0946 0B       		.uleb128 0xb
 2704 0947 A2000000 		.4byte	0xa2
 2705 094b 56090000 		.4byte	0x956
 2706 094f 0C       		.uleb128 0xc
 2707 0950 E1000000 		.4byte	0xe1
 2708 0954 02       		.byte	0x2
 2709 0955 00       		.byte	0
 2710 0956 27       		.uleb128 0x27
 2711 0957 DD040000 		.4byte	.LASF89
 2712 095b 06       		.byte	0x6
 2713 095c 95       		.byte	0x95
 2714 095d 46090000 		.4byte	0x946
 2715 0961 05       		.uleb128 0x5
 2716 0962 03       		.byte	0x3
 2717 0963 00000000 		.4byte	sys_position
 2718 0967 27       		.uleb128 0x27
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 58


 2719 0968 46040000 		.4byte	.LASF90
 2720 096c 06       		.byte	0x6
 2721 096d 96       		.byte	0x96
 2722 096e 46090000 		.4byte	0x946
 2723 0972 05       		.uleb128 0x5
 2724 0973 03       		.byte	0x3
 2725 0974 00000000 		.4byte	sys_probe_position
 2726 0978 27       		.uleb128 0x27
 2727 0979 14010000 		.4byte	.LASF91
 2728 097d 06       		.byte	0x6
 2729 097e 98       		.byte	0x98
 2730 097f EE000000 		.4byte	0xee
 2731 0983 05       		.uleb128 0x5
 2732 0984 03       		.byte	0x3
 2733 0985 00000000 		.4byte	sys_probe_state
 2734 0989 27       		.uleb128 0x27
 2735 098a 7A030000 		.4byte	.LASF92
 2736 098e 06       		.byte	0x6
 2737 098f 99       		.byte	0x99
 2738 0990 EE000000 		.4byte	0xee
 2739 0994 05       		.uleb128 0x5
 2740 0995 03       		.byte	0x3
 2741 0996 00000000 		.4byte	sys_rt_exec_state
 2742 099a 27       		.uleb128 0x27
 2743 099b A1070000 		.4byte	.LASF93
 2744 099f 06       		.byte	0x6
 2745 09a0 9A       		.byte	0x9a
 2746 09a1 EE000000 		.4byte	0xee
 2747 09a5 05       		.uleb128 0x5
 2748 09a6 03       		.byte	0x3
 2749 09a7 00000000 		.4byte	sys_rt_exec_alarm
 2750 09ab 27       		.uleb128 0x27
 2751 09ac 29050000 		.4byte	.LASF94
 2752 09b0 06       		.byte	0x6
 2753 09b1 9B       		.byte	0x9b
 2754 09b2 EE000000 		.4byte	0xee
 2755 09b6 05       		.uleb128 0x5
 2756 09b7 03       		.byte	0x3
 2757 09b8 00000000 		.4byte	sys_rt_exec_motion_override
 2758 09bc 27       		.uleb128 0x27
 2759 09bd 3F060000 		.4byte	.LASF95
 2760 09c1 06       		.byte	0x6
 2761 09c2 9C       		.byte	0x9c
 2762 09c3 EE000000 		.4byte	0xee
 2763 09c7 05       		.uleb128 0x5
 2764 09c8 03       		.byte	0x3
 2765 09c9 00000000 		.4byte	sys_rt_exec_accessory_override
 2766 09cd 27       		.uleb128 0x27
 2767 09ce 62030000 		.4byte	.LASF96
 2768 09d2 08       		.byte	0x8
 2769 09d3 11       		.byte	0x11
 2770 09d4 8C000000 		.4byte	0x8c
 2771 09d8 05       		.uleb128 0x5
 2772 09d9 03       		.byte	0x3
 2773 09da 00000000 		.4byte	exec_lcd_status
 2774 09de 28       		.uleb128 0x28
 2775 09df B1060000 		.4byte	.LASF99
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 59


 2776 09e3 0A       		.byte	0xa
 2777 09e4 18       		.byte	0x18
 2778 09e5 EF090000 		.4byte	0x9ef
 2779 09e9 29       		.uleb128 0x29
 2780 09ea CE000000 		.4byte	0xce
 2781 09ee 00       		.byte	0
 2782 09ef 2A       		.uleb128 0x2a
 2783 09f0 34000000 		.4byte	.LASF97
 2784 09f4 09       		.byte	0x9
 2785 09f5 29       		.byte	0x29
 2786 09f6 2B       		.uleb128 0x2b
 2787 09f7 AE040000 		.4byte	.LASF126
 2788 09fb 09       		.byte	0x9
 2789 09fc 28       		.byte	0x28
 2790 09fd AD000000 		.4byte	0xad
 2791 0a01 2C       		.uleb128 0x2c
 2792 0a02 D4040000 		.4byte	.LASF103
 2793 0a06 0D       		.byte	0xd
 2794 0a07 42       		.byte	0x42
 2795 0a08 0E0A0000 		.4byte	0xa0e
 2796 0a0c 2D       		.uleb128 0x2d
 2797 0a0d 00       		.byte	0
 2798 0a0e 2A       		.uleb128 0x2a
 2799 0a0f 61020000 		.4byte	.LASF98
 2800 0a13 0A       		.byte	0xa
 2801 0a14 28       		.byte	0x28
 2802 0a15 2E       		.uleb128 0x2e
 2803 0a16 EA040000 		.4byte	.LASF101
 2804 0a1a 0C       		.byte	0xc
 2805 0a1b ED       		.byte	0xed
 2806 0a1c 8C000000 		.4byte	0x8c
 2807 0a20 2A0A0000 		.4byte	0xa2a
 2808 0a24 29       		.uleb128 0x29
 2809 0a25 E8000000 		.4byte	0xe8
 2810 0a29 00       		.byte	0
 2811 0a2a 28       		.uleb128 0x28
 2812 0a2b D2000000 		.4byte	.LASF100
 2813 0a2f 0B       		.byte	0xb
 2814 0a30 81       		.byte	0x81
 2815 0a31 400A0000 		.4byte	0xa40
 2816 0a35 29       		.uleb128 0x29
 2817 0a36 E8000000 		.4byte	0xe8
 2818 0a3a 29       		.uleb128 0x29
 2819 0a3b 8C000000 		.4byte	0x8c
 2820 0a3f 00       		.byte	0
 2821 0a40 2E       		.uleb128 0x2e
 2822 0a41 93040000 		.4byte	.LASF102
 2823 0a45 05       		.byte	0x5
 2824 0a46 79       		.byte	0x79
 2825 0a47 8C000000 		.4byte	0x8c
 2826 0a4b 5A0A0000 		.4byte	0xa5a
 2827 0a4f 29       		.uleb128 0x29
 2828 0a50 8C000000 		.4byte	0x8c
 2829 0a54 29       		.uleb128 0x29
 2830 0a55 E8000000 		.4byte	0xe8
 2831 0a59 00       		.byte	0
 2832 0a5a 2C       		.uleb128 0x2c
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 60


 2833 0a5b 6A040000 		.4byte	.LASF104
 2834 0a5f 0E       		.byte	0xe
 2835 0a60 30       		.byte	0x30
 2836 0a61 670A0000 		.4byte	0xa67
 2837 0a65 2D       		.uleb128 0x2d
 2838 0a66 00       		.byte	0
 2839 0a67 2C       		.uleb128 0x2c
 2840 0a68 CE050000 		.4byte	.LASF105
 2841 0a6c 0B       		.byte	0xb
 2842 0a6d 6B       		.byte	0x6b
 2843 0a6e 740A0000 		.4byte	0xa74
 2844 0a72 2D       		.uleb128 0x2d
 2845 0a73 00       		.byte	0
 2846 0a74 2C       		.uleb128 0x2c
 2847 0a75 95010000 		.4byte	.LASF106
 2848 0a79 0B       		.byte	0xb
 2849 0a7a 6E       		.byte	0x6e
 2850 0a7b 810A0000 		.4byte	0xa81
 2851 0a7f 2D       		.uleb128 0x2d
 2852 0a80 00       		.byte	0
 2853 0a81 2C       		.uleb128 0x2c
 2854 0a82 DF050000 		.4byte	.LASF107
 2855 0a86 0B       		.byte	0xb
 2856 0a87 7D       		.byte	0x7d
 2857 0a88 8E0A0000 		.4byte	0xa8e
 2858 0a8c 2D       		.uleb128 0x2d
 2859 0a8d 00       		.byte	0
 2860 0a8e 28       		.uleb128 0x28
 2861 0a8f 24010000 		.4byte	.LASF108
 2862 0a93 0B       		.byte	0xb
 2863 0a94 65       		.byte	0x65
 2864 0a95 9F0A0000 		.4byte	0xa9f
 2865 0a99 29       		.uleb128 0x29
 2866 0a9a 8C000000 		.4byte	0x8c
 2867 0a9e 00       		.byte	0
 2868 0a9f 2C       		.uleb128 0x2c
 2869 0aa0 F2050000 		.4byte	.LASF109
 2870 0aa4 0B       		.byte	0xb
 2871 0aa5 7A       		.byte	0x7a
 2872 0aa6 AC0A0000 		.4byte	0xaac
 2873 0aaa 2D       		.uleb128 0x2d
 2874 0aab 00       		.byte	0
 2875 0aac 28       		.uleb128 0x28
 2876 0aad 52050000 		.4byte	.LASF110
 2877 0ab1 0D       		.byte	0xd
 2878 0ab2 39       		.byte	0x39
 2879 0ab3 BD0A0000 		.4byte	0xabd
 2880 0ab7 29       		.uleb128 0x29
 2881 0ab8 8C000000 		.4byte	0x8c
 2882 0abc 00       		.byte	0
 2883 0abd 2C       		.uleb128 0x2c
 2884 0abe 9C020000 		.4byte	.LASF111
 2885 0ac2 0F       		.byte	0xf
 2886 0ac3 26       		.byte	0x26
 2887 0ac4 CA0A0000 		.4byte	0xaca
 2888 0ac8 2D       		.uleb128 0x2d
 2889 0ac9 00       		.byte	0
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 61


 2890 0aca 2E       		.uleb128 0x2e
 2891 0acb 53000000 		.4byte	.LASF112
 2892 0acf 05       		.byte	0x5
 2893 0ad0 7F       		.byte	0x7f
 2894 0ad1 8C000000 		.4byte	0x8c
 2895 0ad5 DF0A0000 		.4byte	0xadf
 2896 0ad9 29       		.uleb128 0x29
 2897 0ada E8000000 		.4byte	0xe8
 2898 0ade 00       		.byte	0
 2899 0adf 28       		.uleb128 0x28
 2900 0ae0 2B080000 		.4byte	.LASF113
 2901 0ae4 0B       		.byte	0xb
 2902 0ae5 84       		.byte	0x84
 2903 0ae6 F00A0000 		.4byte	0xaf0
 2904 0aea 29       		.uleb128 0x29
 2905 0aeb E8000000 		.4byte	0xe8
 2906 0aef 00       		.byte	0
 2907 0af0 28       		.uleb128 0x28
 2908 0af1 C9020000 		.4byte	.LASF114
 2909 0af5 05       		.byte	0x5
 2910 0af6 7C       		.byte	0x7c
 2911 0af7 010B0000 		.4byte	0xb01
 2912 0afb 29       		.uleb128 0x29
 2913 0afc E8000000 		.4byte	0xe8
 2914 0b00 00       		.byte	0
 2915 0b01 28       		.uleb128 0x28
 2916 0b02 59040000 		.4byte	.LASF115
 2917 0b06 05       		.byte	0x5
 2918 0b07 70       		.byte	0x70
 2919 0b08 120B0000 		.4byte	0xb12
 2920 0b0c 29       		.uleb128 0x29
 2921 0b0d 8C000000 		.4byte	0x8c
 2922 0b11 00       		.byte	0
 2923 0b12 28       		.uleb128 0x28
 2924 0b13 86020000 		.4byte	.LASF116
 2925 0b17 0B       		.byte	0xb
 2926 0b18 5F       		.byte	0x5f
 2927 0b19 230B0000 		.4byte	0xb23
 2928 0b1d 29       		.uleb128 0x29
 2929 0b1e 8C000000 		.4byte	0x8c
 2930 0b22 00       		.byte	0
 2931 0b23 28       		.uleb128 0x28
 2932 0b24 02090000 		.4byte	.LASF117
 2933 0b28 0B       		.byte	0xb
 2934 0b29 80       		.byte	0x80
 2935 0b2a 390B0000 		.4byte	0xb39
 2936 0b2e 29       		.uleb128 0x29
 2937 0b2f 8C000000 		.4byte	0x8c
 2938 0b33 29       		.uleb128 0x29
 2939 0b34 E8000000 		.4byte	0xe8
 2940 0b38 00       		.byte	0
 2941 0b39 2E       		.uleb128 0x2e
 2942 0b3a 18000000 		.4byte	.LASF118
 2943 0b3e 10       		.byte	0x10
 2944 0b3f 48       		.byte	0x48
 2945 0b40 8C000000 		.4byte	0x8c
 2946 0b44 580B0000 		.4byte	0xb58
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 62


 2947 0b48 29       		.uleb128 0x29
 2948 0b49 E8000000 		.4byte	0xe8
 2949 0b4d 29       		.uleb128 0x29
 2950 0b4e 580B0000 		.4byte	0xb58
 2951 0b52 29       		.uleb128 0x29
 2952 0b53 DA040000 		.4byte	0x4da
 2953 0b57 00       		.byte	0
 2954 0b58 06       		.uleb128 0x6
 2955 0b59 04       		.byte	0x4
 2956 0b5a 8C000000 		.4byte	0x8c
 2957 0b5e 2F       		.uleb128 0x2f
 2958 0b5f DC070000 		.4byte	.LASF119
 2959 0b63 11       		.byte	0x11
 2960 0b64 1D01     		.2byte	0x11d
 2961 0b66 C0000000 		.4byte	0xc0
 2962 0b6a 740B0000 		.4byte	0xb74
 2963 0b6e 29       		.uleb128 0x29
 2964 0b6f C0000000 		.4byte	0xc0
 2965 0b73 00       		.byte	0
 2966 0b74 28       		.uleb128 0x28
 2967 0b75 AA010000 		.4byte	.LASF120
 2968 0b79 05       		.byte	0x5
 2969 0b7a 76       		.byte	0x76
 2970 0b7b 8A0B0000 		.4byte	0xb8a
 2971 0b7f 29       		.uleb128 0x29
 2972 0b80 8C000000 		.4byte	0x8c
 2973 0b84 29       		.uleb128 0x29
 2974 0b85 E8000000 		.4byte	0xe8
 2975 0b89 00       		.byte	0
 2976 0b8a 30       		.uleb128 0x30
 2977 0b8b 77010000 		.4byte	.LASF121
 2978 0b8f 05       		.byte	0x5
 2979 0b90 73       		.byte	0x73
 2980 0b91 8C000000 		.4byte	0x8c
 2981 0b95 29       		.uleb128 0x29
 2982 0b96 8C000000 		.4byte	0x8c
 2983 0b9a 29       		.uleb128 0x29
 2984 0b9b B9000000 		.4byte	0xb9
 2985 0b9f 00       		.byte	0
 2986 0ba0 00       		.byte	0
 2987              		.section	.debug_abbrev,"",%progbits
 2988              	.Ldebug_abbrev0:
 2989 0000 01       		.uleb128 0x1
 2990 0001 11       		.uleb128 0x11
 2991 0002 01       		.byte	0x1
 2992 0003 25       		.uleb128 0x25
 2993 0004 0E       		.uleb128 0xe
 2994 0005 13       		.uleb128 0x13
 2995 0006 0B       		.uleb128 0xb
 2996 0007 03       		.uleb128 0x3
 2997 0008 0E       		.uleb128 0xe
 2998 0009 1B       		.uleb128 0x1b
 2999 000a 0E       		.uleb128 0xe
 3000 000b 55       		.uleb128 0x55
 3001 000c 17       		.uleb128 0x17
 3002 000d 11       		.uleb128 0x11
 3003 000e 01       		.uleb128 0x1
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 63


 3004 000f 10       		.uleb128 0x10
 3005 0010 17       		.uleb128 0x17
 3006 0011 00       		.byte	0
 3007 0012 00       		.byte	0
 3008 0013 02       		.uleb128 0x2
 3009 0014 24       		.uleb128 0x24
 3010 0015 00       		.byte	0
 3011 0016 0B       		.uleb128 0xb
 3012 0017 0B       		.uleb128 0xb
 3013 0018 3E       		.uleb128 0x3e
 3014 0019 0B       		.uleb128 0xb
 3015 001a 03       		.uleb128 0x3
 3016 001b 0E       		.uleb128 0xe
 3017 001c 00       		.byte	0
 3018 001d 00       		.byte	0
 3019 001e 03       		.uleb128 0x3
 3020 001f 16       		.uleb128 0x16
 3021 0020 00       		.byte	0
 3022 0021 03       		.uleb128 0x3
 3023 0022 0E       		.uleb128 0xe
 3024 0023 3A       		.uleb128 0x3a
 3025 0024 0B       		.uleb128 0xb
 3026 0025 3B       		.uleb128 0x3b
 3027 0026 0B       		.uleb128 0xb
 3028 0027 49       		.uleb128 0x49
 3029 0028 13       		.uleb128 0x13
 3030 0029 00       		.byte	0
 3031 002a 00       		.byte	0
 3032 002b 04       		.uleb128 0x4
 3033 002c 24       		.uleb128 0x24
 3034 002d 00       		.byte	0
 3035 002e 0B       		.uleb128 0xb
 3036 002f 0B       		.uleb128 0xb
 3037 0030 3E       		.uleb128 0x3e
 3038 0031 0B       		.uleb128 0xb
 3039 0032 03       		.uleb128 0x3
 3040 0033 08       		.uleb128 0x8
 3041 0034 00       		.byte	0
 3042 0035 00       		.byte	0
 3043 0036 05       		.uleb128 0x5
 3044 0037 16       		.uleb128 0x16
 3045 0038 00       		.byte	0
 3046 0039 03       		.uleb128 0x3
 3047 003a 0E       		.uleb128 0xe
 3048 003b 3A       		.uleb128 0x3a
 3049 003c 0B       		.uleb128 0xb
 3050 003d 3B       		.uleb128 0x3b
 3051 003e 05       		.uleb128 0x5
 3052 003f 49       		.uleb128 0x49
 3053 0040 13       		.uleb128 0x13
 3054 0041 00       		.byte	0
 3055 0042 00       		.byte	0
 3056 0043 06       		.uleb128 0x6
 3057 0044 0F       		.uleb128 0xf
 3058 0045 00       		.byte	0
 3059 0046 0B       		.uleb128 0xb
 3060 0047 0B       		.uleb128 0xb
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 64


 3061 0048 49       		.uleb128 0x49
 3062 0049 13       		.uleb128 0x13
 3063 004a 00       		.byte	0
 3064 004b 00       		.byte	0
 3065 004c 07       		.uleb128 0x7
 3066 004d 15       		.uleb128 0x15
 3067 004e 00       		.byte	0
 3068 004f 27       		.uleb128 0x27
 3069 0050 19       		.uleb128 0x19
 3070 0051 00       		.byte	0
 3071 0052 00       		.byte	0
 3072 0053 08       		.uleb128 0x8
 3073 0054 35       		.uleb128 0x35
 3074 0055 00       		.byte	0
 3075 0056 49       		.uleb128 0x49
 3076 0057 13       		.uleb128 0x13
 3077 0058 00       		.byte	0
 3078 0059 00       		.byte	0
 3079 005a 09       		.uleb128 0x9
 3080 005b 13       		.uleb128 0x13
 3081 005c 01       		.byte	0x1
 3082 005d 0B       		.uleb128 0xb
 3083 005e 0B       		.uleb128 0xb
 3084 005f 3A       		.uleb128 0x3a
 3085 0060 0B       		.uleb128 0xb
 3086 0061 3B       		.uleb128 0x3b
 3087 0062 0B       		.uleb128 0xb
 3088 0063 01       		.uleb128 0x1
 3089 0064 13       		.uleb128 0x13
 3090 0065 00       		.byte	0
 3091 0066 00       		.byte	0
 3092 0067 0A       		.uleb128 0xa
 3093 0068 0D       		.uleb128 0xd
 3094 0069 00       		.byte	0
 3095 006a 03       		.uleb128 0x3
 3096 006b 0E       		.uleb128 0xe
 3097 006c 3A       		.uleb128 0x3a
 3098 006d 0B       		.uleb128 0xb
 3099 006e 3B       		.uleb128 0x3b
 3100 006f 0B       		.uleb128 0xb
 3101 0070 49       		.uleb128 0x49
 3102 0071 13       		.uleb128 0x13
 3103 0072 38       		.uleb128 0x38
 3104 0073 0B       		.uleb128 0xb
 3105 0074 00       		.byte	0
 3106 0075 00       		.byte	0
 3107 0076 0B       		.uleb128 0xb
 3108 0077 01       		.uleb128 0x1
 3109 0078 01       		.byte	0x1
 3110 0079 49       		.uleb128 0x49
 3111 007a 13       		.uleb128 0x13
 3112 007b 01       		.uleb128 0x1
 3113 007c 13       		.uleb128 0x13
 3114 007d 00       		.byte	0
 3115 007e 00       		.byte	0
 3116 007f 0C       		.uleb128 0xc
 3117 0080 21       		.uleb128 0x21
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 65


 3118 0081 00       		.byte	0
 3119 0082 49       		.uleb128 0x49
 3120 0083 13       		.uleb128 0x13
 3121 0084 2F       		.uleb128 0x2f
 3122 0085 0B       		.uleb128 0xb
 3123 0086 00       		.byte	0
 3124 0087 00       		.byte	0
 3125 0088 0D       		.uleb128 0xd
 3126 0089 2E       		.uleb128 0x2e
 3127 008a 01       		.byte	0x1
 3128 008b 3F       		.uleb128 0x3f
 3129 008c 19       		.uleb128 0x19
 3130 008d 03       		.uleb128 0x3
 3131 008e 0E       		.uleb128 0xe
 3132 008f 3A       		.uleb128 0x3a
 3133 0090 0B       		.uleb128 0xb
 3134 0091 3B       		.uleb128 0x3b
 3135 0092 0B       		.uleb128 0xb
 3136 0093 11       		.uleb128 0x11
 3137 0094 01       		.uleb128 0x1
 3138 0095 12       		.uleb128 0x12
 3139 0096 06       		.uleb128 0x6
 3140 0097 40       		.uleb128 0x40
 3141 0098 18       		.uleb128 0x18
 3142 0099 9742     		.uleb128 0x2117
 3143 009b 19       		.uleb128 0x19
 3144 009c 01       		.uleb128 0x1
 3145 009d 13       		.uleb128 0x13
 3146 009e 00       		.byte	0
 3147 009f 00       		.byte	0
 3148 00a0 0E       		.uleb128 0xe
 3149 00a1 898201   		.uleb128 0x4109
 3150 00a4 01       		.byte	0x1
 3151 00a5 11       		.uleb128 0x11
 3152 00a6 01       		.uleb128 0x1
 3153 00a7 31       		.uleb128 0x31
 3154 00a8 13       		.uleb128 0x13
 3155 00a9 01       		.uleb128 0x1
 3156 00aa 13       		.uleb128 0x13
 3157 00ab 00       		.byte	0
 3158 00ac 00       		.byte	0
 3159 00ad 0F       		.uleb128 0xf
 3160 00ae 8A8201   		.uleb128 0x410a
 3161 00b1 00       		.byte	0
 3162 00b2 02       		.uleb128 0x2
 3163 00b3 18       		.uleb128 0x18
 3164 00b4 9142     		.uleb128 0x2111
 3165 00b6 18       		.uleb128 0x18
 3166 00b7 00       		.byte	0
 3167 00b8 00       		.byte	0
 3168 00b9 10       		.uleb128 0x10
 3169 00ba 898201   		.uleb128 0x4109
 3170 00bd 00       		.byte	0
 3171 00be 11       		.uleb128 0x11
 3172 00bf 01       		.uleb128 0x1
 3173 00c0 31       		.uleb128 0x31
 3174 00c1 13       		.uleb128 0x13
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 66


 3175 00c2 00       		.byte	0
 3176 00c3 00       		.byte	0
 3177 00c4 11       		.uleb128 0x11
 3178 00c5 2E       		.uleb128 0x2e
 3179 00c6 01       		.byte	0x1
 3180 00c7 3F       		.uleb128 0x3f
 3181 00c8 19       		.uleb128 0x19
 3182 00c9 03       		.uleb128 0x3
 3183 00ca 0E       		.uleb128 0xe
 3184 00cb 3A       		.uleb128 0x3a
 3185 00cc 0B       		.uleb128 0xb
 3186 00cd 3B       		.uleb128 0x3b
 3187 00ce 0B       		.uleb128 0xb
 3188 00cf 49       		.uleb128 0x49
 3189 00d0 13       		.uleb128 0x13
 3190 00d1 11       		.uleb128 0x11
 3191 00d2 01       		.uleb128 0x1
 3192 00d3 12       		.uleb128 0x12
 3193 00d4 06       		.uleb128 0x6
 3194 00d5 40       		.uleb128 0x40
 3195 00d6 18       		.uleb128 0x18
 3196 00d7 9742     		.uleb128 0x2117
 3197 00d9 19       		.uleb128 0x19
 3198 00da 01       		.uleb128 0x1
 3199 00db 13       		.uleb128 0x13
 3200 00dc 00       		.byte	0
 3201 00dd 00       		.byte	0
 3202 00de 12       		.uleb128 0x12
 3203 00df 2E       		.uleb128 0x2e
 3204 00e0 01       		.byte	0x1
 3205 00e1 3F       		.uleb128 0x3f
 3206 00e2 19       		.uleb128 0x19
 3207 00e3 03       		.uleb128 0x3
 3208 00e4 0E       		.uleb128 0xe
 3209 00e5 3A       		.uleb128 0x3a
 3210 00e6 0B       		.uleb128 0xb
 3211 00e7 3B       		.uleb128 0x3b
 3212 00e8 0B       		.uleb128 0xb
 3213 00e9 27       		.uleb128 0x27
 3214 00ea 19       		.uleb128 0x19
 3215 00eb 11       		.uleb128 0x11
 3216 00ec 01       		.uleb128 0x1
 3217 00ed 12       		.uleb128 0x12
 3218 00ee 06       		.uleb128 0x6
 3219 00ef 40       		.uleb128 0x40
 3220 00f0 18       		.uleb128 0x18
 3221 00f1 9742     		.uleb128 0x2117
 3222 00f3 19       		.uleb128 0x19
 3223 00f4 01       		.uleb128 0x1
 3224 00f5 13       		.uleb128 0x13
 3225 00f6 00       		.byte	0
 3226 00f7 00       		.byte	0
 3227 00f8 13       		.uleb128 0x13
 3228 00f9 34       		.uleb128 0x34
 3229 00fa 00       		.byte	0
 3230 00fb 03       		.uleb128 0x3
 3231 00fc 08       		.uleb128 0x8
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 67


 3232 00fd 3A       		.uleb128 0x3a
 3233 00fe 0B       		.uleb128 0xb
 3234 00ff 3B       		.uleb128 0x3b
 3235 0100 0B       		.uleb128 0xb
 3236 0101 49       		.uleb128 0x49
 3237 0102 13       		.uleb128 0x13
 3238 0103 02       		.uleb128 0x2
 3239 0104 17       		.uleb128 0x17
 3240 0105 00       		.byte	0
 3241 0106 00       		.byte	0
 3242 0107 14       		.uleb128 0x14
 3243 0108 2E       		.uleb128 0x2e
 3244 0109 00       		.byte	0
 3245 010a 3F       		.uleb128 0x3f
 3246 010b 19       		.uleb128 0x19
 3247 010c 03       		.uleb128 0x3
 3248 010d 0E       		.uleb128 0xe
 3249 010e 3A       		.uleb128 0x3a
 3250 010f 0B       		.uleb128 0xb
 3251 0110 3B       		.uleb128 0x3b
 3252 0111 0B       		.uleb128 0xb
 3253 0112 49       		.uleb128 0x49
 3254 0113 13       		.uleb128 0x13
 3255 0114 11       		.uleb128 0x11
 3256 0115 01       		.uleb128 0x1
 3257 0116 12       		.uleb128 0x12
 3258 0117 06       		.uleb128 0x6
 3259 0118 40       		.uleb128 0x40
 3260 0119 18       		.uleb128 0x18
 3261 011a 9742     		.uleb128 0x2117
 3262 011c 19       		.uleb128 0x19
 3263 011d 00       		.byte	0
 3264 011e 00       		.byte	0
 3265 011f 15       		.uleb128 0x15
 3266 0120 05       		.uleb128 0x5
 3267 0121 00       		.byte	0
 3268 0122 03       		.uleb128 0x3
 3269 0123 0E       		.uleb128 0xe
 3270 0124 3A       		.uleb128 0x3a
 3271 0125 0B       		.uleb128 0xb
 3272 0126 3B       		.uleb128 0x3b
 3273 0127 0B       		.uleb128 0xb
 3274 0128 49       		.uleb128 0x49
 3275 0129 13       		.uleb128 0x13
 3276 012a 02       		.uleb128 0x2
 3277 012b 17       		.uleb128 0x17
 3278 012c 00       		.byte	0
 3279 012d 00       		.byte	0
 3280 012e 16       		.uleb128 0x16
 3281 012f 0B       		.uleb128 0xb
 3282 0130 01       		.byte	0x1
 3283 0131 11       		.uleb128 0x11
 3284 0132 01       		.uleb128 0x1
 3285 0133 12       		.uleb128 0x12
 3286 0134 06       		.uleb128 0x6
 3287 0135 01       		.uleb128 0x1
 3288 0136 13       		.uleb128 0x13
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 68


 3289 0137 00       		.byte	0
 3290 0138 00       		.byte	0
 3291 0139 17       		.uleb128 0x17
 3292 013a 34       		.uleb128 0x34
 3293 013b 00       		.byte	0
 3294 013c 03       		.uleb128 0x3
 3295 013d 0E       		.uleb128 0xe
 3296 013e 3A       		.uleb128 0x3a
 3297 013f 0B       		.uleb128 0xb
 3298 0140 3B       		.uleb128 0x3b
 3299 0141 0B       		.uleb128 0xb
 3300 0142 49       		.uleb128 0x49
 3301 0143 13       		.uleb128 0x13
 3302 0144 02       		.uleb128 0x2
 3303 0145 17       		.uleb128 0x17
 3304 0146 00       		.byte	0
 3305 0147 00       		.byte	0
 3306 0148 18       		.uleb128 0x18
 3307 0149 898201   		.uleb128 0x4109
 3308 014c 01       		.byte	0x1
 3309 014d 11       		.uleb128 0x11
 3310 014e 01       		.uleb128 0x1
 3311 014f 31       		.uleb128 0x31
 3312 0150 13       		.uleb128 0x13
 3313 0151 00       		.byte	0
 3314 0152 00       		.byte	0
 3315 0153 19       		.uleb128 0x19
 3316 0154 2E       		.uleb128 0x2e
 3317 0155 01       		.byte	0x1
 3318 0156 3F       		.uleb128 0x3f
 3319 0157 19       		.uleb128 0x19
 3320 0158 03       		.uleb128 0x3
 3321 0159 0E       		.uleb128 0xe
 3322 015a 3A       		.uleb128 0x3a
 3323 015b 0B       		.uleb128 0xb
 3324 015c 3B       		.uleb128 0x3b
 3325 015d 05       		.uleb128 0x5
 3326 015e 11       		.uleb128 0x11
 3327 015f 01       		.uleb128 0x1
 3328 0160 12       		.uleb128 0x12
 3329 0161 06       		.uleb128 0x6
 3330 0162 40       		.uleb128 0x40
 3331 0163 18       		.uleb128 0x18
 3332 0164 9742     		.uleb128 0x2117
 3333 0166 19       		.uleb128 0x19
 3334 0167 01       		.uleb128 0x1
 3335 0168 13       		.uleb128 0x13
 3336 0169 00       		.byte	0
 3337 016a 00       		.byte	0
 3338 016b 1A       		.uleb128 0x1a
 3339 016c 2E       		.uleb128 0x2e
 3340 016d 01       		.byte	0x1
 3341 016e 3F       		.uleb128 0x3f
 3342 016f 19       		.uleb128 0x19
 3343 0170 03       		.uleb128 0x3
 3344 0171 0E       		.uleb128 0xe
 3345 0172 3A       		.uleb128 0x3a
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 69


 3346 0173 0B       		.uleb128 0xb
 3347 0174 3B       		.uleb128 0x3b
 3348 0175 05       		.uleb128 0x5
 3349 0176 27       		.uleb128 0x27
 3350 0177 19       		.uleb128 0x19
 3351 0178 49       		.uleb128 0x49
 3352 0179 13       		.uleb128 0x13
 3353 017a 11       		.uleb128 0x11
 3354 017b 01       		.uleb128 0x1
 3355 017c 12       		.uleb128 0x12
 3356 017d 06       		.uleb128 0x6
 3357 017e 40       		.uleb128 0x40
 3358 017f 18       		.uleb128 0x18
 3359 0180 9642     		.uleb128 0x2116
 3360 0182 19       		.uleb128 0x19
 3361 0183 01       		.uleb128 0x1
 3362 0184 13       		.uleb128 0x13
 3363 0185 00       		.byte	0
 3364 0186 00       		.byte	0
 3365 0187 1B       		.uleb128 0x1b
 3366 0188 05       		.uleb128 0x5
 3367 0189 00       		.byte	0
 3368 018a 03       		.uleb128 0x3
 3369 018b 0E       		.uleb128 0xe
 3370 018c 3A       		.uleb128 0x3a
 3371 018d 0B       		.uleb128 0xb
 3372 018e 3B       		.uleb128 0x3b
 3373 018f 05       		.uleb128 0x5
 3374 0190 49       		.uleb128 0x49
 3375 0191 13       		.uleb128 0x13
 3376 0192 02       		.uleb128 0x2
 3377 0193 17       		.uleb128 0x17
 3378 0194 00       		.byte	0
 3379 0195 00       		.byte	0
 3380 0196 1C       		.uleb128 0x1c
 3381 0197 05       		.uleb128 0x5
 3382 0198 00       		.byte	0
 3383 0199 03       		.uleb128 0x3
 3384 019a 08       		.uleb128 0x8
 3385 019b 3A       		.uleb128 0x3a
 3386 019c 0B       		.uleb128 0xb
 3387 019d 3B       		.uleb128 0x3b
 3388 019e 05       		.uleb128 0x5
 3389 019f 49       		.uleb128 0x49
 3390 01a0 13       		.uleb128 0x13
 3391 01a1 02       		.uleb128 0x2
 3392 01a2 17       		.uleb128 0x17
 3393 01a3 00       		.byte	0
 3394 01a4 00       		.byte	0
 3395 01a5 1D       		.uleb128 0x1d
 3396 01a6 34       		.uleb128 0x34
 3397 01a7 00       		.byte	0
 3398 01a8 03       		.uleb128 0x3
 3399 01a9 08       		.uleb128 0x8
 3400 01aa 3A       		.uleb128 0x3a
 3401 01ab 0B       		.uleb128 0xb
 3402 01ac 3B       		.uleb128 0x3b
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 70


 3403 01ad 05       		.uleb128 0x5
 3404 01ae 49       		.uleb128 0x49
 3405 01af 13       		.uleb128 0x13
 3406 01b0 02       		.uleb128 0x2
 3407 01b1 18       		.uleb128 0x18
 3408 01b2 00       		.byte	0
 3409 01b3 00       		.byte	0
 3410 01b4 1E       		.uleb128 0x1e
 3411 01b5 2E       		.uleb128 0x2e
 3412 01b6 01       		.byte	0x1
 3413 01b7 3F       		.uleb128 0x3f
 3414 01b8 19       		.uleb128 0x19
 3415 01b9 03       		.uleb128 0x3
 3416 01ba 0E       		.uleb128 0xe
 3417 01bb 3A       		.uleb128 0x3a
 3418 01bc 0B       		.uleb128 0xb
 3419 01bd 3B       		.uleb128 0x3b
 3420 01be 05       		.uleb128 0x5
 3421 01bf 27       		.uleb128 0x27
 3422 01c0 19       		.uleb128 0x19
 3423 01c1 11       		.uleb128 0x11
 3424 01c2 01       		.uleb128 0x1
 3425 01c3 12       		.uleb128 0x12
 3426 01c4 06       		.uleb128 0x6
 3427 01c5 40       		.uleb128 0x40
 3428 01c6 18       		.uleb128 0x18
 3429 01c7 9742     		.uleb128 0x2117
 3430 01c9 19       		.uleb128 0x19
 3431 01ca 01       		.uleb128 0x1
 3432 01cb 13       		.uleb128 0x13
 3433 01cc 00       		.byte	0
 3434 01cd 00       		.byte	0
 3435 01ce 1F       		.uleb128 0x1f
 3436 01cf 34       		.uleb128 0x34
 3437 01d0 00       		.byte	0
 3438 01d1 03       		.uleb128 0x3
 3439 01d2 08       		.uleb128 0x8
 3440 01d3 3A       		.uleb128 0x3a
 3441 01d4 0B       		.uleb128 0xb
 3442 01d5 3B       		.uleb128 0x3b
 3443 01d6 05       		.uleb128 0x5
 3444 01d7 49       		.uleb128 0x49
 3445 01d8 13       		.uleb128 0x13
 3446 01d9 02       		.uleb128 0x2
 3447 01da 17       		.uleb128 0x17
 3448 01db 00       		.byte	0
 3449 01dc 00       		.byte	0
 3450 01dd 20       		.uleb128 0x20
 3451 01de 2E       		.uleb128 0x2e
 3452 01df 01       		.byte	0x1
 3453 01e0 3F       		.uleb128 0x3f
 3454 01e1 19       		.uleb128 0x19
 3455 01e2 03       		.uleb128 0x3
 3456 01e3 0E       		.uleb128 0xe
 3457 01e4 3A       		.uleb128 0x3a
 3458 01e5 0B       		.uleb128 0xb
 3459 01e6 3B       		.uleb128 0x3b
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 71


 3460 01e7 0B       		.uleb128 0xb
 3461 01e8 27       		.uleb128 0x27
 3462 01e9 19       		.uleb128 0x19
 3463 01ea 49       		.uleb128 0x49
 3464 01eb 13       		.uleb128 0x13
 3465 01ec 11       		.uleb128 0x11
 3466 01ed 01       		.uleb128 0x1
 3467 01ee 12       		.uleb128 0x12
 3468 01ef 06       		.uleb128 0x6
 3469 01f0 40       		.uleb128 0x40
 3470 01f1 18       		.uleb128 0x18
 3471 01f2 9642     		.uleb128 0x2116
 3472 01f4 19       		.uleb128 0x19
 3473 01f5 01       		.uleb128 0x1
 3474 01f6 13       		.uleb128 0x13
 3475 01f7 00       		.byte	0
 3476 01f8 00       		.byte	0
 3477 01f9 21       		.uleb128 0x21
 3478 01fa 34       		.uleb128 0x34
 3479 01fb 00       		.byte	0
 3480 01fc 03       		.uleb128 0x3
 3481 01fd 0E       		.uleb128 0xe
 3482 01fe 3A       		.uleb128 0x3a
 3483 01ff 0B       		.uleb128 0xb
 3484 0200 3B       		.uleb128 0x3b
 3485 0201 0B       		.uleb128 0xb
 3486 0202 49       		.uleb128 0x49
 3487 0203 13       		.uleb128 0x13
 3488 0204 02       		.uleb128 0x2
 3489 0205 18       		.uleb128 0x18
 3490 0206 00       		.byte	0
 3491 0207 00       		.byte	0
 3492 0208 22       		.uleb128 0x22
 3493 0209 05       		.uleb128 0x5
 3494 020a 00       		.byte	0
 3495 020b 03       		.uleb128 0x3
 3496 020c 0E       		.uleb128 0xe
 3497 020d 3A       		.uleb128 0x3a
 3498 020e 0B       		.uleb128 0xb
 3499 020f 3B       		.uleb128 0x3b
 3500 0210 05       		.uleb128 0x5
 3501 0211 49       		.uleb128 0x49
 3502 0212 13       		.uleb128 0x13
 3503 0213 02       		.uleb128 0x2
 3504 0214 18       		.uleb128 0x18
 3505 0215 00       		.byte	0
 3506 0216 00       		.byte	0
 3507 0217 23       		.uleb128 0x23
 3508 0218 2E       		.uleb128 0x2e
 3509 0219 00       		.byte	0
 3510 021a 3F       		.uleb128 0x3f
 3511 021b 19       		.uleb128 0x19
 3512 021c 03       		.uleb128 0x3
 3513 021d 0E       		.uleb128 0xe
 3514 021e 3A       		.uleb128 0x3a
 3515 021f 0B       		.uleb128 0xb
 3516 0220 3B       		.uleb128 0x3b
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 72


 3517 0221 05       		.uleb128 0x5
 3518 0222 11       		.uleb128 0x11
 3519 0223 01       		.uleb128 0x1
 3520 0224 12       		.uleb128 0x12
 3521 0225 06       		.uleb128 0x6
 3522 0226 40       		.uleb128 0x40
 3523 0227 18       		.uleb128 0x18
 3524 0228 9742     		.uleb128 0x2117
 3525 022a 19       		.uleb128 0x19
 3526 022b 00       		.byte	0
 3527 022c 00       		.byte	0
 3528 022d 24       		.uleb128 0x24
 3529 022e 34       		.uleb128 0x34
 3530 022f 00       		.byte	0
 3531 0230 03       		.uleb128 0x3
 3532 0231 0E       		.uleb128 0xe
 3533 0232 3A       		.uleb128 0x3a
 3534 0233 0B       		.uleb128 0xb
 3535 0234 3B       		.uleb128 0x3b
 3536 0235 05       		.uleb128 0x5
 3537 0236 49       		.uleb128 0x49
 3538 0237 13       		.uleb128 0x13
 3539 0238 3F       		.uleb128 0x3f
 3540 0239 19       		.uleb128 0x19
 3541 023a 3C       		.uleb128 0x3c
 3542 023b 19       		.uleb128 0x19
 3543 023c 00       		.byte	0
 3544 023d 00       		.byte	0
 3545 023e 25       		.uleb128 0x25
 3546 023f 34       		.uleb128 0x34
 3547 0240 00       		.byte	0
 3548 0241 03       		.uleb128 0x3
 3549 0242 0E       		.uleb128 0xe
 3550 0243 3A       		.uleb128 0x3a
 3551 0244 0B       		.uleb128 0xb
 3552 0245 3B       		.uleb128 0x3b
 3553 0246 0B       		.uleb128 0xb
 3554 0247 49       		.uleb128 0x49
 3555 0248 13       		.uleb128 0x13
 3556 0249 3F       		.uleb128 0x3f
 3557 024a 19       		.uleb128 0x19
 3558 024b 3C       		.uleb128 0x3c
 3559 024c 19       		.uleb128 0x19
 3560 024d 00       		.byte	0
 3561 024e 00       		.byte	0
 3562 024f 26       		.uleb128 0x26
 3563 0250 34       		.uleb128 0x34
 3564 0251 00       		.byte	0
 3565 0252 03       		.uleb128 0x3
 3566 0253 08       		.uleb128 0x8
 3567 0254 3A       		.uleb128 0x3a
 3568 0255 0B       		.uleb128 0xb
 3569 0256 3B       		.uleb128 0x3b
 3570 0257 0B       		.uleb128 0xb
 3571 0258 49       		.uleb128 0x49
 3572 0259 13       		.uleb128 0x13
 3573 025a 3F       		.uleb128 0x3f
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 73


 3574 025b 19       		.uleb128 0x19
 3575 025c 3C       		.uleb128 0x3c
 3576 025d 19       		.uleb128 0x19
 3577 025e 00       		.byte	0
 3578 025f 00       		.byte	0
 3579 0260 27       		.uleb128 0x27
 3580 0261 34       		.uleb128 0x34
 3581 0262 00       		.byte	0
 3582 0263 03       		.uleb128 0x3
 3583 0264 0E       		.uleb128 0xe
 3584 0265 3A       		.uleb128 0x3a
 3585 0266 0B       		.uleb128 0xb
 3586 0267 3B       		.uleb128 0x3b
 3587 0268 0B       		.uleb128 0xb
 3588 0269 49       		.uleb128 0x49
 3589 026a 13       		.uleb128 0x13
 3590 026b 3F       		.uleb128 0x3f
 3591 026c 19       		.uleb128 0x19
 3592 026d 02       		.uleb128 0x2
 3593 026e 18       		.uleb128 0x18
 3594 026f 00       		.byte	0
 3595 0270 00       		.byte	0
 3596 0271 28       		.uleb128 0x28
 3597 0272 2E       		.uleb128 0x2e
 3598 0273 01       		.byte	0x1
 3599 0274 3F       		.uleb128 0x3f
 3600 0275 19       		.uleb128 0x19
 3601 0276 03       		.uleb128 0x3
 3602 0277 0E       		.uleb128 0xe
 3603 0278 3A       		.uleb128 0x3a
 3604 0279 0B       		.uleb128 0xb
 3605 027a 3B       		.uleb128 0x3b
 3606 027b 0B       		.uleb128 0xb
 3607 027c 27       		.uleb128 0x27
 3608 027d 19       		.uleb128 0x19
 3609 027e 3C       		.uleb128 0x3c
 3610 027f 19       		.uleb128 0x19
 3611 0280 01       		.uleb128 0x1
 3612 0281 13       		.uleb128 0x13
 3613 0282 00       		.byte	0
 3614 0283 00       		.byte	0
 3615 0284 29       		.uleb128 0x29
 3616 0285 05       		.uleb128 0x5
 3617 0286 00       		.byte	0
 3618 0287 49       		.uleb128 0x49
 3619 0288 13       		.uleb128 0x13
 3620 0289 00       		.byte	0
 3621 028a 00       		.byte	0
 3622 028b 2A       		.uleb128 0x2a
 3623 028c 2E       		.uleb128 0x2e
 3624 028d 00       		.byte	0
 3625 028e 3F       		.uleb128 0x3f
 3626 028f 19       		.uleb128 0x19
 3627 0290 03       		.uleb128 0x3
 3628 0291 0E       		.uleb128 0xe
 3629 0292 3A       		.uleb128 0x3a
 3630 0293 0B       		.uleb128 0xb
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 74


 3631 0294 3B       		.uleb128 0x3b
 3632 0295 0B       		.uleb128 0xb
 3633 0296 27       		.uleb128 0x27
 3634 0297 19       		.uleb128 0x19
 3635 0298 3C       		.uleb128 0x3c
 3636 0299 19       		.uleb128 0x19
 3637 029a 00       		.byte	0
 3638 029b 00       		.byte	0
 3639 029c 2B       		.uleb128 0x2b
 3640 029d 2E       		.uleb128 0x2e
 3641 029e 00       		.byte	0
 3642 029f 3F       		.uleb128 0x3f
 3643 02a0 19       		.uleb128 0x19
 3644 02a1 03       		.uleb128 0x3
 3645 02a2 0E       		.uleb128 0xe
 3646 02a3 3A       		.uleb128 0x3a
 3647 02a4 0B       		.uleb128 0xb
 3648 02a5 3B       		.uleb128 0x3b
 3649 02a6 0B       		.uleb128 0xb
 3650 02a7 27       		.uleb128 0x27
 3651 02a8 19       		.uleb128 0x19
 3652 02a9 49       		.uleb128 0x49
 3653 02aa 13       		.uleb128 0x13
 3654 02ab 3C       		.uleb128 0x3c
 3655 02ac 19       		.uleb128 0x19
 3656 02ad 00       		.byte	0
 3657 02ae 00       		.byte	0
 3658 02af 2C       		.uleb128 0x2c
 3659 02b0 2E       		.uleb128 0x2e
 3660 02b1 01       		.byte	0x1
 3661 02b2 3F       		.uleb128 0x3f
 3662 02b3 19       		.uleb128 0x19
 3663 02b4 03       		.uleb128 0x3
 3664 02b5 0E       		.uleb128 0xe
 3665 02b6 3A       		.uleb128 0x3a
 3666 02b7 0B       		.uleb128 0xb
 3667 02b8 3B       		.uleb128 0x3b
 3668 02b9 0B       		.uleb128 0xb
 3669 02ba 3C       		.uleb128 0x3c
 3670 02bb 19       		.uleb128 0x19
 3671 02bc 01       		.uleb128 0x1
 3672 02bd 13       		.uleb128 0x13
 3673 02be 00       		.byte	0
 3674 02bf 00       		.byte	0
 3675 02c0 2D       		.uleb128 0x2d
 3676 02c1 18       		.uleb128 0x18
 3677 02c2 00       		.byte	0
 3678 02c3 00       		.byte	0
 3679 02c4 00       		.byte	0
 3680 02c5 2E       		.uleb128 0x2e
 3681 02c6 2E       		.uleb128 0x2e
 3682 02c7 01       		.byte	0x1
 3683 02c8 3F       		.uleb128 0x3f
 3684 02c9 19       		.uleb128 0x19
 3685 02ca 03       		.uleb128 0x3
 3686 02cb 0E       		.uleb128 0xe
 3687 02cc 3A       		.uleb128 0x3a
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 75


 3688 02cd 0B       		.uleb128 0xb
 3689 02ce 3B       		.uleb128 0x3b
 3690 02cf 0B       		.uleb128 0xb
 3691 02d0 27       		.uleb128 0x27
 3692 02d1 19       		.uleb128 0x19
 3693 02d2 49       		.uleb128 0x49
 3694 02d3 13       		.uleb128 0x13
 3695 02d4 3C       		.uleb128 0x3c
 3696 02d5 19       		.uleb128 0x19
 3697 02d6 01       		.uleb128 0x1
 3698 02d7 13       		.uleb128 0x13
 3699 02d8 00       		.byte	0
 3700 02d9 00       		.byte	0
 3701 02da 2F       		.uleb128 0x2f
 3702 02db 2E       		.uleb128 0x2e
 3703 02dc 01       		.byte	0x1
 3704 02dd 3F       		.uleb128 0x3f
 3705 02de 19       		.uleb128 0x19
 3706 02df 03       		.uleb128 0x3
 3707 02e0 0E       		.uleb128 0xe
 3708 02e1 3A       		.uleb128 0x3a
 3709 02e2 0B       		.uleb128 0xb
 3710 02e3 3B       		.uleb128 0x3b
 3711 02e4 05       		.uleb128 0x5
 3712 02e5 27       		.uleb128 0x27
 3713 02e6 19       		.uleb128 0x19
 3714 02e7 49       		.uleb128 0x49
 3715 02e8 13       		.uleb128 0x13
 3716 02e9 3C       		.uleb128 0x3c
 3717 02ea 19       		.uleb128 0x19
 3718 02eb 01       		.uleb128 0x1
 3719 02ec 13       		.uleb128 0x13
 3720 02ed 00       		.byte	0
 3721 02ee 00       		.byte	0
 3722 02ef 30       		.uleb128 0x30
 3723 02f0 2E       		.uleb128 0x2e
 3724 02f1 01       		.byte	0x1
 3725 02f2 3F       		.uleb128 0x3f
 3726 02f3 19       		.uleb128 0x19
 3727 02f4 03       		.uleb128 0x3
 3728 02f5 0E       		.uleb128 0xe
 3729 02f6 3A       		.uleb128 0x3a
 3730 02f7 0B       		.uleb128 0xb
 3731 02f8 3B       		.uleb128 0x3b
 3732 02f9 0B       		.uleb128 0xb
 3733 02fa 27       		.uleb128 0x27
 3734 02fb 19       		.uleb128 0x19
 3735 02fc 49       		.uleb128 0x49
 3736 02fd 13       		.uleb128 0x13
 3737 02fe 3C       		.uleb128 0x3c
 3738 02ff 19       		.uleb128 0x19
 3739 0300 00       		.byte	0
 3740 0301 00       		.byte	0
 3741 0302 00       		.byte	0
 3742              		.section	.debug_loc,"",%progbits
 3743              	.Ldebug_loc0:
 3744              	.LLST0:
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 76


 3745 0000 06000000 		.4byte	.LVL3
 3746 0004 11000000 		.4byte	.LVL4-1
 3747 0008 0100     		.2byte	0x1
 3748 000a 50       		.byte	0x50
 3749 000b 14000000 		.4byte	.LVL5
 3750 000f 36000000 		.4byte	.LVL6
 3751 0013 0100     		.2byte	0x1
 3752 0015 50       		.byte	0x50
 3753 0016 00000000 		.4byte	0
 3754 001a 00000000 		.4byte	0
 3755              	.LLST1:
 3756 001e 00000000 		.4byte	.LVL8
 3757 0022 08000000 		.4byte	.LVL10
 3758 0026 0100     		.2byte	0x1
 3759 0028 50       		.byte	0x50
 3760 0029 08000000 		.4byte	.LVL10
 3761 002d 3C000000 		.4byte	.LFE67
 3762 0031 0100     		.2byte	0x1
 3763 0033 55       		.byte	0x55
 3764 0034 00000000 		.4byte	0
 3765 0038 00000000 		.4byte	0
 3766              	.LLST2:
 3767 003c 04000000 		.4byte	.LVL9
 3768 0040 08000000 		.4byte	.LVL10
 3769 0044 0200     		.2byte	0x2
 3770 0046 30       		.byte	0x30
 3771 0047 9F       		.byte	0x9f
 3772 0048 08000000 		.4byte	.LVL10
 3773 004c 34000000 		.4byte	.LVL16
 3774 0050 0100     		.2byte	0x1
 3775 0052 54       		.byte	0x54
 3776 0053 36000000 		.4byte	.LVL17
 3777 0057 3C000000 		.4byte	.LFE67
 3778 005b 0100     		.2byte	0x1
 3779 005d 54       		.byte	0x54
 3780 005e 00000000 		.4byte	0
 3781 0062 00000000 		.4byte	0
 3782              	.LLST3:
 3783 0066 2C000000 		.4byte	.LVL14
 3784 006a 31000000 		.4byte	.LVL15-1
 3785 006e 0100     		.2byte	0x1
 3786 0070 51       		.byte	0x51
 3787 0071 00000000 		.4byte	0
 3788 0075 00000000 		.4byte	0
 3789              	.LLST4:
 3790 0079 00000000 		.4byte	.LVL19
 3791 007d 08000000 		.4byte	.LVL20
 3792 0081 0100     		.2byte	0x1
 3793 0083 50       		.byte	0x50
 3794 0084 08000000 		.4byte	.LVL20
 3795 0088 1C000000 		.4byte	.LFE70
 3796 008c 0400     		.2byte	0x4
 3797 008e F3       		.byte	0xf3
 3798 008f 01       		.uleb128 0x1
 3799 0090 50       		.byte	0x50
 3800 0091 9F       		.byte	0x9f
 3801 0092 00000000 		.4byte	0
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 77


 3802 0096 00000000 		.4byte	0
 3803              	.LLST5:
 3804 009a 00000000 		.4byte	.LVL19
 3805 009e 0B000000 		.4byte	.LVL21-1
 3806 00a2 0100     		.2byte	0x1
 3807 00a4 51       		.byte	0x51
 3808 00a5 0B000000 		.4byte	.LVL21-1
 3809 00a9 1C000000 		.4byte	.LFE70
 3810 00ad 0400     		.2byte	0x4
 3811 00af F3       		.byte	0xf3
 3812 00b0 01       		.uleb128 0x1
 3813 00b1 51       		.byte	0x51
 3814 00b2 9F       		.byte	0x9f
 3815 00b3 00000000 		.4byte	0
 3816 00b7 00000000 		.4byte	0
 3817              	.LLST6:
 3818 00bb 00000000 		.4byte	.LVL23
 3819 00bf 0A000000 		.4byte	.LVL25
 3820 00c3 0100     		.2byte	0x1
 3821 00c5 50       		.byte	0x50
 3822 00c6 0A000000 		.4byte	.LVL25
 3823 00ca 20000000 		.4byte	.LFE71
 3824 00ce 0100     		.2byte	0x1
 3825 00d0 56       		.byte	0x56
 3826 00d1 00000000 		.4byte	0
 3827 00d5 00000000 		.4byte	0
 3828              	.LLST7:
 3829 00d9 00000000 		.4byte	.LVL23
 3830 00dd 0A000000 		.4byte	.LVL25
 3831 00e1 0100     		.2byte	0x1
 3832 00e3 51       		.byte	0x51
 3833 00e4 0A000000 		.4byte	.LVL25
 3834 00e8 20000000 		.4byte	.LFE71
 3835 00ec 0100     		.2byte	0x1
 3836 00ee 55       		.byte	0x55
 3837 00ef 00000000 		.4byte	0
 3838 00f3 00000000 		.4byte	0
 3839              	.LLST8:
 3840 00f7 06000000 		.4byte	.LVL24
 3841 00fb 0A000000 		.4byte	.LVL25
 3842 00ff 0200     		.2byte	0x2
 3843 0101 30       		.byte	0x30
 3844 0102 9F       		.byte	0x9f
 3845 0103 0A000000 		.4byte	.LVL25
 3846 0107 18000000 		.4byte	.LVL27
 3847 010b 0100     		.2byte	0x1
 3848 010d 54       		.byte	0x54
 3849 010e 1A000000 		.4byte	.LVL28
 3850 0112 20000000 		.4byte	.LFE71
 3851 0116 0100     		.2byte	0x1
 3852 0118 54       		.byte	0x54
 3853 0119 00000000 		.4byte	0
 3854 011d 00000000 		.4byte	0
 3855              	.LLST9:
 3856 0121 00000000 		.4byte	.LVL29
 3857 0125 08000000 		.4byte	.LVL31
 3858 0129 0100     		.2byte	0x1
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 78


 3859 012b 50       		.byte	0x50
 3860 012c 08000000 		.4byte	.LVL31
 3861 0130 3A000000 		.4byte	.LVL38
 3862 0134 0100     		.2byte	0x1
 3863 0136 56       		.byte	0x56
 3864 0137 3A000000 		.4byte	.LVL38
 3865 013b 40000000 		.4byte	.LFE72
 3866 013f 0400     		.2byte	0x4
 3867 0141 F3       		.byte	0xf3
 3868 0142 01       		.uleb128 0x1
 3869 0143 50       		.byte	0x50
 3870 0144 9F       		.byte	0x9f
 3871 0145 00000000 		.4byte	0
 3872 0149 00000000 		.4byte	0
 3873              	.LLST10:
 3874 014d 04000000 		.4byte	.LVL30
 3875 0151 08000000 		.4byte	.LVL31
 3876 0155 0200     		.2byte	0x2
 3877 0157 30       		.byte	0x30
 3878 0158 9F       		.byte	0x9f
 3879 0159 08000000 		.4byte	.LVL31
 3880 015d 28000000 		.4byte	.LVL34
 3881 0161 0100     		.2byte	0x1
 3882 0163 54       		.byte	0x54
 3883 0164 2A000000 		.4byte	.LVL35
 3884 0168 3A000000 		.4byte	.LVL38
 3885 016c 0100     		.2byte	0x1
 3886 016e 54       		.byte	0x54
 3887 016f 00000000 		.4byte	0
 3888 0173 00000000 		.4byte	0
 3889              	.LLST11:
 3890 0177 00000000 		.4byte	.LVL39
 3891 017b 08000000 		.4byte	.LVL40
 3892 017f 0100     		.2byte	0x1
 3893 0181 50       		.byte	0x50
 3894 0182 08000000 		.4byte	.LVL40
 3895 0186 14000000 		.4byte	.LFE73
 3896 018a 0400     		.2byte	0x4
 3897 018c F3       		.byte	0xf3
 3898 018d 01       		.uleb128 0x1
 3899 018e 50       		.byte	0x50
 3900 018f 9F       		.byte	0x9f
 3901 0190 00000000 		.4byte	0
 3902 0194 00000000 		.4byte	0
 3903              	.LLST12:
 3904 0198 00000000 		.4byte	.LVL41
 3905 019c 2D000000 		.4byte	.LVL43-1
 3906 01a0 0100     		.2byte	0x1
 3907 01a2 50       		.byte	0x50
 3908 01a3 2D000000 		.4byte	.LVL43-1
 3909 01a7 32000000 		.4byte	.LVL44
 3910 01ab 0100     		.2byte	0x1
 3911 01ad 54       		.byte	0x54
 3912 01ae 32000000 		.4byte	.LVL44
 3913 01b2 48000000 		.4byte	.LVL45
 3914 01b6 0100     		.2byte	0x1
 3915 01b8 50       		.byte	0x50
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 79


 3916 01b9 48000000 		.4byte	.LVL45
 3917 01bd 50000000 		.4byte	.LVL47
 3918 01c1 0100     		.2byte	0x1
 3919 01c3 54       		.byte	0x54
 3920 01c4 50000000 		.4byte	.LVL47
 3921 01c8 7F000000 		.4byte	.LVL48-1
 3922 01cc 0100     		.2byte	0x1
 3923 01ce 50       		.byte	0x50
 3924 01cf 7F000000 		.4byte	.LVL48-1
 3925 01d3 82000000 		.4byte	.LVL49
 3926 01d7 0100     		.2byte	0x1
 3927 01d9 54       		.byte	0x54
 3928 01da 82000000 		.4byte	.LVL49
 3929 01de 85000000 		.4byte	.LVL50-1
 3930 01e2 0100     		.2byte	0x1
 3931 01e4 50       		.byte	0x50
 3932 01e5 85000000 		.4byte	.LVL50-1
 3933 01e9 8A000000 		.4byte	.LVL51
 3934 01ed 0100     		.2byte	0x1
 3935 01ef 54       		.byte	0x54
 3936 01f0 8A000000 		.4byte	.LVL51
 3937 01f4 95000000 		.4byte	.LVL52-1
 3938 01f8 0100     		.2byte	0x1
 3939 01fa 50       		.byte	0x50
 3940 01fb 95000000 		.4byte	.LVL52-1
 3941 01ff A0000000 		.4byte	.LVL54
 3942 0203 0100     		.2byte	0x1
 3943 0205 54       		.byte	0x54
 3944 0206 A0000000 		.4byte	.LVL54
 3945 020a AE000000 		.4byte	.LVL55
 3946 020e 0100     		.2byte	0x1
 3947 0210 50       		.byte	0x50
 3948 0211 AE000000 		.4byte	.LVL55
 3949 0215 B4000000 		.4byte	.LVL57
 3950 0219 0100     		.2byte	0x1
 3951 021b 54       		.byte	0x54
 3952 021c B4000000 		.4byte	.LVL57
 3953 0220 C1000000 		.4byte	.LVL58-1
 3954 0224 0100     		.2byte	0x1
 3955 0226 50       		.byte	0x50
 3956 0227 C1000000 		.4byte	.LVL58-1
 3957 022b D8000000 		.4byte	.LVL60
 3958 022f 0100     		.2byte	0x1
 3959 0231 54       		.byte	0x54
 3960 0232 D8000000 		.4byte	.LVL60
 3961 0236 5D010000 		.4byte	.LVL61-1
 3962 023a 0100     		.2byte	0x1
 3963 023c 50       		.byte	0x50
 3964 023d 5D010000 		.4byte	.LVL61-1
 3965 0241 62010000 		.4byte	.LVL62
 3966 0245 0100     		.2byte	0x1
 3967 0247 54       		.byte	0x54
 3968 0248 62010000 		.4byte	.LVL62
 3969 024c 73010000 		.4byte	.LVL63-1
 3970 0250 0100     		.2byte	0x1
 3971 0252 50       		.byte	0x50
 3972 0253 73010000 		.4byte	.LVL63-1
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 80


 3973 0257 DA010000 		.4byte	.LVL70
 3974 025b 0100     		.2byte	0x1
 3975 025d 54       		.byte	0x54
 3976 025e DA010000 		.4byte	.LVL70
 3977 0262 F4010000 		.4byte	.LVL71
 3978 0266 0100     		.2byte	0x1
 3979 0268 50       		.byte	0x50
 3980 0269 F4010000 		.4byte	.LVL71
 3981 026d FC010000 		.4byte	.LVL73
 3982 0271 0100     		.2byte	0x1
 3983 0273 54       		.byte	0x54
 3984 0274 FC010000 		.4byte	.LVL73
 3985 0278 08020000 		.4byte	.LVL74
 3986 027c 0100     		.2byte	0x1
 3987 027e 50       		.byte	0x50
 3988 027f 08020000 		.4byte	.LVL74
 3989 0283 16020000 		.4byte	.LVL77
 3990 0287 0100     		.2byte	0x1
 3991 0289 54       		.byte	0x54
 3992 028a 16020000 		.4byte	.LVL77
 3993 028e 3C020000 		.4byte	.LVL78
 3994 0292 0100     		.2byte	0x1
 3995 0294 50       		.byte	0x50
 3996 0295 3C020000 		.4byte	.LVL78
 3997 0299 44020000 		.4byte	.LVL80
 3998 029d 0100     		.2byte	0x1
 3999 029f 54       		.byte	0x54
 4000 02a0 44020000 		.4byte	.LVL80
 4001 02a4 78020000 		.4byte	.LVL81
 4002 02a8 0100     		.2byte	0x1
 4003 02aa 50       		.byte	0x50
 4004 02ab 78020000 		.4byte	.LVL81
 4005 02af 7E020000 		.4byte	.LVL83
 4006 02b3 0100     		.2byte	0x1
 4007 02b5 54       		.byte	0x54
 4008 02b6 7E020000 		.4byte	.LVL83
 4009 02ba 80020000 		.4byte	.LVL84
 4010 02be 0100     		.2byte	0x1
 4011 02c0 50       		.byte	0x50
 4012 02c1 80020000 		.4byte	.LVL84
 4013 02c5 86020000 		.4byte	.LVL86
 4014 02c9 0100     		.2byte	0x1
 4015 02cb 54       		.byte	0x54
 4016 02cc 86020000 		.4byte	.LVL86
 4017 02d0 88020000 		.4byte	.LVL87
 4018 02d4 0100     		.2byte	0x1
 4019 02d6 50       		.byte	0x50
 4020 02d7 88020000 		.4byte	.LVL87
 4021 02db 9A020000 		.4byte	.LVL91
 4022 02df 0100     		.2byte	0x1
 4023 02e1 54       		.byte	0x54
 4024 02e2 9A020000 		.4byte	.LVL91
 4025 02e6 A6020000 		.4byte	.LVL92
 4026 02ea 0100     		.2byte	0x1
 4027 02ec 50       		.byte	0x50
 4028 02ed A6020000 		.4byte	.LVL92
 4029 02f1 C6020000 		.4byte	.LVL98
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 81


 4030 02f5 0100     		.2byte	0x1
 4031 02f7 54       		.byte	0x54
 4032 02f8 C6020000 		.4byte	.LVL98
 4033 02fc C8020000 		.4byte	.LVL99
 4034 0300 0100     		.2byte	0x1
 4035 0302 50       		.byte	0x50
 4036 0303 C8020000 		.4byte	.LVL99
 4037 0307 D0020000 		.4byte	.LVL101
 4038 030b 0100     		.2byte	0x1
 4039 030d 54       		.byte	0x54
 4040 030e D0020000 		.4byte	.LVL101
 4041 0312 E8020000 		.4byte	.LVL103
 4042 0316 0100     		.2byte	0x1
 4043 0318 50       		.byte	0x50
 4044 0319 E8020000 		.4byte	.LVL103
 4045 031d 62030000 		.4byte	.LVL113
 4046 0321 0100     		.2byte	0x1
 4047 0323 54       		.byte	0x54
 4048 0324 62030000 		.4byte	.LVL113
 4049 0328 80030000 		.4byte	.LVL118
 4050 032c 0400     		.2byte	0x4
 4051 032e F3       		.byte	0xf3
 4052 032f 01       		.uleb128 0x1
 4053 0330 50       		.byte	0x50
 4054 0331 9F       		.byte	0x9f
 4055 0332 80030000 		.4byte	.LVL118
 4056 0336 9C030000 		.4byte	.LVL119
 4057 033a 0100     		.2byte	0x1
 4058 033c 50       		.byte	0x50
 4059 033d 9C030000 		.4byte	.LVL119
 4060 0341 A0030000 		.4byte	.LVL120
 4061 0345 0100     		.2byte	0x1
 4062 0347 54       		.byte	0x54
 4063 0348 A0030000 		.4byte	.LVL120
 4064 034c AC030000 		.4byte	.LVL121
 4065 0350 0100     		.2byte	0x1
 4066 0352 50       		.byte	0x50
 4067 0353 AC030000 		.4byte	.LVL121
 4068 0357 BC030000 		.4byte	.LVL122
 4069 035b 0100     		.2byte	0x1
 4070 035d 54       		.byte	0x54
 4071 035e BC030000 		.4byte	.LVL122
 4072 0362 E4030000 		.4byte	.LVL123
 4073 0366 0100     		.2byte	0x1
 4074 0368 50       		.byte	0x50
 4075 0369 E4030000 		.4byte	.LVL123
 4076 036d F4030000 		.4byte	.LVL131
 4077 0371 0100     		.2byte	0x1
 4078 0373 54       		.byte	0x54
 4079 0374 F4030000 		.4byte	.LVL131
 4080 0378 00040000 		.4byte	.LFE68
 4081 037c 0400     		.2byte	0x4
 4082 037e F3       		.byte	0xf3
 4083 037f 01       		.uleb128 0x1
 4084 0380 50       		.byte	0x50
 4085 0381 9F       		.byte	0x9f
 4086 0382 00000000 		.4byte	0
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 82


 4087 0386 00000000 		.4byte	0
 4088              	.LLST13:
 4089 038a 0C000000 		.4byte	.LVL42
 4090 038e A6020000 		.4byte	.LVL92
 4091 0392 0200     		.2byte	0x2
 4092 0394 30       		.byte	0x30
 4093 0395 9F       		.byte	0x9f
 4094 0396 A6020000 		.4byte	.LVL92
 4095 039a C2020000 		.4byte	.LVL96
 4096 039e 0100     		.2byte	0x1
 4097 03a0 55       		.byte	0x55
 4098 03a1 C4020000 		.4byte	.LVL97
 4099 03a5 C6020000 		.4byte	.LVL98
 4100 03a9 0100     		.2byte	0x1
 4101 03ab 55       		.byte	0x55
 4102 03ac C6020000 		.4byte	.LVL98
 4103 03b0 C8020000 		.4byte	.LVL99
 4104 03b4 0200     		.2byte	0x2
 4105 03b6 30       		.byte	0x30
 4106 03b7 9F       		.byte	0x9f
 4107 03b8 C8020000 		.4byte	.LVL99
 4108 03bc CE020000 		.4byte	.LVL100
 4109 03c0 0100     		.2byte	0x1
 4110 03c2 55       		.byte	0x55
 4111 03c3 D0020000 		.4byte	.LVL101
 4112 03c7 E6020000 		.4byte	.LVL102
 4113 03cb 0200     		.2byte	0x2
 4114 03cd 30       		.byte	0x30
 4115 03ce 9F       		.byte	0x9f
 4116 03cf E6020000 		.4byte	.LVL102
 4117 03d3 26030000 		.4byte	.LVL105
 4118 03d7 0100     		.2byte	0x1
 4119 03d9 55       		.byte	0x55
 4120 03da 26030000 		.4byte	.LVL105
 4121 03de 2E030000 		.4byte	.LVL106
 4122 03e2 0100     		.2byte	0x1
 4123 03e4 50       		.byte	0x50
 4124 03e5 3A030000 		.4byte	.LVL109
 4125 03e9 41030000 		.4byte	.LVL110-1
 4126 03ed 0100     		.2byte	0x1
 4127 03ef 50       		.byte	0x50
 4128 03f0 46030000 		.4byte	.LVL111
 4129 03f4 7E030000 		.4byte	.LVL117
 4130 03f8 0100     		.2byte	0x1
 4131 03fa 55       		.byte	0x55
 4132 03fb 80030000 		.4byte	.LVL118
 4133 03ff E4030000 		.4byte	.LVL123
 4134 0403 0200     		.2byte	0x2
 4135 0405 30       		.byte	0x30
 4136 0406 9F       		.byte	0x9f
 4137 0407 E4030000 		.4byte	.LVL123
 4138 040b E6030000 		.4byte	.LVL124
 4139 040f 0100     		.2byte	0x1
 4140 0411 55       		.byte	0x55
 4141 0412 E8030000 		.4byte	.LVL125
 4142 0416 EA030000 		.4byte	.LVL126
 4143 041a 0100     		.2byte	0x1
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 83


 4144 041c 55       		.byte	0x55
 4145 041d EC030000 		.4byte	.LVL127
 4146 0421 EE030000 		.4byte	.LVL128
 4147 0425 0100     		.2byte	0x1
 4148 0427 55       		.byte	0x55
 4149 0428 F0030000 		.4byte	.LVL129
 4150 042c F2030000 		.4byte	.LVL130
 4151 0430 0100     		.2byte	0x1
 4152 0432 55       		.byte	0x55
 4153 0433 F4030000 		.4byte	.LVL131
 4154 0437 F6030000 		.4byte	.LVL132
 4155 043b 0100     		.2byte	0x1
 4156 043d 55       		.byte	0x55
 4157 043e 00000000 		.4byte	0
 4158 0442 00000000 		.4byte	0
 4159              	.LLST14:
 4160 0446 00000000 		.4byte	.LVL133
 4161 044a 0A000000 		.4byte	.LVL134
 4162 044e 0100     		.2byte	0x1
 4163 0450 50       		.byte	0x50
 4164 0451 0A000000 		.4byte	.LVL134
 4165 0455 14000000 		.4byte	.LFE74
 4166 0459 0400     		.2byte	0x4
 4167 045b F3       		.byte	0xf3
 4168 045c 01       		.uleb128 0x1
 4169 045d 50       		.byte	0x50
 4170 045e 9F       		.byte	0x9f
 4171 045f 00000000 		.4byte	0
 4172 0463 00000000 		.4byte	0
 4173              	.LLST15:
 4174 0467 00000000 		.4byte	.LVL136
 4175 046b 08000000 		.4byte	.LVL137
 4176 046f 0100     		.2byte	0x1
 4177 0471 50       		.byte	0x50
 4178 0472 08000000 		.4byte	.LVL137
 4179 0476 14000000 		.4byte	.LFE77
 4180 047a 0400     		.2byte	0x4
 4181 047c F3       		.byte	0xf3
 4182 047d 01       		.uleb128 0x1
 4183 047e 50       		.byte	0x50
 4184 047f 9F       		.byte	0x9f
 4185 0480 00000000 		.4byte	0
 4186 0484 00000000 		.4byte	0
 4187              	.LLST16:
 4188 0488 00000000 		.4byte	.LVL138
 4189 048c 0A000000 		.4byte	.LVL139
 4190 0490 0100     		.2byte	0x1
 4191 0492 50       		.byte	0x50
 4192 0493 0A000000 		.4byte	.LVL139
 4193 0497 14000000 		.4byte	.LFE78
 4194 049b 0400     		.2byte	0x4
 4195 049d F3       		.byte	0xf3
 4196 049e 01       		.uleb128 0x1
 4197 049f 50       		.byte	0x50
 4198 04a0 9F       		.byte	0x9f
 4199 04a1 00000000 		.4byte	0
 4200 04a5 00000000 		.4byte	0
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 84


 4201              	.LLST17:
 4202 04a9 00000000 		.4byte	.LVL140
 4203 04ad 08000000 		.4byte	.LVL141
 4204 04b1 0100     		.2byte	0x1
 4205 04b3 50       		.byte	0x50
 4206 04b4 08000000 		.4byte	.LVL141
 4207 04b8 14000000 		.4byte	.LFE79
 4208 04bc 0400     		.2byte	0x4
 4209 04be F3       		.byte	0xf3
 4210 04bf 01       		.uleb128 0x1
 4211 04c0 50       		.byte	0x50
 4212 04c1 9F       		.byte	0x9f
 4213 04c2 00000000 		.4byte	0
 4214 04c6 00000000 		.4byte	0
 4215              	.LLST18:
 4216 04ca 00000000 		.4byte	.LVL142
 4217 04ce 08000000 		.4byte	.LVL143
 4218 04d2 0100     		.2byte	0x1
 4219 04d4 50       		.byte	0x50
 4220 04d5 08000000 		.4byte	.LVL143
 4221 04d9 14000000 		.4byte	.LFE80
 4222 04dd 0400     		.2byte	0x4
 4223 04df F3       		.byte	0xf3
 4224 04e0 01       		.uleb128 0x1
 4225 04e1 50       		.byte	0x50
 4226 04e2 9F       		.byte	0x9f
 4227 04e3 00000000 		.4byte	0
 4228 04e7 00000000 		.4byte	0
 4229              		.section	.debug_aranges,"",%progbits
 4230 0000 B4000000 		.4byte	0xb4
 4231 0004 0200     		.2byte	0x2
 4232 0006 00000000 		.4byte	.Ldebug_info0
 4233 000a 04       		.byte	0x4
 4234 000b 00       		.byte	0
 4235 000c 0000     		.2byte	0
 4236 000e 0000     		.2byte	0
 4237 0010 00000000 		.4byte	.LFB63
 4238 0014 14000000 		.4byte	.LFE63-.LFB63
 4239 0018 00000000 		.4byte	.LFB64
 4240 001c 08000000 		.4byte	.LFE64-.LFB64
 4241 0020 00000000 		.4byte	.LFB65
 4242 0024 40000000 		.4byte	.LFE65-.LFB65
 4243 0028 00000000 		.4byte	.LFB66
 4244 002c 04000000 		.4byte	.LFE66-.LFB66
 4245 0030 00000000 		.4byte	.LFB67
 4246 0034 3C000000 		.4byte	.LFE67-.LFB67
 4247 0038 00000000 		.4byte	.LFB69
 4248 003c 14000000 		.4byte	.LFE69-.LFB69
 4249 0040 00000000 		.4byte	.LFB70
 4250 0044 1C000000 		.4byte	.LFE70-.LFB70
 4251 0048 00000000 		.4byte	.LFB71
 4252 004c 20000000 		.4byte	.LFE71-.LFB71
 4253 0050 00000000 		.4byte	.LFB72
 4254 0054 40000000 		.4byte	.LFE72-.LFB72
 4255 0058 00000000 		.4byte	.LFB73
 4256 005c 14000000 		.4byte	.LFE73-.LFB73
 4257 0060 00000000 		.4byte	.LFB68
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 85


 4258 0064 00040000 		.4byte	.LFE68-.LFB68
 4259 0068 00000000 		.4byte	.LFB74
 4260 006c 14000000 		.4byte	.LFE74-.LFB74
 4261 0070 00000000 		.4byte	.LFB75
 4262 0074 10000000 		.4byte	.LFE75-.LFB75
 4263 0078 00000000 		.4byte	.LFB76
 4264 007c 10000000 		.4byte	.LFE76-.LFB76
 4265 0080 00000000 		.4byte	.LFB77
 4266 0084 14000000 		.4byte	.LFE77-.LFB77
 4267 0088 00000000 		.4byte	.LFB78
 4268 008c 14000000 		.4byte	.LFE78-.LFB78
 4269 0090 00000000 		.4byte	.LFB79
 4270 0094 14000000 		.4byte	.LFE79-.LFB79
 4271 0098 00000000 		.4byte	.LFB80
 4272 009c 14000000 		.4byte	.LFE80-.LFB80
 4273 00a0 00000000 		.4byte	.LFB81
 4274 00a4 10000000 		.4byte	.LFE81-.LFB81
 4275 00a8 00000000 		.4byte	.LFB82
 4276 00ac 10000000 		.4byte	.LFE82-.LFB82
 4277 00b0 00000000 		.4byte	0
 4278 00b4 00000000 		.4byte	0
 4279              		.section	.debug_ranges,"",%progbits
 4280              	.Ldebug_ranges0:
 4281 0000 00000000 		.4byte	.LFB63
 4282 0004 14000000 		.4byte	.LFE63
 4283 0008 00000000 		.4byte	.LFB64
 4284 000c 08000000 		.4byte	.LFE64
 4285 0010 00000000 		.4byte	.LFB65
 4286 0014 40000000 		.4byte	.LFE65
 4287 0018 00000000 		.4byte	.LFB66
 4288 001c 04000000 		.4byte	.LFE66
 4289 0020 00000000 		.4byte	.LFB67
 4290 0024 3C000000 		.4byte	.LFE67
 4291 0028 00000000 		.4byte	.LFB69
 4292 002c 14000000 		.4byte	.LFE69
 4293 0030 00000000 		.4byte	.LFB70
 4294 0034 1C000000 		.4byte	.LFE70
 4295 0038 00000000 		.4byte	.LFB71
 4296 003c 20000000 		.4byte	.LFE71
 4297 0040 00000000 		.4byte	.LFB72
 4298 0044 40000000 		.4byte	.LFE72
 4299 0048 00000000 		.4byte	.LFB73
 4300 004c 14000000 		.4byte	.LFE73
 4301 0050 00000000 		.4byte	.LFB68
 4302 0054 00040000 		.4byte	.LFE68
 4303 0058 00000000 		.4byte	.LFB74
 4304 005c 14000000 		.4byte	.LFE74
 4305 0060 00000000 		.4byte	.LFB75
 4306 0064 10000000 		.4byte	.LFE75
 4307 0068 00000000 		.4byte	.LFB76
 4308 006c 10000000 		.4byte	.LFE76
 4309 0070 00000000 		.4byte	.LFB77
 4310 0074 14000000 		.4byte	.LFE77
 4311 0078 00000000 		.4byte	.LFB78
 4312 007c 14000000 		.4byte	.LFE78
 4313 0080 00000000 		.4byte	.LFB79
 4314 0084 14000000 		.4byte	.LFE79
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 86


 4315 0088 00000000 		.4byte	.LFB80
 4316 008c 14000000 		.4byte	.LFE80
 4317 0090 00000000 		.4byte	.LFB81
 4318 0094 10000000 		.4byte	.LFE81
 4319 0098 00000000 		.4byte	.LFB82
 4320 009c 10000000 		.4byte	.LFE82
 4321 00a0 00000000 		.4byte	0
 4322 00a4 00000000 		.4byte	0
 4323              		.section	.debug_line,"",%progbits
 4324              	.Ldebug_line0:
 4325 0000 D7040000 		.section	.debug_str,"MS",%progbits,1
 4325      0200F801 
 4325      00000201 
 4325      FB0E0D00 
 4325      01010101 
 4326              	.LASF26:
 4327 0000 70756C73 		.ascii	"pulse_microseconds\000"
 4327      655F6D69 
 4327      63726F73 
 4327      65636F6E 
 4327      647300
 4328              	.LASF79:
 4329 0013 636F6465 		.ascii	"code\000"
 4329      00
 4330              	.LASF118:
 4331 0018 72656164 		.ascii	"read_float\000"
 4331      5F666C6F 
 4331      617400
 4332              	.LASF74:
 4333 0023 68656C70 		.ascii	"helper_var\000"
 4333      65725F76 
 4333      617200
 4334              	.LASF35:
 4335 002e 666C6167 		.ascii	"flags\000"
 4335      7300
 4336              	.LASF97:
 4337 0034 53746174 		.ascii	"Status_Control_InterruptEnable\000"
 4337      75735F43 
 4337      6F6E7472 
 4337      6F6C5F49 
 4337      6E746572 
 4338              	.LASF112:
 4339 0053 73657474 		.ascii	"settings_read_build_info\000"
 4339      696E6773 
 4339      5F726561 
 4339      645F6275 
 4339      696C645F 
 4340              	.LASF61:
 4341 006c 73797374 		.ascii	"system_init\000"
 4341      656D5F69 
 4341      6E697400 
 4342              	.LASF30:
 4343 0078 73746174 		.ascii	"status_report_mask\000"
 4343      75735F72 
 4343      65706F72 
 4343      745F6D61 
 4343      736B00
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 87


 4344              	.LASF11:
 4345 008b 756E7369 		.ascii	"unsigned int\000"
 4345      676E6564 
 4345      20696E74 
 4345      00
 4346              	.LASF50:
 4347 0098 725F6F76 		.ascii	"r_override\000"
 4347      65727269 
 4347      646500
 4348              	.LASF82:
 4349 00a3 73797374 		.ascii	"system_set_exec_motion_override_flag\000"
 4349      656D5F73 
 4349      65745F65 
 4349      7865635F 
 4349      6D6F7469 
 4350              	.LASF6:
 4351 00c8 5F5F696E 		.ascii	"__int32_t\000"
 4351      7433325F 
 4351      7400
 4352              	.LASF100:
 4353 00d2 7265706F 		.ascii	"report_execute_startup_message\000"
 4353      72745F65 
 4353      78656375 
 4353      74655F73 
 4353      74617274 
 4354              	.LASF65:
 4355 00f1 73797374 		.ascii	"system_convert_array_steps_to_mpos\000"
 4355      656D5F63 
 4355      6F6E7665 
 4355      72745F61 
 4355      72726179 
 4356              	.LASF91:
 4357 0114 7379735F 		.ascii	"sys_probe_state\000"
 4357      70726F62 
 4357      655F7374 
 4357      61746500 
 4358              	.LASF108:
 4359 0124 7265706F 		.ascii	"report_feedback_message\000"
 4359      72745F66 
 4359      65656462 
 4359      61636B5F 
 4359      6D657373 
 4360              	.LASF29:
 4361 013c 73746570 		.ascii	"stepper_idle_lock_time\000"
 4361      7065725F 
 4361      69646C65 
 4361      5F6C6F63 
 4361      6B5F7469 
 4362              	.LASF32:
 4363 0153 6172635F 		.ascii	"arc_tolerance\000"
 4363      746F6C65 
 4363      72616E63 
 4363      6500
 4364              	.LASF78:
 4365 0161 73797374 		.ascii	"system_set_exec_alarm\000"
 4365      656D5F73 
 4365      65745F65 
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 88


 4365      7865635F 
 4365      616C6172 
 4366              	.LASF121:
 4367 0177 73657474 		.ascii	"settings_store_global_setting\000"
 4367      696E6773 
 4367      5F73746F 
 4367      72655F67 
 4367      6C6F6261 
 4368              	.LASF106:
 4369 0195 7265706F 		.ascii	"report_grbl_settings\000"
 4369      72745F67 
 4369      72626C5F 
 4369      73657474 
 4369      696E6773 
 4370              	.LASF120:
 4371 01aa 73657474 		.ascii	"settings_store_startup_line\000"
 4371      696E6773 
 4371      5F73746F 
 4371      72655F73 
 4371      74617274 
 4372              	.LASF124:
 4373 01c6 433A5C55 		.ascii	"C:\\Users\\miker\\Documents\\My Libraries\\Code_Rep"
 4373      73657273 
 4373      5C6D696B 
 4373      65725C44 
 4373      6F63756D 
 4374 01f4 6F5C5053 		.ascii	"o\\PSoC_Grbl\\PSoC_Grbl.cydsn\000"
 4374      6F435F47 
 4374      72626C5C 
 4374      50536F43 
 4374      5F477262 
 4375              	.LASF24:
 4376 0210 61636365 		.ascii	"acceleration\000"
 4376      6C657261 
 4376      74696F6E 
 4376      00
 4377              	.LASF38:
 4378 021d 686F6D69 		.ascii	"homing_seek_rate\000"
 4378      6E675F73 
 4378      65656B5F 
 4378      72617465 
 4378      00
 4379              	.LASF67:
 4380 022e 73797374 		.ascii	"system_convert_axis_steps_to_mpos\000"
 4380      656D5F63 
 4380      6F6E7665 
 4380      72745F61 
 4380      7869735F 
 4381              	.LASF37:
 4382 0250 686F6D69 		.ascii	"homing_feed_rate\000"
 4382      6E675F66 
 4382      6565645F 
 4382      72617465 
 4382      00
 4383              	.LASF98:
 4384 0261 6973725F 		.ascii	"isr_Control_ClearPending\000"
 4384      436F6E74 
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 89


 4384      726F6C5F 
 4384      436C6561 
 4384      7250656E 
 4385              	.LASF64:
 4386 027a 73746570 		.ascii	"steps\000"
 4386      7300
 4387              	.LASF16:
 4388 0280 666C6F61 		.ascii	"float\000"
 4388      7400
 4389              	.LASF116:
 4390 0286 7265706F 		.ascii	"report_status_message\000"
 4390      72745F73 
 4390      74617475 
 4390      735F6D65 
 4390      73736167 
 4391              	.LASF111:
 4392 029c 73745F67 		.ascii	"st_go_idle\000"
 4392      6F5F6964 
 4392      6C6500
 4393              	.LASF10:
 4394 02a7 6C6F6E67 		.ascii	"long long unsigned int\000"
 4394      206C6F6E 
 4394      6720756E 
 4394      7369676E 
 4394      65642069 
 4395              	.LASF49:
 4396 02be 665F6F76 		.ascii	"f_override\000"
 4396      65727269 
 4396      646500
 4397              	.LASF114:
 4398 02c9 73657474 		.ascii	"settings_store_build_info\000"
 4398      696E6773 
 4398      5F73746F 
 4398      72655F62 
 4398      75696C64 
 4399              	.LASF4:
 4400 02e3 5F5F7569 		.ascii	"__uint16_t\000"
 4400      6E743136 
 4400      5F7400
 4401              	.LASF68:
 4402 02ee 73797374 		.ascii	"system_check_travel_limits\000"
 4402      656D5F63 
 4402      6865636B 
 4402      5F747261 
 4402      76656C5F 
 4403              	.LASF52:
 4404 0309 7370696E 		.ascii	"spindle_stop_ovr\000"
 4404      646C655F 
 4404      73746F70 
 4404      5F6F7672 
 4404      00
 4405              	.LASF76:
 4406 031a 76616C75 		.ascii	"value\000"
 4406      6500
 4407              	.LASF86:
 4408 0320 73797374 		.ascii	"system_clear_exec_accessory_overrides\000"
 4408      656D5F63 
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 90


 4408      6C656172 
 4408      5F657865 
 4408      635F6163 
 4409              	.LASF43:
 4410 0346 61626F72 		.ascii	"abort\000"
 4410      7400
 4411              	.LASF40:
 4412 034c 686F6D69 		.ascii	"homing_pulloff\000"
 4412      6E675F70 
 4412      756C6C6F 
 4412      666600
 4413              	.LASF69:
 4414 035b 74617267 		.ascii	"target\000"
 4414      657400
 4415              	.LASF96:
 4416 0362 65786563 		.ascii	"exec_lcd_status\000"
 4416      5F6C6364 
 4416      5F737461 
 4416      74757300 
 4417              	.LASF44:
 4418 0372 73757370 		.ascii	"suspend\000"
 4418      656E6400 
 4419              	.LASF92:
 4420 037a 7379735F 		.ascii	"sys_rt_exec_state\000"
 4420      72745F65 
 4420      7865635F 
 4420      73746174 
 4420      6500
 4421              	.LASF84:
 4422 038c 73797374 		.ascii	"system_clear_exec_alarm\000"
 4422      656D5F63 
 4422      6C656172 
 4422      5F657865 
 4422      635F616C 
 4423              	.LASF58:
 4424 03a4 636F6E74 		.ascii	"control_isr_handler\000"
 4424      726F6C5F 
 4424      6973725F 
 4424      68616E64 
 4424      6C657200 
 4425              	.LASF88:
 4426 03b8 73657474 		.ascii	"settings\000"
 4426      696E6773 
 4426      00
 4427              	.LASF25:
 4428 03c1 6D61785F 		.ascii	"max_travel\000"
 4428      74726176 
 4428      656C00
 4429              	.LASF18:
 4430 03cc 63686172 		.ascii	"char\000"
 4430      00
 4431              	.LASF33:
 4432 03d1 72706D5F 		.ascii	"rpm_max\000"
 4432      6D617800 
 4433              	.LASF55:
 4434 03d9 7370696E 		.ascii	"spindle_speed\000"
 4434      646C655F 
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 91


 4434      73706565 
 4434      6400
 4435              	.LASF53:
 4436 03e7 7265706F 		.ascii	"report_ovr_counter\000"
 4436      72745F6F 
 4436      76725F63 
 4436      6F756E74 
 4436      657200
 4437              	.LASF51:
 4438 03fa 7370696E 		.ascii	"spindle_speed_ovr\000"
 4438      646C655F 
 4438      73706565 
 4438      645F6F76 
 4438      7200
 4439              	.LASF12:
 4440 040c 75696E74 		.ascii	"uint8_t\000"
 4440      385F7400 
 4441              	.LASF123:
 4442 0414 73797374 		.ascii	"system.c\000"
 4442      656D2E63 
 4442      00
 4443              	.LASF70:
 4444 041d 73797374 		.ascii	"system_set_exec_state_flag\000"
 4444      656D5F73 
 4444      65745F65 
 4444      7865635F 
 4444      73746174 
 4445              	.LASF9:
 4446 0438 6C6F6E67 		.ascii	"long long int\000"
 4446      206C6F6E 
 4446      6720696E 
 4446      7400
 4447              	.LASF90:
 4448 0446 7379735F 		.ascii	"sys_probe_position\000"
 4448      70726F62 
 4448      655F706F 
 4448      73697469 
 4448      6F6E00
 4449              	.LASF115:
 4450 0459 73657474 		.ascii	"settings_restore\000"
 4450      696E6773 
 4450      5F726573 
 4450      746F7265 
 4450      00
 4451              	.LASF104:
 4452 046a 70726F74 		.ascii	"protocol_buffer_synchronize\000"
 4452      6F636F6C 
 4452      5F627566 
 4452      6665725F 
 4452      73796E63 
 4453              	.LASF22:
 4454 0486 73746570 		.ascii	"steps_per_mm\000"
 4454      735F7065 
 4454      725F6D6D 
 4454      00
 4455              	.LASF102:
 4456 0493 73657474 		.ascii	"settings_read_startup_line\000"
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 92


 4456      696E6773 
 4456      5F726561 
 4456      645F7374 
 4456      61727475 
 4457              	.LASF126:
 4458 04ae 53746174 		.ascii	"Status_Control_Read\000"
 4458      75735F43 
 4458      6F6E7472 
 4458      6F6C5F52 
 4458      65616400 
 4459              	.LASF19:
 4460 04c2 63796973 		.ascii	"cyisraddress\000"
 4460      72616464 
 4460      72657373 
 4460      00
 4461              	.LASF71:
 4462 04cf 6D61736B 		.ascii	"mask\000"
 4462      00
 4463              	.LASF103:
 4464 04d4 6D635F72 		.ascii	"mc_reset\000"
 4464      65736574 
 4464      00
 4465              	.LASF89:
 4466 04dd 7379735F 		.ascii	"sys_position\000"
 4466      706F7369 
 4466      74696F6E 
 4466      00
 4467              	.LASF101:
 4468 04ea 67635F65 		.ascii	"gc_execute_line\000"
 4468      78656375 
 4468      74655F6C 
 4468      696E6500 
 4469              	.LASF27:
 4470 04fa 73746570 		.ascii	"step_invert_mask\000"
 4470      5F696E76 
 4470      6572745F 
 4470      6D61736B 
 4470      00
 4471              	.LASF21:
 4472 050b 6C6F6E67 		.ascii	"long double\000"
 4472      20646F75 
 4472      626C6500 
 4473              	.LASF13:
 4474 0517 75696E74 		.ascii	"uint16_t\000"
 4474      31365F74 
 4474      00
 4475              	.LASF23:
 4476 0520 6D61785F 		.ascii	"max_rate\000"
 4476      72617465 
 4476      00
 4477              	.LASF94:
 4478 0529 7379735F 		.ascii	"sys_rt_exec_motion_override\000"
 4478      72745F65 
 4478      7865635F 
 4478      6D6F7469 
 4478      6F6E5F6F 
 4479              	.LASF46:
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 93


 4480 0545 73746570 		.ascii	"step_control\000"
 4480      5F636F6E 
 4480      74726F6C 
 4480      00
 4481              	.LASF110:
 4482 0552 6D635F68 		.ascii	"mc_homing_cycle\000"
 4482      6F6D696E 
 4482      675F6379 
 4482      636C6500 
 4483              	.LASF80:
 4484 0562 73797374 		.ascii	"system_set_exec_alarm_flag\000"
 4484      656D5F73 
 4484      65745F65 
 4484      7865635F 
 4484      616C6172 
 4485              	.LASF2:
 4486 057d 73686F72 		.ascii	"short int\000"
 4486      7420696E 
 4486      7400
 4487              	.LASF75:
 4488 0587 70617261 		.ascii	"parameter\000"
 4488      6D657465 
 4488      7200
 4489              	.LASF7:
 4490 0591 6C6F6E67 		.ascii	"long int\000"
 4490      20696E74 
 4490      00
 4491              	.LASF87:
 4492 059a 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4492      52784275 
 4492      66666572 
 4492      00
 4493              	.LASF56:
 4494 05a7 73797374 		.ascii	"system_t\000"
 4494      656D5F74 
 4494      00
 4495              	.LASF54:
 4496 05b0 7265706F 		.ascii	"report_wco_counter\000"
 4496      72745F77 
 4496      636F5F63 
 4496      6F756E74 
 4496      657200
 4497              	.LASF45:
 4498 05c3 736F6674 		.ascii	"soft_limit\000"
 4498      5F6C696D 
 4498      697400
 4499              	.LASF105:
 4500 05ce 7265706F 		.ascii	"report_grbl_help\000"
 4500      72745F67 
 4500      72626C5F 
 4500      68656C70 
 4500      00
 4501              	.LASF107:
 4502 05df 7265706F 		.ascii	"report_gcode_modes\000"
 4502      72745F67 
 4502      636F6465 
 4502      5F6D6F64 
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 94


 4502      657300
 4503              	.LASF109:
 4504 05f2 7265706F 		.ascii	"report_ngc_parameters\000"
 4504      72745F6E 
 4504      67635F70 
 4504      6172616D 
 4504      65746572 
 4505              	.LASF77:
 4506 0608 73797374 		.ascii	"system_clear_exec_state_flag\000"
 4506      656D5F63 
 4506      6C656172 
 4506      5F657865 
 4506      635F7374 
 4507              	.LASF3:
 4508 0625 5F5F7569 		.ascii	"__uint8_t\000"
 4508      6E74385F 
 4508      7400
 4509              	.LASF47:
 4510 062f 70726F62 		.ascii	"probe_succeeded\000"
 4510      655F7375 
 4510      63636565 
 4510      64656400 
 4511              	.LASF95:
 4512 063f 7379735F 		.ascii	"sys_rt_exec_accessory_override\000"
 4512      72745F65 
 4512      7865635F 
 4512      61636365 
 4512      73736F72 
 4513              	.LASF20:
 4514 065e 73697A65 		.ascii	"sizetype\000"
 4514      74797065 
 4514      00
 4515              	.LASF57:
 4516 0667 73797374 		.ascii	"system_control_get_state\000"
 4516      656D5F63 
 4516      6F6E7472 
 4516      6F6C5F67 
 4516      65745F73 
 4517              	.LASF8:
 4518 0680 6C6F6E67 		.ascii	"long unsigned int\000"
 4518      20756E73 
 4518      69676E65 
 4518      6420696E 
 4518      7400
 4519              	.LASF62:
 4520 0692 73797374 		.ascii	"system_flag_wco_change\000"
 4520      656D5F66 
 4520      6C61675F 
 4520      77636F5F 
 4520      6368616E 
 4521              	.LASF14:
 4522 06a9 696E7433 		.ascii	"int32_t\000"
 4522      325F7400 
 4523              	.LASF99:
 4524 06b1 6973725F 		.ascii	"isr_Control_StartEx\000"
 4524      436F6E74 
 4524      726F6C5F 
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 95


 4524      53746172 
 4524      74457800 
 4525              	.LASF1:
 4526 06c5 756E7369 		.ascii	"unsigned char\000"
 4526      676E6564 
 4526      20636861 
 4526      7200
 4527              	.LASF59:
 4528 06d3 73797374 		.ascii	"system_execute_startup\000"
 4528      656D5F65 
 4528      78656375 
 4528      74655F73 
 4528      74617274 
 4529              	.LASF122:
 4530 06ea 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 4530      4320342E 
 4530      392E3320 
 4530      32303135 
 4530      30333033 
 4531 071d 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 4531      20726576 
 4531      6973696F 
 4531      6E203232 
 4531      31323230 
 4532 0750 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4532      66756E63 
 4532      74696F6E 
 4532      2D736563 
 4532      74696F6E 
 4533              	.LASF63:
 4534 0778 6C696E65 		.ascii	"line\000"
 4534      00
 4535              	.LASF125:
 4536 077d 73797374 		.ascii	"system_check_safety_door_ajar\000"
 4536      656D5F63 
 4536      6865636B 
 4536      5F736166 
 4536      6574795F 
 4537              	.LASF42:
 4538 079b 73746174 		.ascii	"state\000"
 4538      6500
 4539              	.LASF93:
 4540 07a1 7379735F 		.ascii	"sys_rt_exec_alarm\000"
 4540      72745F65 
 4540      7865635F 
 4540      616C6172 
 4540      6D00
 4541              	.LASF81:
 4542 07b3 73797374 		.ascii	"system_clear_exec_alarm_flag\000"
 4542      656D5F63 
 4542      6C656172 
 4542      5F657865 
 4542      635F616C 
 4543              	.LASF60:
 4544 07d0 73746174 		.ascii	"status_code\000"
 4544      75735F63 
 4544      6F646500 
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 96


 4545              	.LASF119:
 4546 07dc 7472756E 		.ascii	"trunc\000"
 4546      6300
 4547              	.LASF72:
 4548 07e2 73797374 		.ascii	"system_execute_line\000"
 4548      656D5F65 
 4548      78656375 
 4548      74655F6C 
 4548      696E6500 
 4549              	.LASF0:
 4550 07f6 7369676E 		.ascii	"signed char\000"
 4550      65642063 
 4550      68617200 
 4551              	.LASF39:
 4552 0802 686F6D69 		.ascii	"homing_debounce_delay\000"
 4552      6E675F64 
 4552      65626F75 
 4552      6E63655F 
 4552      64656C61 
 4553              	.LASF5:
 4554 0818 73686F72 		.ascii	"short unsigned int\000"
 4554      7420756E 
 4554      7369676E 
 4554      65642069 
 4554      6E7400
 4555              	.LASF113:
 4556 082b 7265706F 		.ascii	"report_build_info\000"
 4556      72745F62 
 4556      75696C64 
 4556      5F696E66 
 4556      6F00
 4557              	.LASF34:
 4558 083d 72706D5F 		.ascii	"rpm_min\000"
 4558      6D696E00 
 4559              	.LASF41:
 4560 0845 73657474 		.ascii	"settings_t\000"
 4560      696E6773 
 4560      5F7400
 4561              	.LASF85:
 4562 0850 73797374 		.ascii	"system_clear_exec_motion_overrides\000"
 4562      656D5F63 
 4562      6C656172 
 4562      5F657865 
 4562      635F6D6F 
 4563              	.LASF15:
 4564 0873 75696E74 		.ascii	"uint8\000"
 4564      3800
 4565              	.LASF17:
 4566 0879 646F7562 		.ascii	"double\000"
 4566      6C6500
 4567              	.LASF36:
 4568 0880 686F6D69 		.ascii	"homing_dir_mask\000"
 4568      6E675F64 
 4568      69725F6D 
 4568      61736B00 
 4569              	.LASF83:
 4570 0890 73797374 		.ascii	"system_set_exec_accessory_override_flag\000"
ARM GAS  C:\Users\miker\AppData\Local\Temp\cciqYobe.s 			page 97


 4570      656D5F73 
 4570      65745F65 
 4570      7865635F 
 4570      61636365 
 4571              	.LASF31:
 4572 08b8 6A756E63 		.ascii	"junction_deviation\000"
 4572      74696F6E 
 4572      5F646576 
 4572      69617469 
 4572      6F6E00
 4573              	.LASF48:
 4574 08cb 686F6D69 		.ascii	"homing_axis_lock\000"
 4574      6E675F61 
 4574      7869735F 
 4574      6C6F636B 
 4574      00
 4575              	.LASF73:
 4576 08dc 63686172 		.ascii	"char_counter\000"
 4576      5F636F75 
 4576      6E746572 
 4576      00
 4577              	.LASF66:
 4578 08e9 706F7369 		.ascii	"position\000"
 4578      74696F6E 
 4578      00
 4579              	.LASF28:
 4580 08f2 6469725F 		.ascii	"dir_invert_mask\000"
 4580      696E7665 
 4580      72745F6D 
 4580      61736B00 
 4581              	.LASF117:
 4582 0902 7265706F 		.ascii	"report_startup_line\000"
 4582      72745F73 
 4582      74617274 
 4582      75705F6C 
 4582      696E6500 
 4583              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
